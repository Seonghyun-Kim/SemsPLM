@{
    Layout = null;
}

<div>
    <div class="user_tree clearfix">
        <div class="treeButtonWrap">
            <h3><i class="fas fa-building"></i> &nbsp;고객사/차종</h3>
        </div>
        <div id="OemCarTree" style="overflow-y: auto;"></div>
    </div>
    <div class="user_list">
        <div id="TempChart"></div>
        <div id="CustomerSchedule"></div>
    </div>
</div>



<script type="text/javascript">
    $(function () {
        var CarData = {};
        var TempChart$ = $('#TempChart');
        var CustomerSchedule$ = $('#CustomerSchedule');
        var TotalProjMngt = @Html.Raw(Json.Encode(ViewBag.TotalProjMngt));
        var OemCarTree$ = $('#OemCarTree');
        OemCarTree$.jqxTree({
            width: '100%',
            height: '93%',
            source: TotalProjMngt,
        });

        CustomerSchedule$.attr('hidden', true);

        OemCarTree$.on('select', function (event) {
            var args = event.args;
            var item = OemCarTree$.jqxTree('getItem', args.element);
            
            CarData = {};
            CarData.Car_Lib_OID = item.id;

            if (item.type == "@Common.Constant.PmsConstant.TYPE_OEM") {
                //CustomerSchedule$
                CustomerSchedule$.attr('hidden', true);
                TempChart$.append("<div>12342142321312</div>");
            } else if (item.type == "@Common.Constant.PmsConstant.TYPE_CAR") {
                TempChart$.children().remove();
                CustomerSchedule$.attr('hidden', false);
                getCustomerScheduleList(CustomerSource, CustomerSchedule$, CarData);
            }
            
        });
        
        var CustomerSource = {
            dataType: "json",
            dataFields: [
                { name: 'OID', type: 'number' },
                { name: 'Car_Lib_OID', type: 'number' },
                { name: 'Name', type: 'string' },
                { name: 'Ord', type: 'number' },
                { name: 'StartDt', type: 'date' },
            ],
        };

        CustomerSchedule$.jqxGrid({
            theme: "kdnc",
            width: '100%',
            height: '100%',
            rowsheight: 28,
            columnsheight: 30,
            sortable: false,
            pageable: false,
            editable: true,
            editmode: 'dblclick',
            selectionmode: 'checkbox',
            showtoolbar: true,
            toolbarheight: 45,
            columns: [
                {
                    text: 'NO', width: '5%', cellsalign: 'center', columntype: 'number', align: 'center',
                    cellsrenderer: function (row, column, value) {
                        return "<div style='width:100%;height:100%;text-align:center;vertical-align:middle;line-height:1.9;'>" + (value + 1) + "</div>";
                    }
                },
                { text: '차종', dataField: 'Car_Lib_OID', width: '15%', align: 'center', cellsalign: 'center', hidden:'true' },
                { text: '고객일정명', dataField: 'Name', width: '70%', align: 'center', cellsalign: 'left', },
                { text: '순서', dataField: 'Ord', width: '10%', align: 'center', cellsalign: 'center', hidden: 'true'},
                {
                    text: '시작일', dataField: 'StartDt', cellsFormat: 'yyyy-MM-dd', width: '15%', align: 'center', columntype: 'datetimeinput', cellsalign: 'center',
                    
                },
            ],
            rendertoolbar: function (toolBar) {
                toolBar.empty();
                var container = $("<div class='lGridComponent' ></div>");
                var TempAddButton = $("<button class='custom-button'><i class='fas fa-exchange-alt'></i> 템플릿 불러오기</button>").jqxButton();
                var AddButton = $("<button class='custom-button'><i class='fas fa-plus'></i> 행 추가</button>").jqxButton();
                var deleteButton = $("<button class='custom-button'><i class='fas fa-minus'></i> 행 삭제</button>").jqxButton();
                var saveButton = $("<button class='custom-button'><i class='fas fa-save'></i> 저장</button>").jqxButton();

                container.append(TempAddButton);
                container.append(AddButton);
                container.append(deleteButton);
                container.append(saveButton);

                toolBar.append(container);

                TempAddButton.on('click', function () {
                    var selectedItem = OemCarTree$.jqxTree('selectedItem');
                    if (selectedItem == null) {
                        alert('차종을 선택해주세요.');
                        return;
                    }

                    OpenLoadTemplateDialog(null, null, CustomerSchedule$, '/Pms/dlgCustomerScheduleTemplateLoad', '템플릿 불러오기', CarData.Car_Lib_OID);
                });

                AddButton.on('click', function () {
                    var selectedItem = OemCarTree$.jqxTree('selectedItem');
                    if (selectedItem == null) {
                        alert('차종을 선택해주세요.');
                        return;
                    }
                    CustomerSchedule$.jqxGrid('addrow', null, {
                        "Car_Lib_OID": selectedItem.id,
                        "Name": null,
                        "Ord": null,
                        "StartDt": null
                    }, 'last');
                });

                deleteButton.on('click', function () {
                    //CustomerSchedule$.jqxGrid("source").loadeddata;
                    //CustomerSchedule$.jqxGrid('updatebounddata');
                    var CustomerScheduleItem = CustomerSchedule$.jqxGrid('selectedrowindexes');

                    if (CustomerScheduleItem == null || CustomerScheduleItem == undefined || CustomerScheduleItem.length <= 0) {
                        alert('삭제할 행을 선택하여 주세요');
                        return;
                    }
                    if (!confirm('삭제하시겠습니까?')) {
                        return;
                    }

                    for (var i = CustomerScheduleItem.length - 1; i >= 0; i--) {
                        var id = CustomerSchedule$.jqxGrid('getrowid', CustomerScheduleItem[i]);
                        CustomerSchedule$.jqxGrid('deleterow', id);
                    }
                });

                saveButton.on('click', function () {
                    var rows = CustomerSchedule$.jqxGrid('getrows');

                    RequestData("/Pms/InsProjMngtCustomerSchedule", { _param: rows, Car : CarData.Car_Lib_OID }, function (res) {
                        getCustomerScheduleList(CustomerSource, CustomerSchedule$, CarData);
                    })
                });
            }
        });

        CustomerSchedule$.on('cellvaluechanged', function (event) {
            var args = event.args;
            var value = args.value;
            var OldValue = args.oldvalue;
            var dataField = args.datafield;
            //console.log(dataField);
            if (dataField == 'StartDt') {

            }
        });

    });

    function getCustomerScheduleList(_Source, _Grid$, _Param) {
        RequestData("/Pms/SelProjMngtCustomerSchedule", _Param, function (res) {
            PrintJqxGrid(_Source, _Grid$, res);
        });
    }


</script>