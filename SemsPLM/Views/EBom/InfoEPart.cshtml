
@{
    Layout = null;
}
<div id="InfoEPart_@ViewBag.OID" class="info_project clearfix">
    <div class="info_menubar">
        <ul>
            <li class="tab info_focus" info="properties"><i class="fas fa-info-circle"></i> 기본 정보</li>
            <li class="tab" info="Structure"><i class="fas fa-exclamation"></i> EBOM구조</li>
            <li class="tab" info="Reverse"><i class="fas fa-file-medical"></i> 역전개 보기</li>
            <li class="tab" info="Revhistory"><i class="fas fa-stream"></i> 개정이력</li>
            <li class="tab" info="Apphis"><i class="fas fa-clipboard-list"></i> 결재이력</li>
            @*<li class="tab" info="Downhis"><i class="fas fa-users"></i> 다운로드 이력</li>*@
        </ul>
    </div>
    <div class="EPart_content">
        <div class="project_basic clearfix">
            <div class="basic_info">
                <h3>@Model.Name</h3>
                <p>품명 : <span>@Model.Title</span></p>
            </div>
            <div class="basic_image">
                <div class="ModifiableRevCustomBox_@ViewBag.OID">
                    @if (Model.Thumbnail != null)
                    {
                        <img class="img-thumbnail" src="@Url.Content("~/images/Thumbnail/")@Model.Thumbnail" style="height:90px;" />
                    }
                </div>
                <div class="ModifiableRevEditCustomBox_@ViewBag.OID">
                    <input type="file" name="file" multiple="true" id="imageDrag_@ViewBag.OID" style="display:none;">
                    <div class="image_inputbox" id="dropZone_@ViewBag.OID" style="float:left;">이미지</div>
                    <ul class="image_thumbnail" id="uploadResult_@ViewBag.OID" style="float:left;">
                        @if (Model.Thumbnail != null)
                        {
                            <li>
                                <img class="img-thumbnail" src="@Url.Content("~/images/Thumbnail/")@Model.Thumbnail" />
                                <i class="fas fa-window-close"></i>
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <div class="basic_status">
                <div class="pointer_wrap">
                    @for (int i = 0; i < ViewBag.Status.Count; i++)
                    {
                        <div class="pointer" data-type="@ViewBag.Status[i].Type" data-Status="@ViewBag.Status[i].StatusOID" style="z-index: @(ViewBag.Status.Count - i);">
                            <div class="project_status">@ViewBag.Status[i].StatusNm</div>
                        </div>
                    }
                </div>
                <p>설명 : <span></span></p>
            </div>
        </div>


        <div id="properties" class="basic_grid">
            <div class="propertiesInfo">
                <table class="tableTopButtonBox">
                    <tbody>
                        <tr>
                            <td>
                                <h3 style="padding-left:8px;"><i class="fas fa-file-alt"></i> &nbsp;부품 PROFILE</h3>
                            </td>
                            <td style="text-align: right;">
                                @if (Model.BPolicy.Name == Common.Constant.EBomConstant.POLICY_EPART_PREPARE || Model.BPolicy.Name == Common.Constant.EBomConstant.POLICY_EPART_REJECT)
                                {
                                    <button id="EditBtn_@ViewBag.OID" class="custom-button"><i class="fas fa-edit"></i> 수정</button>
                                    <button id="EditSaveBtn_@ViewBag.OID" hidden="hidden" class="custom-button"><i class="fas fa-check-square"></i> 저장</button>
                                    <button id="EditCancelBtn_@ViewBag.OID" hidden="hidden" class="custom-button"><i class="fas fa-window-close"></i> 취소</button>
                                }
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="scrollY" style="height:625px;">
                    <table class="infoTable">
                        <colgroup>
                            <col style="width:12%;" />
                            <col style="width:auto;" />
                            <col style="width:12%;" />
                            <col style="width:auto;" />
                            <col style="width:12%;" />
                            <col style="width:auto;" />
                        </colgroup>
                        <tr>
                            <th>도면/부품번호</th>
                            <td>
                                <input type="text" value="@Model.Name" readonly="readonly" id="InfoEPartName_@ViewBag.OID" />
                            </td>
                            <th>품명</th>
                            <td colspan="3">
                                <input type="text" value="@Model.Title" class="ModifiableRev_@ViewBag.OID" readonly="readonly" id="InfoEPartTitle_@ViewBag.OID" />
                            </td>

                        </tr>

                        <tr>
                            <th>리비전</th>
                            <td>
                                <input type="text" value="@Model.Revision" readonly="readonly" />
                            </td>
                            <th>구분</th>
                            <td>
                                <input type="text" class="ModifiableCustomBox_@ViewBag.OID" id="InfoEPartDivision_@ViewBag.OID" readonly="readonly" />
                                <div class="ModifiableEditCustomBox_@ViewBag.OID">
                                    <div id="InfoEPartDivisionAssemblyDrawing" class="EPartRadioBtn" group="EPartDivision_@ViewBag.OID" data-value="@Common.Constant.EBomConstant.DIV_ASSEMBLY">조립도</div>
                                    <div id="InfoEPartDivisionSingleDrawing" class="EPartRadioBtn" group="EPartDivision_@ViewBag.OID" data-value="@Common.Constant.EBomConstant.DIV_SINGLE">단품도</div>
                                    <div id="InfoEPartDivisionStandard" class="EPartRadioBtn" group="EPartDivision_@ViewBag.OID" data-value="@Common.Constant.EBomConstant.DIV_STANDARD">스탠다드</div>
                                </div>
                            </td>
                            <th>규격</th>
                            <td>
                                <input type="text" id="InfoEPartStandard_@ViewBag.OID" value="@Model.Standard" class="ModifiableRev_@ViewBag.OID" readonly="readonly" />
                            </td>
                        </tr>

                        <!--조립도-->
                        <tr class="DivisionAssemblyDrawing_@ViewBag.OID">
                            <th>ITEM_NO</th>
                            <td>
                                <div class="InfoEPart_ITEM_NO_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID" id="InfoEPartITEM_NO1_@ViewBag.OID"></div>
                                <input type="text" value="@Model.ITEM_NoNm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                            <th>ITEM_Middle</th>
                            <td>
                                <div class="InfoEPart_ITEM_Middle_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID" id=""></div>
                                <input type="text" value="@Model.ITEM_MiddleNm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                            <th>생산지</th>
                            <td>
                                <div class="InfoEPart_Place_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID" id=""></div>
                                <input type="text" value="@Model.Production_PlaceNm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                        </tr>
                        <tr class="DivisionAssemblyDrawing_@ViewBag.OID">
                            <th>제품구분</th>
                            <td>
                                <div class="InfoEPart_epartType_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID"></div>
                                <input type="text" value="@Model.EPartTypeNm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                            <th>BLOCK NO</th>
                            <td colspan="3">
                                <div class="InfoEPart_Block_No_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID" id="InfoEPartBlockNo1_@ViewBag.OID"></div>
                                <input type="text" value="@Model.Block_NoNm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                        </tr>
                        <tr class="DivisionAssemblyDrawing_@ViewBag.OID">
                            <th>고객사</th>
                            <td>
                                <div class="InfoEPart_Oem_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID" id="InfoEPartOem1_@ViewBag.OID"></div>
                                <input type="text" value="@Model.Oem_Lib_Nm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                            <th>차종</th>
                            <td colspan="3">
                                <div class="InfoEPart_Car_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID" id="InfoEPartCar1_@ViewBag.OID"></div>
                                <input type="text" value="@Model.Car_Lib_Nm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                        </tr>
                        <tr class="DivisionAssemblyDrawing_@ViewBag.OID">
                            <th>시리얼</th>
                            <td>
                                <input type="text" maxlength="3" class="InfoEPart_Serial_@ViewBag.OID Modifiable_@ViewBag.OID" id="AssemblyDrawingSerial_@ViewBag.OID" value="@Model.Serial" readonly="readonly" />
                            </td>
                            <th>고객리비전</th>
                            <td colspan="3">
                                <input type="text" maxlength="1" class="InfoEPart_SelRev_@ViewBag.OID ModifiableRev_@ViewBag.OID" id="AssemblyDrawingSel_Revision_@Model.Serial" value="@Model.Sel_Revision" readonly="readonly" />
                            </td>
                        </tr>

                        <!--단품도-->
                        <tr class="DivisionSingleDrawing_@ViewBag.OID">
                            <th>재질</th>
                            <td>
                                <div class="InfoEPart_psize_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID"></div>
                                <input type="text" id="" value="@Model.Material_Nm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                            <th>BLOCK NO</th>
                            <td>
                                <div class="InfoEPart_Block_No_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID" id="InfoEPartBlockNo2_@ViewBag.OID"></div>
                                <input type="text" id="" value="@Model.Block_NoNm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                            <th>ITEM_NO</th>
                            <td>
                                <div class="InfoEPart_ITEM_NO_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID" id="InfoEPartITEM_NO2_@ViewBag.OID"></div>
                                <input type="text" id="" value="@Model.ITEM_NoNm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                        </tr>
                        <tr class="DivisionSingleDrawing_@ViewBag.OID">
                            <th>고객사</th>
                            <td>
                                <div class="InfoEPart_Oem_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID" id="InfoEPartOem2_@ViewBag.OID"></div>
                                <input type="text" id="" value="@Model.Oem_Lib_Nm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                            <th>차종</th>
                            <td colspan="3">
                                <div class="InfoEPart_Car_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID" id="InfoEPartCar2_@ViewBag.OID"></div>
                                <input type="text" id="" value="@Model.Car_Lib_Nm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                        </tr>
                        <tr class="DivisionSingleDrawing_@ViewBag.OID">
                            <th>시리얼</th>
                            <td>
                                <input type="text" class="InfoEPart_Serial_@ViewBag.OID Modifiable_@ViewBag.OID" id="" value="@Model.Serial" readonly="readonly" maxlength="2" />
                            </td>
                            <th>고객리비전</th>
                            <td colspan="3">
                                <input type="text" class="InfoEPart_SelRev_@ViewBag.OID ModifiableRev_@ViewBag.OID" id="" value="@Model.Sel_Revision" readonly="readonly" maxlength="1" />
                            </td>
                        </tr>

                        <!--스탠다드-->
                        <tr class="DivisionStandard_@ViewBag.OID">
                            <th>재질</th>
                            <td>
                                <div class="InfoEPart_psize_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID"></div>
                                <input type="text" id="" value="@Model.Material_Nm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                            <th>BLOCK NO</th>
                            <td>
                                <div class="InfoEPart_Block_No_@ViewBag.OID ModifiableEditCustomBox_@ViewBag.OID" id="InfoEPartBlockNo3_@ViewBag.OID"></div>
                                <input type="text" id="" value="@Model.Block_NoNm" readonly="readonly" class="ModifiableCustomBox_@ViewBag.OID" />
                            </td>
                            <th>시리얼</th>
                            <td>
                                <input type="text" id="" class="InfoEPart_Serial_@ViewBag.OID Modifiable_@ViewBag.OID" value="@Model.Serial" readonly="readonly" maxlength="8" />
                            </td>
                        </tr>

                        @*<tr>
                            <th style="vertical-align:top;line-height:40px;">세부사양</th>
                            <td colspan="5">
                                <textarea id="InfoEPartDescription_@ViewBag.OID" class="Modifiable_@ViewBag.OID" style="border:1px solid #59a3d5; height:124px; width:100%" readonly="readonly">@Model.Description</textarea>
                            </td>
                        </tr>*@

                        <tr>
                            <th>작성일</th>
                            <td>
                                <input type="text" value="@Model.CreateDt" readonly="readonly" />
                            </td>
                            <th>작성자</th>
                            <td>
                                <input type="text" value="@Model.CreateUsNm" readonly="readonly">
                            </td>
                            <th>상태</th>
                            <td>
                                <input type="text" value="@Model.BPolicy.StatusNm" readonly="readonly" />
                            </td>
                        </tr>
                        <tr>
                            <th>수정일</th>
                            <td>
                                <input type="text" value="@Model.ModifyDt" readonly="readonly" />
                            </td>
                            <th>수정자</th>
                            <td>
                                <input type="text" readonly="readonly">
                            </td>
                            <th></th>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <th style="vertical-align:top;line-height:40px;">첨부파일</th>
                            <td colspan="5">
                                <div id="InfoEPartFile_@ViewBag.OID" style="width:100%">
                                </div>
                            </td>
                        </tr>
                    </table>

                    <table class="tableTopButtonBox">
                        <tbody>
                            <tr>
                                <td>
                                    <h3 style="padding-left:8px;"><i class="fas fa-file-alt"></i> &nbsp;연관 설계변경</h3>
                                </td>
                                <td style="text-align: right;">
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div id="RelationECOInfo_@ViewBag.OID"></div>
                </div>
            </div>
        </div>
        <div id="Apphis" class="basic_grid dective">
            <div id="ApphisInfo_@ViewBag.OID">
            </div>
        </div>

        <div id="Downhis" class="basic_grid dective">
            <div id="DownhisInfo_@ViewBag.OID">
            </div>
        </div>

        <div id="Reverse" class="basic_grid dective">
            <div id="ReverseInfo_@ViewBag.OID"></div>
        </div>

        <div id="Structure" class="basic_grid dective">
            <div id="StructureInfo_@ViewBag.OID"></div>
        </div>

        <div id="Revhistory" class="basic_grid dective">
            <div id="RevhistoryInfo_@ViewBag.OID"></div>
        </div>


    </div>
</div>
<script>
    var itemno = ''; //itemno
    var place = '';  //생산지
    var etype = '';   //제품구분
    var block = '';  //blockno
    var car = '';    //차종
    var serial = ''; //시리얼
    var srev = '';    //고객리비전
    var psize = '';  //재질

    var InfoEPartName$ = $('#InfoEPartName_@ViewBag.OID');
    var InfoEPartNameSubString = InfoEPartName$.val();

    var InfoFiles = $('#InfoEPartFile_@ViewBag.OID').FileUpload({ OID : '@ViewBag.OID'});



    var name = '';
    var InfoEPartDivision = null;

    var DoubleClickEvent = true;


    $(function () {
        if ("@Model.Division" == "@Common.Constant.EBomConstant.DIV_ASSEMBLY") {
            itemno = InfoEPartNameSubString.substring(0, 1); //itemno
            place = InfoEPartNameSubString.substring(1, 2);;  //생산지
            etype = InfoEPartNameSubString.substring(2, 3);;   //제품구분
            block = InfoEPartNameSubString.substring(3, 5);;  //blockno
            car = InfoEPartNameSubString.substring(5, 8);;    //차종
            serial = InfoEPartNameSubString.substring(8, 11);; //시리얼
            srev = InfoEPartNameSubString.substring(11, 12);;    //고객리비전
        } else if ("@Model.Division" == "@Common.Constant.EBomConstant.DIV_SINGLE") {
            psize = InfoEPartNameSubString.substring(0, 1);  //재질
            block = InfoEPartNameSubString.substring(1, 4);  //blockno
            itemno = InfoEPartNameSubString.substring(4, 6); //itemno
            car = InfoEPartNameSubString.substring(6, 9);    //차종
            serial = InfoEPartNameSubString.substring(9, 11); //시리얼
            srev = InfoEPartNameSubString.substring(11, 12);    //고객리비전
        } else if ("@Model.Division" == "@Common.Constant.EBomConstant.DIV_STANDARD") {
            psize = InfoEPartNameSubString.substring(0, 1);
            block = InfoEPartNameSubString.substring(1, 4);  //blockno
            serial = InfoEPartNameSubString.substring(4, 12); //시리얼
        }

        InfoFiles.ReadOnlyMode();

        var ItemList = JSON.parse('@Html.Raw(Json.Encode(ViewBag.ItemList))');
        var placeList = JSON.parse('@Html.Raw(Json.Encode(ViewBag.placeList))');
        var epartList = JSON.parse('@Html.Raw(Json.Encode(ViewBag.epartList))');
        var oemList = JSON.parse('@Html.Raw(Json.Encode(ViewBag.oemList))');
        var sizeList = JSON.parse('@Html.Raw(Json.Encode(ViewBag.psizeList))');

        const EPartOID = '@ViewBag.OID';
        const EPartNm = '@Model.Name';
        const EPartDiv$ = $('#InfoEPart_' + EPartOID);
        const screenWidth = $('.EPart_content').width();
        const screenHeight = $('.EPart_content').height() - 152;

        const current = @Model.BPolicyOID;
        const headerStatus = $('#InfoEPart_' + EPartOID + ' .pointer_wrap .pointer');

        var rowKey = null;
        var newRowID = null;

        const EBomParam = {};

        var InfoEPart_ITEM_NO$ = $('.InfoEPart_ITEM_NO_' + EPartOID);
        var InfoEPart_ITEM_Middle$ = $('.InfoEPart_ITEM_Middle_' + EPartOID);
        var InfoEPart_Block_No$ = $('.InfoEPart_Block_No_' + EPartOID);
        var InfoEPart_Place$ = $('.InfoEPart_Place_' + EPartOID);
        var InfoEPart_epartType$ = $('.InfoEPart_epartType_' + EPartOID);
        var InfoEPart_Oem$ = $('.InfoEPart_Oem_' + EPartOID);
        var InfoEPart_Car$ = $('.InfoEPart_Car_' + EPartOID);

        var InfoEPart_psize$ = $('.InfoEPart_psize_' + EPartOID);
        var InfoEPart_Serial$ = $('.InfoEPart_Serial_' + EPartOID);
        var InfoEPart_SelRev$ = $('.InfoEPart_SelRev_' + EPartOID);

        $('div[group="EPartDivision_' + EPartOID + '"]').jqxRadioButton({ groupName: 'EPartDivision' });

        $('.ModifiableEditCustomBox_' + EPartOID).attr('hidden', true);
        $('.ModifiableRevEditCustomBox_' + EPartOID).attr('hidden', true);
        $('.EPartRadioBtn').jqxRadioButton({ width: 110, height: 32 });
        $('.InfoEPart_Block_No_' + EPartOID).jqxComboBox({ width: 330, height: 32 });
        $('.InfoEPart_ITEM_NO_' + EPartOID).jqxComboBox({ width: "100%", height: 32 });

        InfoEPartDivision$ = $('#InfoEPartDivision_' + EPartOID);

        var RelationECOParam = {};
        RelationECOParam.OID = EPartOID;

        var RelationECOSource =
        {
            dataType: "json",
            dataFields: [
                { name: 'OID' },
                { name: 'Name' },
                { name: 'BPolicyOID' },
                { name: 'BPolicy' },
                { name: 'CreateUsNm' },
                { name: 'CreateDt', type: 'date' },

                { name: 'ItemGroup' },
                { name: 'Title' },
                { name: 'ReasonChange' },
                { name: 'ReasonChangeNm' },
                { name: 'DevMP' },
                { name: 'DevMPNm' },

            ],
            id: 'OID',
        };

        var RelationECOAdapter = new $.jqx.dataAdapter(RelationECOSource);
        const RelationECOGrid$ = $('#RelationECOInfo_' + EPartOID);
        RelationECOGrid$.jqxGrid({
            width: "99.8%",
            height: 70,
            theme: "kdnc",
            sortable: true,
            toolbarHeight: 44,
            showToolbar: false,
            editable: false,
            source: RelationECOAdapter,
            ready: function () {

            },
            columns: [
                { text: '구분', datafield: 'DevMPNm', width: "10%", align: 'center', cellsalign: 'center', },
                { text: '설계변경 번호', datafield: 'Name', width: "15%", align: 'center', cellsalign: 'center', },
                { text: '제목', datafield: 'Title', width: "30%", align: 'center', cellsalign: 'center', },
                { text: '품목 그룹', datafield: 'ItemGroup', width: "15%", align: 'center', cellsalign: 'center', },
                { text: '작성일', datafield: 'CreateDt', width: "10%", align: 'center', cellsalign: 'center', cellsFormat: 'yyyy-MM-dd', },
                { text: '작성자', datafield: 'CreateUsNm', width: "10%", align: 'center', cellsalign: 'center', },
                {
                    text: '상태', datafield: 'BPolicy', width: "10%", align: 'center', cellsalign: 'center',
                    cellsrenderer: function (row, column, value) {
                        return "<div style='width:100%;height:100%;text-align:center;vertical-align:middle;line-height:1.9;'>" + value.StatusNm + "</div>";
                    }
                },
            ],
        });

        var EPartRelationECO = null;

        function getRelationECO(_Source, _Grid$, param) {
            RequestData("/Ebom/SelRelationECO", param, function (res) {
                if (res.length > 0 && res != null) {
                    EPartRelationECO = res[0].OID;
                }
                PrintJqxGrid(_Source, _Grid$, res);
            });
        }

        getRelationECO(RelationECOSource, RelationECOGrid$, RelationECOParam);

        InfoEPart_psize$.on('change', function (evt) {
            var idx = evt.args.index;
            var param = {};
            var data = evt.args.item.originalItem;
            psize = data.Name;
            //InfoEPartName();
            param.fromOID = InfoEPart_psize$.val();
            param.Code1 = 'TYPE';
            RequestData('/Manage/SelLibrary', param, function (res) {
                var blockNoSource =
                {
                    localdata: res,
                    datatype: "json",
                    datafields:
                        [
                            { name: 'KorNm', type: 'string' },
                            { name: 'OID', type: 'int' },
                            { name: 'Name', type: 'string' }
                        ]
                };
                var blockNoadapter = new $.jqx.dataAdapter(blockNoSource);
                InfoEPart_Block_No$.jqxComboBox({ source: blockNoadapter, displayMember: "KorNm", valueMember: "OID", width: 330, height: 32 });
                InfoEPart_Block_No$.jqxComboBox('selectItem', "@Model.Block_No");
            });
        });


        $('div[group="EPartDivision_@ViewBag.OID"]').on('checked', function (event) {
            InfoEPartDivision = $(this).data('value');
            if (InfoEPartDivision != "@Model.Division") {
                itemno  = '';
                place   = '';
                etype   = '';
                block   = '';
                car     = '';
                serial  = '';
                srev    = '';
                psize = '';

                //InfoEPart_ITEM_NO$.jqxComboBox('selectItem', null);
                //InfoEPart_ITEM_Middle$.jqxComboBox('selectItem', null);
                //InfoEPart_Block_No$.jqxComboBox('selectItem', null);
                //InfoEPart_Place$.jqxComboBox('selectItem', null);
                //InfoEPart_epartType$.jqxComboBox('selectItem', null);
                //InfoEPart_Oem$.jqxComboBox('selectItem', null);
                //InfoEPart_Car$.jqxComboBox('selectItem', null);
                //InfoEPart_psize$.jqxComboBox('selectItem', null);
                InfoEPart_ITEM_NO$.jqxComboBox('clearSelection');
                InfoEPart_ITEM_Middle$.jqxComboBox('clear');
                InfoEPart_Place$.jqxComboBox('clearSelection');
                InfoEPart_epartType$.jqxComboBox('clearSelection');
                InfoEPart_Block_No$.jqxComboBox('clear');
                InfoEPart_Oem$.jqxComboBox('clearSelection');
                InfoEPart_Car$.jqxComboBox('clear');
                InfoEPart_psize$.jqxComboBox('clearSelection');
                InfoEPart_Serial$.val("");
                InfoEPart_SelRev$.val("");

                InfoEPartName();

                //InfoEPart_Place$.jqxComboBox('selectItem', "@Model.Production_Place");
            }
            if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_ASSEMBLY") {
                InfoEPart_ITEM_NO$.jqxComboBox('clearSelection');
                InfoEPart_ITEM_Middle$.jqxComboBox('clear');
                InfoEPart_Place$.jqxComboBox('clearSelection');
                InfoEPart_epartType$.jqxComboBox('clearSelection');
                InfoEPart_Block_No$.jqxComboBox('clear');
                InfoEPart_Oem$.jqxComboBox('clearSelection');
                InfoEPart_Car$.jqxComboBox('clear');
                InfoEPart_psize$.jqxComboBox('clearSelection');
                //InfoEPart_Serial$.val("");
                //InfoEPart_SelRev$.val("");


                InfoEPartDivision$.val("@Common.Constant.EBomConstant.DIV_ASSEMBLY_NM");
                $('.DivisionAssemblyDrawing_' + EPartOID).removeAttr('hidden');
                $('.DivisionSingleDrawing_' + EPartOID).prop('hidden', 'hidden');
                $('.DivisionStandard_' + EPartOID).prop('hidden', 'hidden');
                var placeSource =
                {
                    localdata: placeList,
                    datatype: "json",
                    datafields:
                        [
                            { name: 'KorNm', type: 'string' },
                            { name: 'OID', type: 'int' },
                            { name: 'Name', type: 'string' },
                        ]
                };
                var placeAdapter = new $.jqx.dataAdapter(placeSource);
                InfoEPart_Place$.jqxComboBox({ source: placeAdapter, displayMember: "KorNm", valueMember: "OID", width: 330, height: 32 });
                InfoEPart_Place$.jqxComboBox('selectItem', "@Model.Production_Place");

                var epartSource =
                {
                    localdata: epartList,
                    datatype: "json",
                    datafields:
                        [
                            { name: 'KorNm', type: 'string' },
                            { name: 'OID', type: 'int' },
                            { name: 'Name', type: 'string' },
                        ]
                };
                var epartAdapter = new $.jqx.dataAdapter(epartSource);
                InfoEPart_epartType$.jqxComboBox({ source: epartAdapter, displayMember: "KorNm", valueMember: "OID", width: 330, height: 32 });
                InfoEPart_epartType$.jqxComboBox('selectItem', "@Model.EPartType");

            } else if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_SINGLE") {
                InfoEPart_ITEM_NO$.jqxComboBox('clearSelection');
                InfoEPart_ITEM_Middle$.jqxComboBox('clear');
                InfoEPart_Place$.jqxComboBox('clearSelection');
                InfoEPart_epartType$.jqxComboBox('clearSelection');
                InfoEPart_Block_No$.jqxComboBox('clear');
                InfoEPart_Oem$.jqxComboBox('clearSelection');
                InfoEPart_Car$.jqxComboBox('clear');
                InfoEPart_psize$.jqxComboBox('clearSelection');
                //InfoEPart_Serial$.val("");
                //InfoEPart_SelRev$.val("");

                InfoEPartDivision$.val("@Common.Constant.EBomConstant.DIV_SINGLE_NM");
                $('.DivisionAssemblyDrawing_' + EPartOID).prop('hidden', 'hidden');
                $('.DivisionSingleDrawing_' + EPartOID).removeAttr('hidden');
                $('.DivisionStandard_' + EPartOID).prop('hidden', 'hidden');

                //InfoEPart_Block_No$.jqxComboBox({ source: null, displayMember: "KorNm", valueMember: "OID", width: "100%", height: 32 });

                var psizeSource =
                {
                    localdata: sizeList,
                    datatype: "json",
                    datafields:
                        [
                            { name: 'KorNm', type: 'string' },
                            { name: 'OID', type: 'int' },
                            { name: 'Name', type: 'string' }
                        ]
                };
                var psizeAdapter = new $.jqx.dataAdapter(psizeSource);
                InfoEPart_psize$.jqxComboBox({ source: psizeAdapter, displayMember: "KorNm", valueMember: "OID", width: 330, height: 32 });
                InfoEPart_psize$.jqxComboBox('selectItem', "@Model.Material_OID");

            } else if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_STANDARD") {
                InfoEPart_ITEM_NO$.jqxComboBox('clearSelection');
                InfoEPart_ITEM_Middle$.jqxComboBox('clear');
                InfoEPart_Place$.jqxComboBox('clearSelection');
                InfoEPart_epartType$.jqxComboBox('clearSelection');
                InfoEPart_Block_No$.jqxComboBox('clear');
                InfoEPart_Oem$.jqxComboBox('clearSelection');
                InfoEPart_Car$.jqxComboBox('clear');
                InfoEPart_psize$.jqxComboBox('clearSelection');
                //InfoEPart_Serial$.val("");
                //InfoEPart_SelRev$.val("");

                // 선택 못하게 하는 로직 추가

                InfoEPartDivision$.val("@Common.Constant.EBomConstant.DIV_STANDARD_NM");
                $('.DivisionAssemblyDrawing_' + EPartOID).prop('hidden', 'hidden');
                $('.DivisionSingleDrawing_' + EPartOID).prop('hidden', 'hidden');
                $('.DivisionStandard_' + EPartOID).removeAttr('hidden');

                var standard;
                for (var i = 0; i < sizeList.length; i++) {
                    if (sizeList[i].KorNm == "STANDARD") {
                        standard = sizeList[i];
                        break;
                    }
                }
                var psizeSource =
                {
                    localdata: standard,
                    datatype: "json",
                    datafields:
                        [
                            { name: 'KorNm', type: 'string' },
                            { name: 'OID', type: 'int' },
                            { name: 'Name', type: 'string' }
                        ]
                };
                var psizeAdapter = new $.jqx.dataAdapter(psizeSource);
                InfoEPart_psize$.jqxComboBox({ source: psizeAdapter, displayMember: "KorNm", valueMember: "OID", width: 330, height: 32 });
                InfoEPart_psize$.jqxComboBox('selectIndex', 0);
            }
        });

        _.each($('div[group="EPartDivision_@ViewBag.OID"]'), function (item) {
            if ($(item).data('value') == "@Model.Division") {
                $(item).jqxRadioButton('check');
            }
        });


        var ItemSource =
        {
            localdata: ItemList,
            datatype: "json",
            datafields:
                [
                    { name: 'KorNm', type: 'string' },
                    { name: 'OID', type: 'int' },
                    { name: 'Code1', type: 'string' },
                    { name: 'Code2', type: 'string' }
                ]
        };
        var ItemListAdapter = new $.jqx.dataAdapter(ItemSource);
        InfoEPart_ITEM_NO$.jqxComboBox({ source: ItemListAdapter, displayMember: "KorNm", valueMember: "OID", width: 330, height: 32 });


        InfoEPart_ITEM_NO$.on('change', function (evt) {
            var idx = evt.args.index;
            var param = {};
            param.fromOID = InfoEPart_ITEM_NO$.val();
            param.Code1 = 'CLASS';
            if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_ASSEMBLY") {
                itemno = ItemList[idx].Code1;
                //InfoEPartName();
                RequestData('/Manage/SelCodeLibraryChild', param, function (res) {
                    var middleSource =
                    {
                        localdata: res,
                        datatype: "json",
                        datafields:
                            [
                                { name: 'KorNm', type: 'string' },
                                { name: 'OID', type: 'int' },
                                { name: 'Code1', type: 'string' },
                            ]
                    };
                    var middleAdapter = new $.jqx.dataAdapter(middleSource);
                    InfoEPart_ITEM_Middle$.jqxComboBox({ source: middleAdapter, displayMember: "KorNm", valueMember: "OID", width: 330, height: 32 });
                    InfoEPart_ITEM_Middle$.jqxComboBox('selectItem', "@Model.ITEM_Middle");
                });

                param.Code1 = 'TYPE'
                RequestData('/Manage/SelCodeLibraryChild', param, function (res) {
                    var blockNoSource =
                    {
                        localdata: res,
                        datatype: "json",
                        datafields:
                            [
                                { name: 'KorNm', type: 'string' },
                                { name: 'OID', type: 'int' },
                                { name: 'Code1', type: 'string' }
                            ]
                    };
                    var blockNodapter = new $.jqx.dataAdapter(blockNoSource);
                    InfoEPart_Block_No$.jqxComboBox({ source: blockNodapter, displayMember: "KorNm", valueMember: "OID", width: 330, height: 32 });
                    InfoEPart_Block_No$.jqxComboBox('selectItem', "@Model.Block_No");
                });
            } else if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_SINGLE") {
                itemno = ItemList[idx].Code2;

            }
        });


        InfoEPart_ITEM_NO$.jqxComboBox('selectItem', "@Model.ITEM_No");


        var oemSource =
        {
            localdata: oemList,
            datatype: "json",
            datafields:
                [
                    { name: 'KorNm', type: 'string' },
                    { name: 'OID', type: 'int' },
                    { name: 'Code1', type: 'string' },
                    { name: 'Code2', type: 'string' },
                ]
        };
        var oemAdapter = new $.jqx.dataAdapter(oemSource);
        InfoEPart_Oem$.jqxComboBox({ source: oemAdapter, displayMember: "KorNm", valueMember: "OID", width: 330, height: 32 });


        InfoEPart_Oem$.on('change', function (evt) {
            var param = {};
            param.fromOID = InfoEPart_Oem$.val();
            param.Code1 = '@Common.Constant.CommonConstant.ATTRIBUTE_CARTYPE';
            RequestData('/Manage/SelCodeLibraryChild', param, function (res) {

                var carSource =
                {
                    localdata: res,
                    datatype: "json",
                    datafields:
                        [
                            { name: 'KorNm', type: 'string' },
                            { name: 'OID', type: 'int' },
                            { name: 'Code1', type: 'string' },
                            { name: 'Code2', type: 'string' },
                        ]
                };
                var caradapter = new $.jqx.dataAdapter(carSource);
                InfoEPart_Car$.jqxComboBox({ source: caradapter, displayMember: "KorNm", valueMember: "OID", width: 330, height: 32 });
                InfoEPart_Car$.jqxComboBox('selectItem', "@Model.Car_Lib_OID");

            });
        });

        InfoEPart_Oem$.jqxComboBox('selectItem', "@Model.Oem_Lib_OID");


        if (headerStatus != null && headerStatus.length > 0) {
            headerStatus.removeClass('pointer_focus');
            const currentStatus = headerStatus.filter(function (index, item) {
                return item.getAttribute('data-Status') == current;
            });
            if (currentStatus != null && currentStatus.length > 0) {
                currentStatus[0].className += ' ' + 'pointer_focus';
            }
        }

        var InfoEPartThumbnailData = "@Model.Thumbnail";
        $('#imageDrag_' + @ViewBag.OID).simpleUpload({
            url: '/Common/ImgUploadFile',
            //params: { OID: null },
            method: 'post',
            maxFileNum: 1,
            maxFileSize: 1000000,
            allowedMimeType: ['image/jpeg', 'image/png', 'image/gif', 'image/jpg'],
            dropZone: '#dropZone_' + @ViewBag.OID,
        }).on('upload:over', function (e, files) {
            alert('Number of files is over');
        }).on('upload:invalid', function (e, files) {
            for (var i = 0; i < files.length; i++) {
                alert('Invalid ' + files[i].reason + ': ' + files[i].name);
            }
        }).on('upload:done', function (e, file, index, data, xhr) {
            $('#uploadResult_' + @ViewBag.OID).empty();
            $('#uploadResult_' + @ViewBag.OID).append('<li>' + '<img class="img-thumbnail" src="@Url.Content("~/images/Thumbnail/")' + data + '" />' + '<i class="fas fa-window-close"></i></li>');
            InfoEPartThumbnailData = data;
            $('.img-thumbnail').on('click', function () {
                $(this).addClass('showbigimage');
                return false;
            });
            $(window).click(function () {
                $('.img-thumbnail').removeClass('showbigimage');
            });
            $('.img-thumbnail').next().on('click', function () {
                $(this).parent('li').remove();
            });
        });


        $('#InfoEPart_' + EPartOID + ' .tab').on('click', function () {
            const self$ = $(this);
            const infoValue = self$.attr('info');
            //control side menu
            EPartDiv$.find('[class="tab info_focus"]').removeClass('info_focus');
            self$.addClass('info_focus');
            EPartDiv$.find('[class="basic_grid"]').addClass('dective');
            EPartDiv$.find('[id="' + infoValue + '"]').removeClass('dective');

            if (infoValue == 'properties') {
                $('#EditBtn_' + EPartOID).on('click', function () {

                    var modifyTag = document.createElement('div');
                    modifyTag.className = "modifyTag";
                    if ("@Model.Revision" == "00") {
                        $('.Modifiable_@ViewBag.OID').removeAttr('readonly');
                        $('.ModifiableCustomBox_@ViewBag.OID').attr('hidden', true);
                        $('.ModifiableEditCustomBox_@ViewBag.OID').attr('hidden', false);

                        $('.Modifiable_@ViewBag.OID').parent().css('position', 'relative');
                        $('.ModifiableEditCustomBox_@ViewBag.OID').parent().css('position', 'relative');

                        $('.Modifiable_@ViewBag.OID').parent().append(modifyTag);
                        $('.ModifiableEditCustomBox_@ViewBag.OID').parent().append(modifyTag);
                    }

                    $('.ModifiableRev_@ViewBag.OID').removeAttr('readonly');
                    $('.ModifiableRevCustomBox_@ViewBag.OID').attr('hidden', true);
                    $('.ModifiableRevEditCustomBox_@ViewBag.OID').attr('hidden', false);

                    $('.ModifiableRev_@ViewBag.OID').parent().css('position', 'relative');
                    $('.ModifiableRev_@ViewBag.OID').parent().append(modifyTag);

                    $('#EditBtn_@ViewBag.OID').attr('hidden', true);
                    $('#EditSaveBtn_@ViewBag.OID').attr('hidden', false);
                    $('#EditCancelBtn_@ViewBag.OID').attr('hidden', false);

                    InfoFiles.EditMode();

                    InfoEPart_psize$.on('change', function (evt) {
                        InfoEPartName();
                    });

                    InfoEPart_ITEM_NO$.on('change', function (evt) {
                        InfoEPart_Serial$.change();
                        InfoEPartName();
                    });

                    InfoEPart_Place$.on('change', function (evt) {
                        var idx = evt.args.index;
                        place = placeList[idx].Name;
                        InfoEPartName();
                    });

                    InfoEPart_ITEM_Middle$.on('change', function (evt) {
                        //var idx = evt.args.index;
                        var data = evt.args.item.originalItem;
                        InfoEPart_Serial$.val(data.Code1);
                        InfoEPart_Serial$.change();
                        InfoEPartName();
                    });

                    InfoEPart_Block_No$.on('change', function (evt) {
                        //var idx = evt.args.index;
                        var data = evt.args.item.originalItem;
                        if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_ASSEMBLY") {
                            block = data.Code1;
                        } else {
                            block = data.Name;
                        }
                        InfoEPartName();
                    });

                    InfoEPart_epartType$.on('change', function (evt) {
                        var idx = evt.args.index;
                        etype = epartList[idx].Name;
                        InfoEPartName();
                    });

                    InfoEPart_Serial$.on('change paste keyup', function () {
                        $(this).val($(this).val().toUpperCase());
                        serial = $(this).val();
                        InfoEPartName();
                    });

                    InfoEPart_SelRev$.on('change paste keyup', function () {
                        $(this).val($(this).val().toUpperCase());
                        if ($(this).val() == "O" || $(this).val() == "I") {
                            $(this).val("");
                            InfoEPartName();
                            return;
                        }

                        if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_ASSEMBLY") {
                            srev = InfoEPart_SelRev$[0].value;
                        } else if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_SINGLE") {
                            srev = InfoEPart_SelRev$[1].value;
                        }

                        srev = $(this).val();
                        InfoEPartName();
                    });

                    InfoEPart_Car$.on('change', function (evt) {
                        var idx = evt.args.index;
                        if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_ASSEMBLY") {
                            car = evt.args.item.originalItem.Code1;
                            //car = res[idx].Code1;
                        } else {
                            car = evt.args.item.originalItem.Code2;
                            //car = res[idx].Code2;
                        }
                        InfoEPartName();
                    });
                });


                $('#EditCancelBtn_' + EPartOID).on('click', function () {
                    PageReload();
                });


                $('#EditSaveBtn_' + EPartOID).on('click', function () {

                    var InfoEPartParam = {};
                    InfoEPartParam.OID = EPartOID;
                    InfoEPartParam.Name = InfoEPartName$.val();
                    InfoEPartParam.Title = $('#InfoEPartTitle_@ViewBag.OID').val();
                    InfoEPartParam.Standard = $('#InfoEPartStandard_@ViewBag.OID').val();

                    InfoEPartParam.Description = $('#InfoEPartDescription_@ViewBag.OID').val();
                    InfoEPartParam.Thumbnail = InfoEPartThumbnailData;
                    if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_ASSEMBLY") {            //조립도일때
                        InfoEPartParam.Division = InfoEPartDivision;
                        InfoEPartParam.ITEM_No = $('#InfoEPartITEM_NO1_@ViewBag.OID').val();
                        InfoEPartParam.ITEM_Middle = InfoEPart_ITEM_Middle$.val();
                        InfoEPartParam.EPartType = InfoEPart_epartType$.val();
                        InfoEPartParam.Production_Place = InfoEPart_Place$.val();
                        InfoEPartParam.Block_No = $('#InfoEPartBlockNo1_@ViewBag.OID').val();
                        InfoEPartParam.Oem_Lib_OID = $('#InfoEPartOem1_@ViewBag.OID').val();
                        InfoEPartParam.Car_Lib_OID = $('#InfoEPartCar1_@ViewBag.OID').val();
                        InfoEPartParam.Serial = serial;
                        InfoEPartParam.Sel_Revision = srev;
                    } else if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_SINGLE") {       //단품도일떄
                        InfoEPartParam.Division = InfoEPartDivision;
                        InfoEPartParam.Material_OID = InfoEPart_psize$.val();
                        InfoEPartParam.ITEM_No = $('#InfoEPartITEM_NO2_@ViewBag.OID').val();
                        InfoEPartParam.Block_No = $('#InfoEPartBlockNo2_@ViewBag.OID').val();
                        InfoEPartParam.Serial = serial;
                        InfoEPartParam.Oem_Lib_OID = $('#InfoEPartOem2_@ViewBag.OID').val();
                        InfoEPartParam.Car_Lib_OID = $('#InfoEPartCar2_@ViewBag.OID').val();
                        InfoEPartParam.Sel_Revision = srev;
                    } else if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_STANDARD") {     //스탠다드일떄
                        InfoEPartParam.Division = InfoEPartDivision;
                        InfoEPartParam.Material_OID = InfoEPart_psize$.val();
                        InfoEPartParam.Block_No = $('#InfoEPartBlockNo3_@ViewBag.OID').val();
                        InfoEPartParam.Serial = serial;
                    }

                    if (InfoEPartParam.Name == null || InfoEPartParam.Name == "") {
                        alert('품번을 확인해주세요.');
                        return;
                    } else if (InfoEPartParam.Name.length != 12) {
                        alert('품번을 확인해주세요.');
                        return;
                    } else if (InfoEPartParam.Division == null || InfoEPartParam.Division == "") {
                        alert('구분을 선택해주세요.');
                        return;
                    }

                    var Files = InfoFiles.Files();
                    var removeFiles = InfoFiles.RemoveFiles();
                    if (!WebUtils.isEmpty(removeFiles)) {
                        InfoEPartParam.delFiles = [];
                        InfoEPartParam.delFiles = removeFiles;
                    }

                    SendDataWithFile('/EBom/UdtEPartObj', InfoEPartParam, Files, function (response) {
                        if (response.isError) {
                            alert(response.resultMessage);
                            return;
                        }
                        alert("저장되었습니다.");
                        PageReload();
                    });

                });

            } else if (infoValue == 'Apphis') {
                if (EPartRelationECO != null) {
                    RequestHtml('/Common/ApprovalHistory', { OID: EPartRelationECO }, function (res) {
                        $('#ApphisInfo_' + EPartOID).html(res);
                    });
                } else {
                    RequestHtml('/Common/ApprovalHistory', { OID: EPartOID }, function (res) {
                        $('#ApphisInfo_' + EPartOID).html(res);
                    });
                }
            } else if (infoValue == 'Downhis') {

            } else if (infoValue == 'Reverse') {
                EBomParam.OID = EPartOID;
                var ReverseEBomSource =
                {
                    dataType: "json",
                    dataFields: [
                        { name: 'OID', type: 'number' },
                        { name: 'FromOID', type: 'number' },
                        { name: 'ToOID', type: 'number' },
                        { name: 'Parents', type: 'array' },
                        { name: 'Ord', type: 'number' },
                        { name: 'Count', type: 'number' },

                        { name: 'ObjRevision', type: 'text' },
                        { name: 'ObjTdmxOID', type: 'text' },
                        { name: 'ObjIsLatest', type: 'number' },

                        { name: 'Level', type: 'number' },
                        { name: 'ObjName', type: 'text' },
                        { name: 'ObjName', type: 'text' },
                        { name: 'ObjEPartType', type: 'text' },
                        { name: 'ObjITEM_No', type: 'text' },
                        { name: 'ObjITEM_NoNm', type: 'text' },
                        { name: 'ObjMaterial_OID', type: 'text' },
                        { name: 'ObjMaterial_Nm', type: 'text' },
                        { name: 'ObjITEM_Middle', type: 'text' },
                        { name: 'ObjITEM_MiddleNm', type: 'text' },
                        { name: 'ObjThumbnail', type: 'text' },
                        { name: 'ObjBlock_No', type: 'text' },
                        { name: 'ObjBlock_NoNm', type: 'text' },
                        { name: 'ObjProduction_Place', type: 'text' },
                        { name: 'ObjProduction_PlaceNm', type: 'text' },
                        { name: 'ObjCar_Lib_OID', type: 'number' },
                        { name: 'ObjCar_Lib_Nm', type: 'text' },

                        { name: 'ObjOem_Lib_OID', type: 'number' },
                        { name: 'ObjOem_Lib_Nm', type: 'text' },

                        { name: 'ObjTitle' },
                        { name: 'ObjSel_Revision', type: 'text' },
                        { name: 'ObjDivision', type: 'text' },
                        { name: 'ObjDivisionNm', type: 'text' },
                        { name: 'ObjStandard', type: 'text' },

                    ],
                    hierarchy:
                    {
                        root: 'Parents',
                    },
                    id: 'OID',
                    addRow: function (rowID, rowData, position, parentID, commit) {
                        newRowID = rowID;
                        commit(true);
                    },
                    updateRow: function (rowID, rowData, commit) {
                        commit(true);
                    }
                };

                var ReverseDataAdapter = new $.jqx.dataAdapter(ReverseEBomSource);
                const ReverseEBomTreeGrid$ = $('#ReverseInfo_' + EPartOID);
                ReverseEBomTreeGrid$.jqxTreeGrid('render');
                ReverseEBomTreeGrid$.jqxTreeGrid({
                    width: "100%",
                    height: 665,
                    theme: "kdnc",
                    sortable: true,
                    toolbarHeight: 44,
                    showToolbar: true,
                    editable: false,
                    source: ReverseDataAdapter,
                    ready: function () {
                    },
                    columns: [
                        { dataField: 'Level', type: 'number', width: '10%', align: 'center' },
                        { dataField: 'ObjOem_Lib_Nm', type: 'text', text: 'OEM', width: '5%', cellsalign: 'center', align: 'center' },
                        { dataField: 'ObjCar_Lib_Nm', type: 'text', text: '차종', width: '5%', cellsalign: 'center', align: 'center' },
                        { dataField: 'ObjDivisionNm', type: 'text', text: '구분', width: '6%', cellsalign: 'center', align: 'center' },
                        {
                            dataField: 'ObjName', type: 'text', text: '품번', width: '12%', align: 'center',
                            cellsRenderer: function (row, dataField, cellValue, rowData, cellText) {
                                if (rowData.FromOID == @ViewBag.OID) {

                                } else {
                                    var vText = cellText;
                                    return vText + ' <a href="#" onclick="EPartNewTabClick(\'/EBom/InfoEPart\', ' + rowData.FromOID + ', \'' + rowData.ObjName + '\')" ><i class="fas fa-window-maximize"></i></a>';
                                }
                            }
                        },
                        { dataField: 'ObjTitle', type: 'text', text: '품명', width: '12%', cellsalign: 'center', align: 'center' },
                        { dataField: 'ObjITEM_NoNm', type: 'text', text: 'ITEM_NO', width: '10%', align: 'center', cellsalign: 'center', },
                        { dataField: 'ObjMaterial_Nm', type: 'text', text: '재질', width: '10%', align: 'center', cellsalign: 'center', },
                        { dataField: 'ObjStandard', type: 'text', text: '규격', width: '9%', align: 'center', cellsalign: 'center', },
                        { dataField: 'ObjSel_Revision', type: 'text', text: '고객리비전', width: '6%', align: 'center', cellsalign: 'center', },
                        { dataField: 'ObjRevision', type: 'text', text: '리비전', width: '5%', align: 'center', cellsalign: 'center', },
                        //{ dataField: 'Ord', type: 'number', text: '순서', width: '4%', align: 'center', cellsalign: 'center',},
                        //{ dataField: 'Count', type: 'number', text: '수량', width: '4%', align: 'center', cellsalign: 'center',},
                        { dataField: 'ObjThumbnail', type: 'text', text: '이미지', width: '10%', align: 'center', cellsalign: 'center', },
                    ],
                    rendertoolbar: function (toolBar) {
                        toolBar.empty();
                        var container = $("<div class='lGridComponent' ></div>");
                        var reverseButton = $("<button class='custom-button'><i class='fas fa-edit'></i> 역전개 개정</button>").jqxButton();
                        container.append(reverseButton);
                        toolBar.append(container);

                        reverseButton.click(function (event) {
                            OpenSearchTopEPartDialog(null, null, { OID: EPartOID, Division: "@Model.Division" }, '/EBom/dlgSearchTopEPart', '최상위 EPart 검색');


                            //function (res) {
                            //    EBomTreeGrid$.jqxTreeGrid('selectRow', rowKey);
                            //}
                        });
                    },
                });


                RequestData('/EBom/SelectReverseEBom', EBomParam, function (res) {
                    PrintJqxTreeGrid(ReverseEBomSource, ReverseEBomTreeGrid$, [res]);
                    ReverseEBomTreeGrid$.jqxTreeGrid('expandAll');
                });


            } else if (infoValue == 'Structure') {
                var maxId = 0;

                EBomParam.OID = EPartOID;

                //rowSelectFlag = "T";

                var DelDataList = [];
                //var UpdDataList = [];

                var EBomsource =
                {
                    dataType: "json",
                    dataFields: [
                        { name: 'diseditable', type: 'array' },

                        { name: 'OID', type: 'number' },
                        { name: 'FromOID', type: 'number' },
                        { name: 'ToOID', type: 'number' },
                        { name: 'Children', type: 'array' },
                        { name: 'Ord', type: 'number' },
                        { name: 'Count', type: 'number' },
                        { name: 'Action' },
                        { name: 'OldOID' },
                        { name: 'BPolicy' },
                        { name: 'BPolicyNm'},

                        { name: 'TimeOID' },

                        { name: 'ObjRevision', type: 'text' },
                        { name: 'ObjTdmxOID', type: 'text' },
                        { name: 'ObjIsLatest', type: 'number' },

                        { name: 'Level', type: 'number' },
                        { name: 'ObjName', type: 'text' },
                        { name: 'ObjEPartType', type: 'text' },
                        { name: 'ObjITEM_No', type: 'text' },
                        { name: 'ObjITEM_NoNm', type: 'text' },
                        { name: 'ObjMaterial_OID', type: 'text' },
                        { name: 'ObjMaterial_Nm', type: 'text' },
                        { name: 'ObjITEM_Middle', type: 'text' },
                        { name: 'ObjITEM_MiddleNm', type: 'text' },
                        { name: 'ObjThumbnail', type: 'text' },
                        { name: 'ObjBlock_No', type: 'text' },
                        { name: 'ObjBlock_NoNm', type: 'text' },
                        { name: 'ObjProduction_Place', type: 'text' },
                        { name: 'ObjProduction_PlaceNm', type: 'text' },
                        { name: 'ObjCar_Lib_OID', type: 'number' },
                        { name: 'ObjCar_Lib_Nm', type: 'text' },
                        { name: 'ObjDivision' },
                        { name: 'ObjDivisionNm' },

                        { name: 'ObjOem_Lib_OID', type: 'number' },
                        { name: 'ObjOem_Lib_Nm', type: 'text' },

                        { name: 'ObjTitle', type: 'text' },
                        { name: 'ObjSel_Revision', type: 'text' },
                        { name: 'ObjStandard', type: 'text' },
                    ],
                    hierarchy:
                    {
                        root: 'Children',
                    },
                    id: 'OID',
                    addRow: function (rowID, rowData, position, parentID, commit) {
                        //rowData.Level = rowData.level;
                        if (maxId == 0) {
                            maxId = (_.max(fEPartArray(EBomTreeGrid$.jqxTreeGrid('getRows')), function (data) { return data.Id })).Id;
                        } else {
                            maxId = maxId + 1;
                        }
                        maxId = maxId == undefined ? 0 : maxId;
                        rowData.OID = rowID;
                        rowData.Id = maxId + 1;

                        newRowID = rowID;
                        commit(true);

                        EBomTreeGrid$.jqxTreeGrid('clearSelection');
                        EBomTreeGrid$.jqxTreeGrid('selectRow', newRowID);
                        EBomTreeGrid$.jqxTreeGrid('getRow', parentID).Children = EBomTreeGrid$.jqxTreeGrid('getRow', parentID).records;

                        //newRowID = rowID;
                        //commit(true);
                    },
                    updateRow: function (rowID, rowData, commit) {
                        //순서 수량 변경

                        const updObj = EBomTreeGrid$.jqxTreeGrid('getRow', rowID);

                        if (updObj.Action != "RE" || updObj.Action != "TreeA") {
                            updObj.Action = "U";
                        }

                        //DataList.push({ 'Action': 'U', 'FromOID': updObj.FromOID, 'ToOID': updObj.ToOID, 'Ord': updObj.Ord, 'Count': updObj.Count });
                        commit(true);
                    },
                    deleteRow: function (rowID, commit) {
                        EBomTreeGrid$.jqxTreeGrid('getRow', rowID);
                        const delObj = EBomTreeGrid$.jqxTreeGrid('getRow', rowID);
                        if (delObj.Action == "D" && delObj.Action != "TreeA") {
                            if (delObj.FromOID != null && delObj.ToOID != null) {
                                DelDataList.push({ 'Action': 'D', 'FromOID': delObj.FromOID, 'ToOID': delObj.ToOID });
                            }
                        }

                        commit(true);
                    }
                };
                var dataAdapter = new $.jqx.dataAdapter(EBomsource);
                const EBomTreeGrid$ = $('#StructureInfo_' + EPartOID);
                EBomTreeGrid$.jqxTreeGrid('render');
                EBomTreeGrid$.jqxTreeGrid({
                    width: "100%",
                    theme: "kdnc",
                    height: 665,
                    sortable: true,
                    showToolbar: true,
                    toolbarHeight: 44,
                    editable: false,
                    source: dataAdapter,
                    selectionMode: 'singleRow',

                    columns: [
                        { name: 'Level', dataField: 'Level', type: 'number', width: '8%', editable: false },
                        { name: 'OID', dataField: 'OID', type: 'number', width: '10%', editable: false, hidden: true },
                        { name: 'FromOID', dataField: 'FromOID', type: 'number', width: '10%', editable: false, hidden: true },
                        { name: 'ToOID', dataField: 'ToOID', type: 'number', width: '10%', editable: false, hidden: true },

                        { name: 'ObjOem_Lib_Nm', dataField: 'ObjOem_Lib_Nm', type: 'text', text: 'OEM', width: '4%', editable: false, cellsalign: 'center', align: 'center' },
                        { name: 'ObjCar_Lib_Nm', dataField: 'ObjCar_Lib_Nm', type: 'text', text: '차종', width: '4%', editable: false, cellsalign: 'center', align: 'center' },
                        { name: 'ObjDivisionNm', dataField: 'ObjDivisionNm', type: 'text', text: '구분', width: '5%', editable: false, cellsalign: 'center', align: 'center' },
                        {
                            name: 'ObjName', id: 'ObjName', dataField: 'ObjName', type: 'text', text: '품번', width: '11%', editable: false, align: 'center',
                            cellsRenderer: function (row, dataField, cellValue, rowData, cellText) {
                                const editable = EBomTreeGrid$.jqxTreeGrid('editable');
                                if (rowData.ToOID == @ViewBag.OID) {

                                } else {
                                    if (editable) {
                                        return cellValue;
                                    } else {
                                        var vText = cellText;
                                        return vText + ' <a href="#" onclick="EPartNewTabClick(\'/EBom/InfoEPart\', ' + rowData.ToOID + ', \'' + rowData.ObjName + '\')" ><i class="fas fa-window-maximize"></i></a>';
                                    }
                                }
                            }
                        },
                        { name: 'ObjTitle', dataField: 'ObjTitle', type: 'text', text: '품명', width: '11%', editable: false, cellsalign: 'center', align: 'center' },
                        { name: 'ObjITEM_NoNm', dataField: 'ObjITEM_NoNm', type: 'text', text: 'ITEM_NO', width: '10%', editable: false, cellsalign: 'center', align: 'center' },
                        { name: 'ObjMaterial_Nm', dataField: 'ObjMaterial_Nm', type: 'text', text: '재질', width: '8%', editable: false, cellsalign: 'center', align: 'center' },

                        { name: 'ObjStandard', dataField: 'ObjStandard', type: 'text', text: '규격', width: '7%', editable: false, cellsalign: 'center', align: 'center' },
                        { name: 'ObjSel_Revision', dataField: 'ObjSel_Revision', type: 'text', text: '고객리비전', width: '6%', editable: false, cellsalign: 'center', align: 'center' },
                        { name: 'ObjRevision', dataField: 'ObjRevision', type: 'text', text: '리비전', width: '4%', editable: false, cellsalign: 'center', align: 'center' },
                        { text: '상태', datafield: 'BPolicyNm', width: "4%", align: 'center', cellsalign: 'center', editable: false },
                        {
                            name: 'Ord', dataField: 'Ord', type: 'number', text: '순서', width: '4%', align: 'center', cellsalign: 'center',
                            cellsRenderer: function (row, dataField, cellValue, rowData) {
                                var editable = EBomTreeGrid$.jqxTreeGrid('editable');
                                if (editable && rowData.ToOID != @ViewBag.OID) {
                                    if (cellValue == "") {
                                        return "<div class='editableCell' style='height:30px;'><div></div></div>";
                                    }
                                    return "<div class='editableCell'><div></div></div>" + cellValue;
                                }
                            },
                        },
                        {
                            name: 'Count', dataField: 'Count', type: 'number', text: '수량', width: '4%', align: 'center', cellsalign: 'center',
                            cellsRenderer: function (row, dataField, cellValue, rowData) {
                                var editable = EBomTreeGrid$.jqxTreeGrid('editable');
                                if (editable && rowData.ToOID != @ViewBag.OID) {
                                    if (cellValue == "") {
                                        return "<div class='editableCell' style='height:30px;'><div></div></div>";
                                    }
                                    return "<div class='editableCell'><div></div></div>" + cellValue;
                                }
                            },
                        },
                        {
                            name: 'ObjThumbnail', dataField: 'ObjThumbnail', type: 'text', text: '이미지', width: '10%', editable: false, align: 'center',
                            cellsrenderer: function (row, column, value) {
                                if (value.length > 1) {
                                    return "<div class='ebomImg'><img src='@Url.Content("~/images/Thumbnail/")" + value + "'></div>";
                                } else {
                                    return ""
                                }
                            }
                        },
                    ],
                    rendertoolbar: function (toolBar) {
                        const editable = EBomTreeGrid$.jqxTreeGrid('editable');
                        if (!editable && toolBar[0].children.length > 0) {
                            return;
                        }

                        var modifyFlag = false;
                        var container = $("<div class='lGridComponent' ></div>");
                        var modifyButton = $("<button id='modifyButton' class='custom-button'><i class='fas fa-edit'></i> 수정</button>").jqxButton();
                        var revisionUpButton = $("<button class='custom-button'><i class='fas fa-save'></i> 개정</button>").jqxButton();
                        var TreeAddButton = $("<button class='custom-button'><i class='fas fa-plus'></i> 추가</button>").jqxButton();
                        var AddButton = $("<button class='custom-button'><i class='fas fa-plus'></i> 추가</button>").jqxButton();
                        var replacedButton = $("<button class='custom-button'><i class='fas fa-exchange-alt'></i> 대체</button>").jqxButton();
                        var deleteButton = $("<button class='custom-button'><i class='fas fa-minus'></i> 선택삭제</button>").jqxButton();
                        var saveButton = $("<button class='custom-button'><i class='fas fa-save'></i> 저장</button>").jqxButton();
                        var cancelButton = $("<button class='custom-button'><i class='fas fa-window-close'></i> 취소</button>").jqxButton();
                        var excelButton = $("<button class='custom-button'><i class='fas fa-file-excel'></i> excelExport</button>").jqxButton();


                        var expandButton = $("<button class='custom-button'><i class='fas fa-caret-down'></i> 펼치기</button>").jqxButton();
                        var collapseButton = $("<button class='custom-button'><i class='fas fa-caret-up'></i> 접기</button>").jqxButton();

                        TreeAddButton.jqxButton({ disabled: true });
                        AddButton.jqxButton({ disabled: true });
                        deleteButton.jqxButton({ disabled: true });
                        saveButton.jqxButton({ disabled: true });
                        cancelButton.jqxButton({ disabled: true });
                        replacedButton.jqxButton({ disabled: true });
                        revisionUpButton.jqxButton({ disabled: true });

                        container.append(modifyButton);
                        container.append(revisionUpButton);
                        container.append('<span class="buttonSeparator"></span>');
                        container.append(TreeAddButton);
                        //container.append(AddButton);
                        container.append(replacedButton);
                        container.append(deleteButton);
                        container.append('<span class="buttonSeparator"></span>');
                        container.append(saveButton);
                        container.append(cancelButton);
                        container.append('<span class="buttonSeparator"></span>');
                        container.append(excelButton);
                        container.append(expandButton);
                        container.append(collapseButton);

                        toolBar.append(container);

                        var actionContent = function (action) {
                            switch (action.toUpperCase()) {
                                case "MODIFY":
                                    EBomTreeGrid$.jqxTreeGrid({ editable: true });
                                case "CANCEL":
                                    modifyFlag = !modifyFlag;
                                    modifyButton.jqxButton({ disabled: modifyFlag });
                                    saveButton.jqxButton({ disabled: !modifyFlag });
                                    cancelButton.jqxButton({ disabled: !modifyFlag });
                                    replacedButton.jqxButton({ disabled: !modifyFlag });
                                    TreeAddButton.jqxButton({ disabled: !modifyFlag });
                                    deleteButton.jqxButton({ disabled: !modifyFlag });
                                    revisionUpButton.jqxButton({ disabled: !modifyFlag });
                                    if (action.toUpperCase() == 'CANCEL') {
                                        replacedButton.jqxButton({ disabled: !modifyFlag });
                                        //AddButton.jqxButton({ disabled: !modifyFlag });
                                        TreeAddButton.jqxButton({ disabled: !modifyFlag });
                                        deleteButton.jqxButton({ disabled: !modifyFlag });
                                        EBomTreeGrid$.jqxTreeGrid({ editable: false });
                                        revisionUpButton.jqxButton({ disabled: !modifyFlag });
                                    }
                                    break;
                                case "SELECT":
                                    replacedButton.jqxButton({ disabled: !modifyFlag });
                                    if (action.toUpperCase() == 'SELECT') {
                                        replacedButton.jqxButton({ disabled: !modifyFlag });
                                        //AddButton.jqxButton({ disabled: !modifyFlag });
                                        TreeAddButton.jqxButton({ disabled: !modifyFlag });
                                        deleteButton.jqxButton({ disabled: !modifyFlag });
                                        revisionUpButton.jqxButton({ disabled: !modifyFlag });
                                    }
                                    break;
                                case "LEVEL":
                                    if (action.toUpperCase() == 'LEVEL') {
                                        deleteButton.jqxButton({ disabled: true });
                                    }
                                    break;
                                case "UNSELECT":
                                    replacedButton.jqxButton({ disabled: true });
                                    //AddButton.jqxButton({ disabled: true });
                                    TreeAddButton.jqxButton({ disabled: true });
                                    deleteButton.jqxButton({ disabled: true });
                                    revisionUpButton.jqxButton({ disabled: true });
                                    break;
                            }
                        };

                        expandButton.click(function (event) {
                            EBomTreeGrid$.jqxTreeGrid('expandAll');
                        });

                        collapseButton.click(function (event) {
                            EBomTreeGrid$.jqxTreeGrid('collapseAll');
                        });

                        modifyButton.click(function (event) {
                            maxId = 0;
                            rowKey = null;
                            EBomTreeGrid$.jqxTreeGrid('clearSelection');
                            actionContent('modify');
                        });

                        saveButton.click(function (event) {
                            if (confirm('저장하시겠습니까?')) {

                                var EditDataList = [];

                                var EditData = fEPartArray(EBomTreeGrid$.jqxTreeGrid('getRows'));

                                for (var i = 0; i < EditData.length; i++) {
                                    if (EditData[i].Action != null) {
                                        var EditDataParam = {};
                                        EditDataParam.OID = EditData[i].OID;
                                        EditDataParam.Action = EditData[i].Action;
                                        EditDataParam.FromOID = EditData[i].FromOID;
                                        EditDataParam.ToOID = EditData[i].ToOID;
                                        EditDataParam.Count = EditData[i].Count;
                                        EditDataParam.Ord = EditData[i].Ord;
                                        EditDataParam.OldOID = EditData[i].OldOID;

                                        if (EditDataParam.FromOID != null && EditDataParam.ToOID != null) {
                                            EditDataList.push(EditDataParam);
                                        }
                                    }
                                }

                                if (EditDataList.concat(DelDataList) == null || EditDataList.concat(DelDataList).length < 1) {
                                    cancelButton.click();

                                    alert("저장할 내용이 없습니다.");
                                    return;
                                }

                                RequestData('/EBom/EditStructure', { _param: EditDataList.concat(DelDataList) }, function (response) {
                                    if (response.isError) {
                                        alert(response.resultMessage);
                                        return;
                                    }
                                    /*
                                    if (response == 1) {
                                        alert("값이 비었습니다.");
                                        DelDataList = [];
                                        cancelButton.click();
                                        modifyFlag = false;
                                        return;
                                    }
                                    */
                                    alert("저장되었습니다.");
                                    DelDataList = [];
                                    cancelButton.click();
                                    modifyFlag = false;
                                });
                            }
                        });

                        replacedButton.click(function (event) {

                            var checkRows = EBomTreeGrid$.jqxTreeGrid('getSelection');
                            if (checkRows.length == 0) {
                                return;
                            }

                            if (checkRows[0].level == 0) {
                                alert('최상위는 대체 할 수 없습니다');
                                return;
                            }

                            if (checkRows[0].Action == "A" || checkRows[0].Action == "RE") {
                                alert('작업중인 품번은 대체가 불가능 합니다.');
                                return;
                            }

                            if (checkRows[0].BPolicy.Name == "@Common.Constant.EBomConstant.POLICY_EPART_REVIEW" || checkRows[0].BPolicy.Name == "@Common.Constant.EBomConstant.POLICY_EPART_COMPLETED") {
                                alert('배포중인 품번입니다.');
                                return;
                            }

                            OpenSearchEBomTreeDialog(function (res) {
                                EBomTreeGrid$.jqxTreeGrid('selectRow', rowKey);
                            }, null, null, '/EBom/dlgSearchEBomStructure?OID=' + EPartOID, 'EBOM 대체', null, EBomTreeGrid$, rowKey, "RE", checkRows);

                        });


                        //AddButton.click(function (event) {
                        //    if (!AddButton.jqxButton('disabled')) {
                        //
                        //        var checkRows = EBomTreeGrid$.jqxTreeGrid('getSelection');
                        //        if (checkRows.length == 0) {
                        //            return;
                        //        }
                        //
                        //        OpenSearchEBomTreeDialog(function (res) {
                        //            EBomTreeGrid$.jqxTreeGrid('selectRow', rowKey);
                        //        }, null, null, '/EBom/dlgSearchEBomStructure?OID=' + EPartOID, 'EBOM 추가', null, EBomTreeGrid$, rowKey, "A", checkRows);
                        //    }
                        //});

                        TreeAddButton.click(function (event) {
                            var checkRows = EBomTreeGrid$.jqxTreeGrid('getSelection');
                            if (checkRows.length == 0) {
                                return;
                            }

                            if (checkRows[0].Action == "REV") {

                            } else {
                                if (checkRows[0] != null && checkRows[0].BPolicy.Name == '@Common.Constant.EBomConstant.POLICY_EPART_COMPLETED') {
                                    alert('배포중입니다.');
                                    return;
                                }

                                if (checkRows[0] != null && checkRows[0].BPolicy.Name == '@Common.Constant.EBomConstant.POLICY_EPART_REVIEW') {
                                    alert('결재중입니다.');
                                    return;
                                }
                            }

                            const parentData = EBomTreeGrid$.jqxTreeGrid('getRow', rowKey);

                            if (parentData.ObjDivision != '@Common.Constant.EBomConstant.DIV_ASSEMBLY') {
                                alert('단품도나 스탠다드 하위에는 추가할수 없습니다.');
                                return;
                            }

                            EBomTreeGrid$.jqxTreeGrid('addRow', null, {

                                "Children": [],
                                "Level": parseInt(parentData.Level) + 1,
                                "FromOID": parseInt(parentData.ToOID),
                                "Action": "TreeA",
                                "ToOID": null,
                                "ObjCar_Lib_NM": null,
                                "ObjName": null,
                                "ObjRep_Part_No": null,
                                "ObjRep_Part_No2": null,
                                "ObjTitle": null,
                                "Ord": 1,
                                "Count": 1,
                                "ObjThumbnail": null,
                                "ObjEo_No": null,
                                "ObjEPartType": null
                            }, 'last', rowKey);

                            EBomTreeGrid$.jqxTreeGrid('setColumnProperty', 'ObjName', 'editable', true);
                        });

                        cancelButton.click(function (event) {
                            DelDataList = [];
                            actionContent('cancel');
                            getEPartList(EBomsource, EBomTreeGrid$, EBomParam);
                        });

                        deleteButton.click(function (event) {
                            if (!deleteButton.jqxButton('disabled')) {
                                if (rowKey == null) {
                                    alert('구조를 선택해주세요');
                                    return;
                                }
                                var Key = rowKey;
                                var DeleteKey = EBomTreeGrid$.jqxTreeGrid('getRow', Key);

                                if (DeleteKey.level == 0) {
                                    alert('최상위는 삭제 할 수 없습니다.');
                                    return;
                                }

                                DeleteKey.Action = "D";
                                EBomTreeGrid$.jqxTreeGrid('deleteRow', Key);
                                EBomTreeGrid$.jqxTreeGrid('clearSelection');

                                EBomTreeGrid$.jqxTreeGrid('expandAll');
                                //actionContent('unSelect');
                            }
                        });

                        excelButton.click(function () {
                            EBomTreeGrid$.jqxTreeGrid({
                                exportSettings: {
                                    fileName: "@Model.Name"
                                }
                            });
                            EBomTreeGrid$.jqxTreeGrid('exportData', 'xls');
                        });

                        revisionUpButton.click(function () {
                            var checkRows = EBomTreeGrid$.jqxTreeGrid('getSelection');
                            if (checkRows != null && checkRows.length > 0) {
                                if (checkRows[0].BPolicy.Name != '@Common.Constant.CommonConstant.POLICY_APPROVAL_COMPLETED') {
                                    alert('작성중 또는 반려중인 품번 입니다.');
                                    return;
                                }

                                var check = EBomTreeGrid$.jqxTreeGrid('getRow', rowKey);
                                if (check.parent != null && check.parent.BPolicy.Name == '@Common.Constant.CommonConstant.POLICY_APPROVAL_COMPLETED') {
                                    alert('상위가 배포중입니다.');
                                    return;
                                }

                                if (checkRows[0].parent != null && checkRows[0].parent.BPolicy.Name == '@Common.Constant.CommonConstant.POLICY_APPROVAL_COMPLETED') {
                                    alert('상위가 배포중입니다.');
                                    return;
                                }

                                if (check.Action == "REV") {
                                    alert('이미 개정중입니다.');
                                    return;
                                }

                                if (check.ObjDivision == '@Common.Constant.EBomConstant.DIV_STANDARD') {
                                    alert('스탠다드는 개정이 불가합니다.');
                                    return;
                                }

                                //var StructureUpdate = {};
                                //StructureUpdate.ToOID = checkRows[0].ToOID;
                                //StructureUpdate.OID = checkRows[0].OID;
                                //StructureUpdate.ObjDivision = checkRows[0].ObjDivision;

                                var RootRevUp = {};
                                RootRevUp.ToOID = check.ToOID;

                                var Temp = {};
                                Temp.OID = check.ToOID;
                                if (check.Level == 0) {
                                    RequestData('/EBom/EPartStructureUpdate', RootRevUp, function (response) {
                                        const linkUrl = '/EBom/InfoEPart?OID=' + response.OID;
                                        if ($("div[tabUrl='" + linkUrl + "']").length > 0) {
                                            var tabDiv = $("div[tabUrl='" + linkUrl + "']")[0].parentNode;
                                            $('#tabContent').jqxTabs('select', $(tabDiv).index());
                                            return;
                                        }

                                        const loading$ = $('#loading');
                                        const tabContent$ = $('#tabContent');
                                        loading$.css('display', 'block');
                                        var linkName = response.Name;
                                        tabContent$.jqxTabs('addLast', linkName, "");
                                        var tabLength = tabContent$.jqxTabs('length');
                                        $.ajax({
                                            url: linkUrl,
                                            type: 'get',
                                            dataType: 'html',
                                            async: true,
                                            success: function (resHtml) {
                                                var content = tabContent$.jqxTabs('getContentAt', tabLength - 1);
                                                $(content).html("<div class='wrapPage' tabUrl='" + linkUrl + "'>" + resHtml + "</div>");
                                            }, error: function (res) {
                                                if (res.status === 404) {
                                                    alert("현재 개발중인 화면입니다.");
                                                    return false;
                                                }
                                                alert(res.responseText);
                                            }
                                            , complete: function () {
                                                loading$.css('display', 'none');
                                            }
                                        });
                                        alert('개정되었습니다.');
                                        return;
                                    });
                                } else {
                                    RequestData('/EBom/SelTempEPart', Temp, function (response) { //temp검색
                                        if (response.isError) {
                                            alert(response.resultMessage);
                                            return;
                                        }

                                        if (response == 0) {
                                            alert("이미 개정된 품번입니다.");
                                            return;
                                        }

                                        check.ObjRevision = response.Revision;
                                        check.BPolicyNm = "작성중";
                                        check.Action = "REV";
                                        check.BPolicy.Name = '@Common.Constant.CommonConstant.POLICY_APPROVAL_PREPARE';
                                        if (check.ObjDivision == "@Common.Constant.EBomConstant.DIV_SINGLE") {
                                            check.ObjName = response.Name;
                                            check.ObjSel_Revision = response.Sel_Revision;
                                        }

                                        EBomTreeGrid$.jqxTreeGrid('updateBoundData');
                                        EBomTreeGrid$.jqxTreeGrid('expandAll');

                                        alert("개정 되었습니다.");
                                    });
                                }

                            }
                        });

                        rowKey = null;
                        EBomTreeGrid$.on('rowSelect', function (event) {
                            if (rowKey == event.args.key) {
                                return;
                            }
                            var args = event.args;
                            rowKey = args.key;

                            var checkRows = EBomTreeGrid$.jqxTreeGrid('getSelection');
                            actionContent('Select');
                            if (rowKey == 0) {
                                actionContent('Level');
                            }

                        });
                    },
                });

                RequestData('/EBom/SelectEBom', EBomParam, function (res) {
                    PrintJqxTreeGrid(EBomsource, EBomTreeGrid$, [res]);
                    EBomTreeGrid$.jqxTreeGrid('expandAll');
                });


                var SaveObjName = null;
                var SaveLevel = null;
                EBomTreeGrid$.on('rowBeginEdit', function (event) {
                    var args = event.args;
                    var row = args.row;
                    var key = args.key;

                    if (row == null) {
                        return;
                    }
                    SaveObjName = row.ObjName;
                    SaveLevel = row.Level;
                });

                EBomTreeGrid$.on('rowEndEdit', function (event) {


                    var args = event.args;
                    var row = args.row;
                    var key = args.key;

                    if (row == null) {
                        return;
                    }
                    var checkRows = EBomTreeGrid$.jqxTreeGrid('getSelection');
                    if (checkRows.length == 0) {
                        return;
                    }
                    if (row.ObjName != SaveObjName && (SaveLevel == row.Level || SaveLevel == null)) {
                        if (DoubleClickEvent == true) {
                            DoubleClickEvent = false;
                        } else {
                            return;
                        }
                        setTimeout(function () {
                            OpenSearchEBomTreeADialog(function (res) {
                                EBomTreeGrid$.jqxTreeGrid('selectRow', rowKey);
                            }, null, null, '/EBom/dlgSetSearchEBomStructure?OID=' + EPartOID, 'EBOM 추가', null, EBomTreeGrid$, rowKey, "TreeA", checkRows);
                            DoubleClickEvent = true;
                        }, 100);

                    }
                });
            } else if (infoValue == 'Revhistory') {

                var TdmxParam = {};
                TdmxParam.TdmxOID = "@Model.TdmxOID";

                var RevhistorySource =
                {
                    dataType: "json",
                    dataFields: [
                        { name: 'OID' },
                        { name: 'Name' },
                        { name: 'BPolicyOID' },
                        { name: 'BPolicy' },
                        { name: 'CreateUsNm' },
                        { name: 'CreateDt', type: 'date' },

                        { name: 'Title' },

                        { name: 'Oem_Lib_OID' },
                        { name: 'Oem_Lib_Nm' },
                        { name: 'Sel_Revision' },
                        { name: 'Division' },
                        { name: 'Standard' },

                        { name: 'Car_Lib_OID' },
                        { name: 'Car_Lib_Nm' },
                        { name: 'ITEM_No' },
                        { name: 'ITEM_NoNm' },
                        { name: 'Block_No' },
                        { name: 'Block_NoNm' },
                        { name: 'Material_OID' },
                        { name: 'Material_Nm' },
                        { name: 'EPartType' },
                        { name: 'Sel_Eo' },
                        { name: 'Sel_Eo_Dt', type: 'date' },
                        { name: 'Thumbnail' },
                        { name: 'Revision' },
                    ],
                    id: 'OID',
                };

                var RevhistoryAdapter = new $.jqx.dataAdapter(RevhistorySource);
                const RevhistoryGrid$ = $('#RevhistoryInfo_' + EPartOID);
                RevhistoryGrid$.jqxGrid('render');
                RevhistoryGrid$.jqxGrid({
                    width: "100%",
                    height: 665,
                    theme: "kdnc",
                    sortable: true,
                    toolbarHeight: 44,
                    showToolbar: false,
                    editable: false,
                    source: RevhistoryAdapter,
                    ready: function () {

                    },
                    columns: [
                        {
                            text: 'NO', width: "3%", cellsalign: 'center', columntype: 'number', align: 'center',
                            cellsrenderer: function (row, column, value) {
                                return "<div style='width:100%;height:100%;text-align:center;vertical-align:middle;line-height:1.9;'>" + (value + 1) + "</div>";
                            }
                        },
                        { text: 'OEM', datafield: 'Oem_Lib_Nm', width: "5%", align: 'center', cellsalign: 'center', },
                        { text: '차종', datafield: 'Car_Lib_Nm', width: "5%", align: 'center', cellsalign: 'center', },
                        {
                            text: '구분', datafield: 'Division', width: "7%", align: 'center', cellsalign: 'center',
                            cellsrenderer: function (row, column, value) {
                                if (value == "@Common.Constant.EBomConstant.DIV_ASSEMBLY") {
                                    return "<div style='width:100%;height:100%;text-align:center;vertical-align:middle;line-height:1.9;'>" + "@Common.Constant.EBomConstant.DIV_ASSEMBLY_NM" + "</div>";
                                } else if (value == "@Common.Constant.EBomConstant.DIV_SINGLE") {
                                    return "<div style='width:100%;height:100%;text-align:center;vertical-align:middle;line-height:1.9;'>" + "@Common.Constant.EBomConstant.DIV_SINGLE_NM" + "</div>";
                                } else {
                                    return "<div style='width:100%;height:100%;text-align:center;vertical-align:middle;line-height:1.9;'>" + "@Common.Constant.EBomConstant.DIV_STANDARD_NM" + "</div>";
                                }
                            }
                        },
                        { text: '품번', datafield: 'Name', width: "11%", align: 'center', cellsalign: 'center', },
                        { text: '품명', datafield: 'Title', width: "11%", align: 'center', cellsalign: 'center', },
                        { text: 'ITEM_NO', datafield: 'ITEM_NoNm', width: "13%", align: 'center', cellsalign: 'center', },
                        { text: '재질', datafield: 'Material_Nm', width: "8%", align: 'center', cellsalign: 'center', },
                        { text: '규격', datafield: 'Standard', width: "6%", align: 'center', cellsalign: 'center', },
                        { text: '고객리비전', datafield: 'Sel_Revision', width: "6%", align: 'center', cellsalign: 'center', },
                        { text: '리비전', datafield: 'Revision', width: "5%", align: 'center', cellsalign: 'center', },
                        { text: '작성일', datafield: 'CreateDt', width: "8%", align: 'center', cellsalign: 'center', cellsFormat: 'yyyy-MM-dd', },
                        { text: '작성자', datafield: 'CreateUsNm', width: "6%", align: 'center', cellsalign: 'center', },
                        {
                            text: '상태', datafield: 'BPolicy', width: "6%", align: 'center', cellsalign: 'center',
                            cellsrenderer: function (row, column, value) {
                                return "<div style='width:100%;height:100%;text-align:center;vertical-align:middle;line-height:1.9;'>" + value.StatusNm + "</div>";
                            }
                        },
                    ],
                });

                function getEPartRevList(_Source, _Grid$, param) {
                    RequestData("/EBom/SelEPart", param, function (res) {
                        PrintJqxGrid(_Source, _Grid$, res);
                    });
                }

                getEPartRevList(RevhistorySource, RevhistoryGrid$, TdmxParam);
            }
        });

        $('.info_focus').click();
    });

    function getEPartList(_Source, _Grid$, EBomParam) {
        RequestData('/EBom/SelectEBom', EBomParam, function (res) {
            PrintJqxTreeGrid(_Source, _Grid$, [res]);
            _Grid$.jqxTreeGrid('expandAll');
        });
    }


    function ChangeEPartLib(OID, ID) {
        var comboBox$ = ID;
        var param = {};
        param.fromOID = OID;
        var comboSource;
        RequestData("/Manage/SelLibrary", param, function (res) {
            if (res.length > 0) {
                comboSource =
                {
                    localdata: res,
                    datatype: "json",
                    datafields:
                        [
                            { name: 'KorNm', type: 'string' },
                            { name: 'OID', type: 'int' },
                        ]
                };
                var comboAdapter = new $.jqx.dataAdapter(comboSource);
                comboBox$.jqxComboBox({ source: comboAdapter, displayMember: "KorNm", valueMember: "OID", width: 330, height: 30 });
            }
        });
    }

    function InfoEPartName() {
        name = '';
        if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_ASSEMBLY") {
            name += itemno;
            name += place;
            name += etype;
            name += block;
            name += car;
            name += serial;
            name += srev;
        } else if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_SINGLE") {
            name += psize;
            name += block;
            name += itemno;
            name += car;
            name += serial;
            name += srev;
        } else if (InfoEPartDivision == "@Common.Constant.EBomConstant.DIV_STANDARD") {
            name += psize;
            name += block;
            name += serial;
        }
        InfoEPartName$.val(name);
    }



</script>
