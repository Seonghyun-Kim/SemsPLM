@{
    Layout = null;
}

<div class="dlgApprovalPerson">
    <div class="wholeUserList">
        <h4><i class="fas fa-building"></i> &nbsp;조직도</h4>
        <input type="text"  id="txtSearchPerson" value="" placeholder="이름을 입력하세요" class="findPerson"/><button id="btnSearchPerson" class="custom-button"><i class="fas fa-search"></i> 검색</button>
        <div id="organiListGrid" style="margin-bottom:8px;overflow-y: auto;"><!--조직도--></div>
    </div>

    <div class="selectedUserList">
        <h4><i class="fas fa-user-check"></i> &nbsp;목록 <button class="custom-button" id="btRegPerson"><i class="fas fa-check"></i> 등록</button></h4>
        <ul id="selectedUserList"></ul>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        var organizationSource = @Html.Raw(Json.Encode(ViewBag.Organization));
        var organiListGrid$ = $('#organiListGrid');
        organiListGrid$.jqxTree({
            width: '99.5%',
            height: '88%',
            source: [organizationSource],
            checkboxes: true,
            allowDrag: true,
            allowDrop: false,
            dragStart: function (item) {
                if (item.checkitemtypes != null && item.checkitemtypes != undefined) {
                    if (item.checkitemtypes.indexOf(item.type) > -1) { }
                    else {
                        return false;
                    }
                }

                if (organiListGrid$.jqxTree('getCheckedItems').length < 1) {
                    return false;
                }
            },
        });

        organiListGrid$.on('dragEnd', function (event) {
            const selMemList$ = $("#selectedUserList");
            if (event.args.label) {
                var ev = event.args.originalEvent;
                var x = ev.pageX;
                var y = ev.pageY;
                if (event.args.originalEvent && event.args.originalEvent.originalEvent && event.args.originalEvent.originalEvent.touches) {
                    var touch = event.args.originalEvent.originalEvent.changedTouches[0];
                    x = touch.pageX;
                    y = touch.pageY;
                }
                var offset = selMemList$.offset();
                var width = selMemList$.width();
                var height = selMemList$.height();
                var right = parseInt(offset.left) + width;
                var bottom = parseInt(offset.top) + height;
                if (x >= parseInt(offset.left) && x <= right) {
                    if (y >= parseInt(offset.top) && y <= bottom) {
                        var listArr = selMemList$.children('li').get();
                        var chkItems = organiListGrid$.jqxTree('getCheckedItems');
                        for (var index = 0; index < chkItems.length; index++) {

                            if (listArr.filter(function (item) { return item.innerText == chkItems[index].label }).length > 0) {

                            } else {
                                console.log(chkItems[index]);
                                var person = document.createElement('li');
                                person.setAttribute('OID', chkItems[index].id);
                                person.setAttribute('Name', chkItems[index].label);
                                person.setAttribute('Depart', chkItems[index].value);
                                person.setAttribute('DepartOID', chkItems[index].parentId);
                                person.innerHTML = chkItems[index].label + "<i class='fas fa-window-close'></i>";
                                selMemList$.append(person);
                                selMemList$.children('li').children('i').on('click', function () {
                                    $(this).parent().remove();
                                });
                            }
                        }
                    }
                }
            }
        });

        $("#txtSearchPerson").keydown(function (key) {
            if (key.keyCode == 13) {
                $('#btnSearchPerson').click();
            }
        });

        $('#btnSearchPerson').on('click', function () {
            //Setting current selected item as null 
            organiListGrid$.jqxTree('selectItem', null);

            //collapsing tree(in case if user has already searched it )
            organiListGrid$.jqxTree('collapseAll');

            //Using span for highlighting text so finding earlier searched items(if any)
            var previousHighlightedItems = organiListGrid$.find('span.highlightedText');

            // If there are some highlighted items, replace the span with its html part, e.g. if earlier it was <span style="background-color:"Yellow">Te></span>st then it will replace it with "Te""st"
            if (previousHighlightedItems && previousHighlightedItems.length > 0) {
                var highlightedText = previousHighlightedItems.eq(0).html();

                $.each(previousHighlightedItems, function (idx, ele) {
                    $(ele).replaceWith(highlightedText);
                });
            }

            //Getting all items for jqxTree
            var items = organiListGrid$.jqxTree("getItems");

            //Getting value for input search box and converting it to lower for case insensitive(may change)
            var searchedValue = $("#txtSearchPerson").val().toLowerCase();

            if (searchedValue.length < 1) {
                //Setting current selected item as null 
                organiListGrid$.jqxTree('selectItem', null);
                organiListGrid$.jqxTree('expandAll');
                return;
            }

            //Searching the text in items label
            for (var i = 0; i < items.length; i++) {
                if (items[i].label.toLowerCase().indexOf(searchedValue) > -1) {

                    //If found expanding the tree to that item
                    organiListGrid$.jqxTree('expandItem', items[i].parentElement);

                    //selecting the item : not necessary as it selects the last item if multiple occurrences are found             
                    organiListGrid$.jqxTree('selectItem', items[i]);

                }
            }
        });
    });
</script>