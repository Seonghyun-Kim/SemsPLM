
@{
    Layout = null;
}
<div id="InfoChangeOrder_@ViewBag.ECODetail.OID" class="info_project clearfix">
    <div class="info_menubar" style="width:250px;">
        <ul>
            <li class="tab info_focus" info="properties"><i class="fas fa-info-circle"></i> 기본 정보</li>

            <li class="tab" info="ECOEffectAssess"><i class="fas fa-file"></i> 설계변경 영향성 평가</li>
            <li class="tab" info="ECRRelation"><i class="fas fa-file"></i> 연관 변경요청</li>
            <li class="tab" info="ebomList"><i class="fas fa-list"></i> 설계변경리스트 <small>(EBOM)</small></li>
            <li class="tab" info="ebomStatement"><i class="fas fa-file"></i> 설계변경내역서 <small>(EBOM)</small></li>
            <li class="tab" info="approvHistory"><i class="fas fa-stream"></i> 결재이력</li>
        </ul>
    </div>


    <div class="changeOrder_content">
        <div class="project_basic clearfix">
            <div class="basic_info">
                <h3>@ViewBag.ECODetail.Name<!--Eo No--></h3>
                <p>품명 : <span>@ViewBag.ECODetail.Title</span></p>
            </div>
            <div class="basic_image">
                <div class="image_inputbox">이미지<!--이미지 드래그 영역--></div>
                <div class="image_thumbnail"><!--이미지 썸네일 영역--></div>
            </div>
            <div class="basic_status">
                <div class="pointer_wrap">
                    @for (int i = 0; i < ViewBag.Status.Count; i++)
                    {
                        <div class="pointer" data-type="@ViewBag.Status[i].Type" data-Status="@ViewBag.Status[i].StatusOID" style="z-index: @(ViewBag.Status.Count - i);">
                            <div class="project_status">@ViewBag.Status[i].StatusNm</div>
                        </div>
                    }
                </div>
                <p>설명 : <span></span></p>
            </div>
        </div>
        <div id="properties" class="basic_grid">
            <table class="tableTopButtonBox">
                <tbody>
                    <tr>
                        <td style="text-align: right;" id="InfoChangeOrder_defaultBtn_@ViewBag.ECODetail.OID">
                            @if (((List<Common.Models.BPolicyAuth>)ViewBag.ECODetail.BPolicyAuths).FindIndex(item => item.AuthNm == Common.Constant.CommonConstant.AUTH_MODIFY) > -1
                                && (ViewBag.ApprovStatus == null || ViewBag.ApprovStatus != Common.Constant.CommonConstant.POLICY_APPROVAL_STARTED))
                            {
                                <button id="InfoChangeOrder_EditBtn_@ViewBag.ECODetail.OID" class="custom-button"><i class="fas fa-edit"></i> 수정</button>
                            }
                            @if (((List<Common.Models.BPolicyAuth>)ViewBag.ECODetail.BPolicyAuths).FindIndex(item => item.AuthNm == Common.Constant.CommonConstant.AUTH_PROMOTE) > -1
                                            && (ViewBag.ApprovStatus == null || ViewBag.ApprovStatus != Common.Constant.CommonConstant.POLICY_APPROVAL_STARTED))
                            {
                                <button id="InfoChangeOrder_ApprovalBtn_@ViewBag.ECODetail.OID" class="custom-button"><i class="fas fa-pen-alt"></i> 결재</button>
                            }
                            <button id="InfoChangeOrder_CancelBtn_@ViewBag.ECODetail.OID" class="custom-button" hidden="hidden"><i class="fas fa-window-close"></i> 취소</button>
                            <button id="InfoChangeOrder_SaveBtn_@ViewBag.ECODetail.OID" class="custom-button" hidden="hidden"><i class="fas fa-save"></i> 저장</button>

                        </td>
                    </tr>
                </tbody>
            </table>
            <div class="scrollY" style="height:625px;">
                <table class="infoTable">
                    <colgroup>
                        <col width="10%" />
                        <col width="40%" />
                        <col width="10%" />
                        <col width="40%" />
                    </colgroup>
                    <tbody>
                        <tr>
                            <th>설계변경번호</th>
                            <td><input type="text" value="@ViewBag.ECODetail.Name" /></td>
                            <th>품목그룹</th>
                            <td><input type="text" class="Modifiable_@ViewBag.ECODetail.OID" readonly="readonly" value="@ViewBag.ECODetail.ItemGroup" id="InfoChangeOrder_ItemGroup_@ViewBag.ECODetail.OID" /></td>
                        </tr>
                        <tr>
                            <th>제목</th>
                            <td><input class="required Modifiable_@ViewBag.ECODetail.OID" type="text" value="@ViewBag.ECODetail.Title" id="InfoChangeOrder_Title_@ViewBag.ECODetail.OID" readonly="readonly" /></td>
                            <th>설계변경일자</th>
                            <td>
                                <input type="text" class="ModifiableCustomBox_@ViewBag.ECODetail.OID required" readonly="readonly" id="" value="@ViewBag.ECODetail.DesignChangeDt" />
                                <div class="ModifiableEditCustomBox_@ViewBag.ECODetail.OID">
                                    <div class="ECODatetimeInput_@ViewBag.ECODetail.OID" id="InfoChangeOrder_DesignChangeDt_@ViewBag.ECODetail.OID">
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <th>변경사유</th>
                            <td>
                                <input type="text" class="ModifiableCustomBox_@ViewBag.ECODetail.OID" readonly="readonly" id="" value="@ViewBag.ECODetail.ReasonChangeNm" />
                                <div class="ModifiableEditCustomBox_@ViewBag.ECODetail.OID required" style="width:100%;">
                                    <div id="InfoChangeOrder_reasonChange_@ViewBag.ECODetail.OID" class="ECOComboBox"></div>
                                </div>
                            </td>
                            <th>호환성</th>
                            <td>
                                <input type="text" class="ModifiableCustomBox_@ViewBag.ECODetail.OID" readonly="readonly" id="" value="@ViewBag.ECODetail.CompatibleNm" />
                                <div class="ModifiableEditCustomBox_@ViewBag.ECODetail.OID">
                                    <div id="InfoECOCompatibleY" class="ECORadioBtn" group="InfoECOcompatible_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_YES">있음</div>
                                    <div id="InfoECOCompatibleN" class="ECORadioBtn" group="InfoECOcompatible_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_NO">없음</div>
                                    <div id="InfoECOCompatibleS" class="ECORadioBtn" group="InfoECOcompatible_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_SAME">동시적용품</div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <th>금형수정</th>
                            <td>
                                <input type="text" class="ModifiableCustomBox_@ViewBag.ECODetail.OID" readonly="readonly" id="" value="@ViewBag.ECODetail.IsMoldNm" />
                                <div class="ModifiableEditCustomBox_@ViewBag.ECODetail.OID">
                                    <div id="InfoECOIsMoldI" class="ECORadioBtn" group="InfoECOisMold_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_IRRELEVANT">무관</div>
                                    <div id="InfoECOIsMoldY" class="ECORadioBtn" group="InfoECOisMold_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_YES">있음</div>
                                    <div id="InfoECOIsMoldN" class="ECORadioBtn" group="InfoECOisMold_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_NEW">신규제작</div>
                                </div>
                            </td>
                            <th>등록사유</th>
                            <td>
                                <input type="text" class="ModifiableCustomBox_@ViewBag.ECODetail.OID" readonly="readonly" id="" value="@ViewBag.ECODetail.ReasonRegistrationNm" />
                                <div class="ModifiableEditCustomBox_@ViewBag.ECODetail.OID">
                                    <div id="InfoECOReasonRegistrationCO" class="ECORadioBtn" group="InfoECOreason_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_ECO">설계변경</div>
                                    <div id="InfoECOReasonRegistrationN" class="ECORadioBtn" group="InfoECOreason_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_NEW">신규</div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <th>보안여부</th>
                            <td>
                                <input type="text" class="ModifiableCustomBox_@ViewBag.ECODetail.OID" readonly="readonly" id="" value="@ViewBag.ECODetail.SecurityNm" />
                                <div class="ModifiableEditCustomBox_@ViewBag.ECODetail.OID">
                                    <div id="InfoECOSecurityS" class="ECORadioBtn" group="InfoECOsecurity_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_SECURITY">보안</div>
                                    <div id="InfoECOSecurityI" class="ECORadioBtn" group="InfoECOsecurity_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_IMPORTANT">중요</div>
                                    <div id="InfoECOSecurityL" class="ECORadioBtn" group="InfoECOsecurity_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_LAW">법규</div>
                                    <div id="InfoECOSecurityN" class="ECORadioBtn" group="InfoECOsecurity_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_COMMON">일반</div>
                                </div>
                            </td>
                            <th>변경내용</th>
                            <td>
                                <input type="text" class="ModifiableCustomBox_@ViewBag.ECODetail.OID" readonly="readonly" id="" value="@ViewBag.ECODetail.ChangesNm" />
                                <div class="ModifiableEditCustomBox_@ViewBag.ECODetail.OID">
                                    <div id="InfoECOChangesDrw" class="ECOCheckBox" name="InfoECOCheckBox_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_DRW">도면</div>
                                    <div id="InfoECOChangesBOM" class="ECOCheckBox" name="InfoECOCheckBox_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_BOM">BOM</div>
                                    <div id="InfoECOChangesProd" class="ECOCheckBox" name="InfoECOCheckBox_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_PRODUCE">생산원단위</div>
                                    <div id="InfoECOChangesNew" class="ECOCheckBox" name="InfoECOCheckBox_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_NEW">신규사양</div>
                                    <div id="InfoECOChangesAdd" class="ECOCheckBox" name="InfoECOCheckBox_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_ADD">생관도번추가</div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <th>재고처리</th>
                            <td>
                                <input type="text" class="ModifiableCustomBox_@ViewBag.ECODetail.OID" readonly="readonly" id="" value="@ViewBag.ECODetail.StockNm" />
                                <div class="ModifiableEditCustomBox_@ViewBag.ECODetail.OID">
                                    <div id="InfoECOStockS" class="ECORadioBtn" group="InfoECOstock_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_IRRELEVANT">무관</div>
                                    <div id="InfoECOStockI" class="ECORadioBtn" group="InfoECOstock_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_EXHAUST">소진</div>
                                    <div id="InfoECOStockL" class="ECORadioBtn" group="InfoECOstock_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_REWORK">REWORK</div>
                                    <div id="InfoECOStockN" class="ECORadioBtn" group="InfoECOstock_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_DISPOSAL">폐기</div>
                                </div>
                            </td>
                            <th>메모사양</th>
                            <td><input type="text" class="Modifiable_@ViewBag.ECODetail.OID" value="@ViewBag.ECODetail.Memo" id="InfoChangeOrder_Memo_@ViewBag.ECODetail.OID" /></td>
                        </tr>
                        <tr>
                            <th>유첨자료</th>
                            <td>
                                <input type="text" class="ModifiableCustomBox_@ViewBag.ECODetail.OID" readonly="readonly" id="" value="@ViewBag.ECODetail.IsAttachedNm" />
                                <div class="ModifiableEditCustomBox_@ViewBag.ECODetail.OID">
                                    <div id="InfoECOIsAttachedN" class="ECORadioBtn" group="InfoECOisAttached_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_NO">없음</div>
                                    <div id="InfoECOIsAttachedY" class="ECORadioBtn" group="InfoECOisAttached_@ViewBag.ECODetail.OID" data-value="@Common.Constant.EoConstant.TYPE_YES">있음</div>
                                </div>
                            </td>
                            <th>고객요구일자</th>
                            <td>
                                <input type="text" class="ModifiableCustomBox_@ViewBag.ECODetail.OID" readonly="readonly" id="" value="@ViewBag.ECODetail.SelRequestDt" />
                                <div class="ModifiableEditCustomBox_@ViewBag.ECODetail.OID">
                                    <div id="InfoChangeOrder_SelRequestDt_@ViewBag.ECODetail.OID" class="ECODatetimeInput_@ViewBag.ECODetail.OID"></div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <th>고객품번</th>
                            <td><input type="text" class="Modifiable_@ViewBag.ECODetail.OID" value="@ViewBag.ECODetail.SelPartNo" id="InfoChangeOrder_SelPartNo_@ViewBag.ECODetail.OID" /></td>
                            <th>E-BOM</th>
                            <td>
                                <input type="text" class="ModifiableCustomBox_@ViewBag.ECODetail.OID" readonly="readonly" id="" value="@ViewBag.ECODetail.EBom" />
                                <div class="ModifiableEditCustomBox_@ViewBag.ECODetail.OID">
                                    <div id="InfoChangeOrder_EBom_@ViewBag.ECODetail.OID" class="ECODatetimeInput_@ViewBag.ECODetail.OID"></div>
                                </div>

                            </td>
                        </tr>
                        <tr>
                            <th>개발/양산 구분</th>
                            <td>
                                <input type="text" class="ModifiableCustomBox_@ViewBag.ECODetail.OID" readonly="readonly" id="" value="@ViewBag.ECODetail.DevMPNm" />
                                <div class="ModifiableEditCustomBox_@ViewBag.ECODetail.OID required">
                                    <div id="InfoChangeOrder_devType_@ViewBag.ECODetail.OID" class="ECOComboBox"></div>
                                </div>
                            </td>
                            <th>차종</th>
                            <td><input class="Modifiable_@ViewBag.ECODetail.OID" type="text" value="@ViewBag.ECODetail.CarType" id="InfoChangeOrder_CarType_@ViewBag.ECODetail.OID" readonly="readonly" /></td>
                        </tr>
                        <tr>
                            <th style="vertical-align:text-top;line-height:32px;">세부설명</th>
                            <td colspan="3">
                                <textarea class="Modifiable_@ViewBag.ECODetail.OID" id="InfoChangeOrder_Description_@ViewBag.ECODetail.OID" style="height:100px;" readonly="readonly">@ViewBag.ECODetail.Description</textarea>
                            </td>
                        </tr>
                        <tr>
                            <th style="vertical-align:text-top;line-height:32px;">첨부파일</th>
                            <td colspan="3">
                                <div id="InfoChangeOrder_File_@ViewBag.ECODetail.OID" style="width:100%;">
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div id="ECOEffectAssess" class="basic_grid dective">
            <table class="tableTopButtonBox">
                <tr>
                    <td>
                        @if ((((List<Common.Models.BPolicyAuth>)ViewBag.ECODetail.BPolicyAuths).FindIndex(item => item.AuthNm == Common.Constant.CommonConstant.AUTH_MODIFY) > -1
                        && (ViewBag.ApprovStatus == null || ViewBag.ApprovStatus != Common.Constant.CommonConstant.POLICY_APPROVAL_STARTED)) || ViewBag.ApprovFlag == Common.Constant.CommonConstant.ACTION_YES)
                        {
                        <button class="custom-button" id="InfoChangeOrder_assessEdit_@ViewBag.ECODetail.OID"><i class="fas fa-pen"></i> 수정</button>
                        }
                        <button class="custom-button" id="InfoChangeOrder_assessCancel_@ViewBag.ECODetail.OID" hidden="hidden"><i class="fas fa-window-close"></i> 취소</button>
                        <button class="custom-button" id="InfoChangeOrder_assessSave_@ViewBag.ECODetail.OID" hidden="hidden"><i class="fas fa-save"></i> 저장</button>
                        @if (ViewBag.ApprovStatus == null || ViewBag.ApprovStatus != Common.Constant.CommonConstant.POLICY_APPROVAL_STARTED)
                        {
                        <button class="custom-button" id="InfoChangeOrder_assessLoad_@ViewBag.ECODetail.OID" hidden="hidden"><i class="fas fa-save"></i> 최신 평가표 불러오기</button>
                        }
                    </td>
                </tr>
            </table>
            <div style="width:100%;height:623px;" class="scrollY">
                <table class="effectAssessList effectAssessList_@ViewBag.ECODetail.OID">
                </table>
                <table class="effectAssessList effectAssessListNew_@ViewBag.ECODetail.OID" hidden="hidden">
                </table>
            </div>
        </div>
        <div id="ECRRelation" class="basic_grid">
            <div id="InfoChangeOrder_ECRRelation_@ViewBag.ECODetail.OID"></div>
        </div>
        <div id="ebomList" class="basic_grid">
            <div id="InfoChangeOrder_ebomList_@ViewBag.ECODetail.OID"></div>
        </div>
        <div id="ebomStatement" class="basic_grid">

            <div id="InfoChangeOrder_ebomStatement_@ViewBag.ECODetail.OID"></div>

        </div>

        <div id="mbomList" class="basic_grid">

            <div id="InfoChangeOrder_mbomList_@ViewBag.ECODetail.OID"></div>

        </div>
        <div id="mbomStatement" class="basic_grid">
            <div id="InfoChangeOrder_mbomStatement_@ViewBag.ECODetail.OID"></div>
        </div>
        <div id="approvHistory" class="basic_grid dective">
            <div id="InfoChangeOrder_ApphisInfo_@ViewBag.ECODetail.OID">
            </div>
        </div>
    </div>
</div>

<script>
    var loadFlag = 'F';
    var newList = $('.effectAssessListNew_@ViewBag.ECODetail.OID');
    var InfoAssess$ = $('.effectAssessList_@ViewBag.ECODetail.OID');
    var InfodevType$ = $('#InfoChangeOrder_devType_@ViewBag.ECODetail.OID');
    var InforeasonChange$ = $('#InfoChangeOrder_reasonChange_@ViewBag.ECODetail.OID');
    var ebomGridId = '#InfoChangeOrder_ebomList_@ViewBag.ECODetail.OID';
    var InfoOriginList$ = @Html.Raw(Json.Encode(ViewBag.originList));
    var InforeasonList$ =  @Html.Raw(Json.Encode(ViewBag.reasonList));
    var InfoSelassessList$ =  @Html.Raw(Json.Encode(ViewBag.SelassessList));
    var Compatible = '@ViewBag.ECODetail.Compatible';
    var IsMold = '@ViewBag.ECODetail.IsMold';
    var ReasonRegistration = '@ViewBag.ECODetail.ReasonRegistration';
    var Security = '@ViewBag.ECODetail.Security';
    var Stock = '@ViewBag.ECODetail.Stock';
    var IsAttached = '@ViewBag.ECODetail.IsAttached';
    var checkList = [];
    var ECOListData = [];
    var loadAssessData;
    var ECRRelationData = [];
     var modifyAuth = @Json.Encode(((List<Common.Models.BPolicyAuth>)ViewBag.ECODetail.BPolicyAuths).FindIndex(item => item.AuthNm == Common.Constant.CommonConstant.AUTH_MODIFY) > -1);
    var InFoFiles = $('#InfoChangeOrder_File_@ViewBag.ECODetail.OID').FileUpload({ OID : '@ViewBag.ECODetail.OID'});
    $(function () {
        InFoFiles.ReadOnlyMode();
        $('.ModifiableEditCustomBox_@ViewBag.ECODetail.OID').attr('hidden', true);
        $('.ECOCheckBox').jqxCheckBox({ width: 120, height: 32 });
        $('.ECODatetimeInput_@ViewBag.ECODetail.OID').jqxDateTimeInput({ width: 225, height: 32, formatString: 'yyyy-MM-dd' });

        var DesignChangeDt = "@ViewBag.ECODetail.DesignChangeDt";

        if (DesignChangeDt == null || DesignChangeDt == "") {
            $('#InfoChangeOrder_DesignChangeDt_@ViewBag.ECODetail.OID').jqxDateTimeInput('setDate', null);
        } else {
            DesignChangeDt = DesignChangeDt.substring(0, 10);
            $('#InfoChangeOrder_DesignChangeDt_@ViewBag.ECODetail.OID').jqxDateTimeInput('setDate', DesignChangeDt);
        }
         var ReqDt = "@ViewBag.ECODetail.SelRequestDt";

        if (ReqDt == null || ReqDt == "") {
            $('#InfoChangeOrder_SelRequestDt_@ViewBag.ECODetail.OID').jqxDateTimeInput('setDate', null);
        } else {
            ReqDt = ReqDt.substring(0, 10);
            $('#InfoChangeOrder_SelRequestDt_@ViewBag.ECODetail.OID').jqxDateTimeInput('setDate', ReqDt);
        }
     var Ebom = "@ViewBag.ECODetail.EBom";

        if (Ebom == null || Ebom == "") {
            $('#InfoChangeOrder_EBom_@ViewBag.ECODetail.OID').jqxDateTimeInput('setDate', null);
        } else {
            Ebom = Ebom.substring(0, 10);
            $('#InfoChangeOrder_EBom_@ViewBag.ECODetail.OID').jqxDateTimeInput('setDate', Ebom);
        }


        $('.ECORadioBtn').jqxRadioButton({ width: 120, height: 32 });
        $('[group="InfoECOcompatible_@ViewBag.ECODetail.OID"]').jqxRadioButton({ groupName: 'InfoECOcompatible_@ViewBag.ECODetail.OID' });
        $('[group="InfoECOisMold_@ViewBag.ECODetail.OID"]').jqxRadioButton({ groupName: 'InfoECOisMold_@ViewBag.ECODetail.OID' });
        $('[group="InfoECOreason_@ViewBag.ECODetail.OID"]').jqxRadioButton({ groupName: 'InfoECOreason_@ViewBag.ECODetail.OID' });
        $('[group="InfoECOsecurity_@ViewBag.ECODetail.OID"]').jqxRadioButton({ groupName: 'InfoECOsecurity_@ViewBag.ECODetail.OID' });
        $('[group="InfoECOstock_@ViewBag.ECODetail.OID"]').jqxRadioButton({ groupName: 'InfoECOstock_@ViewBag.ECODetail.OID' });
        $('[group="InfoECOisAttached_@ViewBag.ECODetail.OID"]').jqxRadioButton({ groupName: 'InfoECOisAttached_@ViewBag.ECODetail.OID' });

        _.each($('div[group="InfoECOcompatible_@ViewBag.ECODetail.OID"]'), function (item) {
            if ($(item).data('value') == "@ViewBag.ECODetail.Compatible") {
                $(item).jqxRadioButton('check');
            }
        });

        _.each($('div[group="InfoECOisMold_@ViewBag.ECODetail.OID"]'), function (item) {
            if ($(item).data('value') == "@ViewBag.ECODetail.IsMold") {
                $(item).jqxRadioButton('check');
            }
        });

        _.each($('div[group="InfoECOreason_@ViewBag.ECODetail.OID"]'), function (item) {
            if ($(item).data('value') == "@ViewBag.ECODetail.ReasonRegistration") {
                $(item).jqxRadioButton('check');
            }
        });

        _.each($('div[group="InfoECOsecurity_@ViewBag.ECODetail.OID"]'), function (item) {
            if ($(item).data('value') == "@ViewBag.ECODetail.Security") {
                $(item).jqxRadioButton('check');
            }
        });

        _.each($('div[group="InfoECOstock_@ViewBag.ECODetail.OID"]'), function (item) {
            if ($(item).data('value') == "@ViewBag.ECODetail.Stock") {
                $(item).jqxRadioButton('check');
            }
        });

        _.each($('div[group="InfoECOisAttached_@ViewBag.ECODetail.OID"]'), function (item) {
            if ($(item).data('value') == "@ViewBag.ECODetail.IsAttached") {
                $(item).jqxRadioButton('check');
            }
        });
        var InfoEcrChanges = "@ViewBag.ECODetail.Changes";
        var InfoEcrChange = InfoEcrChanges.split(',');
        _.each($('div[name="InfoECOCheckBox_@ViewBag.ECODetail.OID"]'), function (item) {
            if (InfoEcrChanges.indexOf(',') > -1) {
                _.each(InfoEcrChanges.split(','), function (Changes) {
                    if ($(item).data('value') == Changes) {
                        $(item).jqxCheckBox('check');
                    }
                });
            } else {
                if ($(item).data('value') == InfoEcrChanges) {
                    $(item).jqxCheckBox('check');
                }
            }
        });
        var InfoDevTypeList = [{ type: '@Common.Constant.EoConstant.TYPE_DEV_KorNm', value: '@Common.Constant.EoConstant.TYPE_DEV' },
                { type: '@Common.Constant.EoConstant.TYPE_MP_KorNm', value: '@Common.Constant.EoConstant.TYPE_MP' }];
                var InfoDevTypeSource =
                {
                    localdata: InfoDevTypeList,
                    datatype: "json",
                    datafields:
                        [
                            { name: 'type', type: 'string' },
                            { name: 'value', type: 'string' },
                        ]
                };
        var InfodevAdapter = new $.jqx.dataAdapter(InfoDevTypeSource);
        InfodevType$.jqxComboBox({ source: InfodevAdapter, displayMember: "type", valueMember: "value", width: 100, height: 32 });
        InfodevType$.val('@ViewBag.ECODetail.DevMP');

        var InforeasonSource =
        {
            localdata: InforeasonList$,
            datatype: "json",
            datafields:
                [
                    { name: 'KorNm', type: 'string' },
                    { name: 'OID', type: 'int' },
                ]
        };
        var InforeasonAdapter = new $.jqx.dataAdapter(InforeasonSource);
        InforeasonChange$.jqxComboBox({ source: InforeasonAdapter, displayMember: "KorNm", valueMember: "OID",width: 220, height: 32 });
        InforeasonChange$.val('@ViewBag.ECODetail.ReasonChange');

        for (var i = 0; i < InfoOriginList$.length; i++) {
            var tr;
            var td = document.createElement("td");
            var nametag = document.createElement("h4");
            var managerDiv = document.createElement("div");
            nametag.innerHTML = InfoOriginList$[i].Name;

            var managerOID = document.createElement("input");
            managerOID.type = "hidden";
            managerOID.id = "managerOID_" + i + "_@ViewBag.ECODetail.OID";

            var manager = document.createElement("input");
            manager.type = "text";
            manager.setAttribute('readonly', 'readonly');
            manager.id = "managerNm_" + i + "_@ViewBag.ECODetail.OID";
            if (InfoOriginList$[i].ToOID != null) {
                managerOID.setAttribute('value',InfoOriginList$[i].ToOID);
                manager.setAttribute('value',InfoOriginList$[i].ManagerNm);
            }
            var btn = document.createElement("button");
            btn.innerHTML = "<i class='fas fa-search'></i> 처리자 선택";
            btn.className = "custom-button assessModify";
            btn.setAttribute('data-oid', i);
            btn.id = "selManager_" + i + "_@ViewBag.ECODetail.OID";
            btn.addEventListener('click', function (e) {
                var param = {};
                param.ToOID = $(this).attr('data-oid');
                param.OID = "@ViewBag.ECODetail.OID";
                OpenAssessManagerDialog(function (res) {
                }, null, param, '/ChangeOrder/dlgSelectAssessmanager', '처리자 등록');
            }, false);

            var wrapDiv$ = document.createElement("div");
                wrapDiv$.className = "scrollY";
             var div$ = document.createElement("div");
            div$.id = "assessList_" + i + "_@ViewBag.ECODetail.OID";

            if (i % 2 != 1) {
                tr = document.createElement("tr");

                td.appendChild(nametag);
                nametag.appendChild(managerDiv);
                managerDiv.appendChild(managerOID);
                managerDiv.appendChild(manager);
                managerDiv.appendChild(btn);
                wrapDiv$.appendChild(div$);
                td.appendChild(wrapDiv$);
                tr.appendChild(td);
            } else {

                td.appendChild(nametag);
                nametag.appendChild(managerDiv);
                managerDiv.appendChild(managerOID);
                managerDiv.appendChild(manager);
                managerDiv.appendChild(btn);
                wrapDiv$.appendChild(div$);
                td.appendChild(wrapDiv$);
                tr.appendChild(td);
            }
            $(InfoAssess$).append(tr);


            var source = {
                localdata: InfoOriginList$[i].Cdata,
                datatype: "json",
                datafields: [
                    { name: 'Name' },
                    { name: 'OID' },
                    { name: 'FromOID' }
                ],
            }
            var dataAdapter = new $.jqx.dataAdapter(source);
            $("#assessList_" + i+"_@ViewBag.ECODetail.OID").jqxListBox({ source: dataAdapter, displayMember: "Name", valueMember: "OID", width: 820, checkboxes: true , autoHeight:true});

        }
        $('.assessModify').attr('hidden', true);
        for (var i = 0; i < InfoSelassessList$.length; i++) {
            for (j = 0; j < InfoSelassessList$[i].CheckData.length; j++) {
                var check = InfoSelassessList$[i].CheckData[j].ToOID;
                $("#assessList_" + i + "_@ViewBag.ECODetail.OID").jqxListBox('checkItem', check);

            }
            $("#assessList_" + i + "_@ViewBag.ECODetail.OID").jqxListBox({
                disabled: true
            });
        }

        $('[group="InfoECOcompatible_@ViewBag.ECODetail.OID"]').on('click', function (event) {
            if (Compatible == $(this).data('value')) {
                $(this).jqxRadioButton('uncheck');
                Compatible = null;
            } else {
                Compatible = $(this).data('value');
            }
        });
        $('div[group="InfoECOisMold_@ViewBag.ECODetail.OID"]').on('click', function (event) {
            if (IsMold == $(this).data('value')) {
                $(this).jqxRadioButton('uncheck');
                IsMold = null;
            } else {
                IsMold = $(this).data('value');
            }
        });
        $('div[group="InfoECOreason_@ViewBag.ECODetail.OID"]').on('click', function (event) {
            if (ReasonRegistration == $(this).data('value')) {
                $(this).jqxRadioButton('uncheck');
                ReasonRegistration = null;
            } else {
                ReasonRegistration = $(this).data('value');
            }
        });
        $('div[group="InfoECOsecurity_@ViewBag.ECODetail.OID"]').on('click', function (event) {
            if (Security == $(this).data('value')) {
                $(this).jqxRadioButton('uncheck');
                Security = null;
            } else {
                Security = $(this).data('value');
            }
        });
        $('div[group="InfoECOstock_@ViewBag.ECODetail.OID"]').on('click', function (event) {
            if (Stock == $(this).data('value')) {
                $(this).jqxRadioButton('uncheck');
                Stock = null;
            } else {
                Stock = $(this).data('value');
            }
        });
        $('div[group="InfoECOisAttached_@ViewBag.ECODetail.OID"]').on('click', function (event) {
            if (IsAttached == $(this).data('value')) {
                $(this).jqxRadioButton('uncheck');
                IsAttached = null;
            } else {
                IsAttached = $(this).data('value');
            }
        });

        const ECOOID = '@ViewBag.ECODetail.OID';
        const DocDiv$ = $('#InfoChangeOrder_' + ECOOID);
        const headerStatus = $('#InfoChangeOrder_' + ECOOID + ' .pointer_wrap .pointer');
        const current = @ViewBag.ECODetail.BPolicyOID;

        if (headerStatus != null && headerStatus.length > 0) {
            headerStatus.removeClass('pointer_focus');
            const currentStatus = headerStatus.filter(function (index, item) {
                return item.getAttribute('data-Status') == current;
            });
            if (currentStatus != null && currentStatus.length > 0) {
                currentStatus[0].className += ' ' + 'pointer_focus';
            }
        }
        $('#InfoChangeOrder_EditBtn_@ViewBag.ECODetail.OID').on('click', function () {
            $('.Modifiable_@ViewBag.ECODetail.OID').removeAttr('readonly');
            $('.ModifiableCustomBox_@ViewBag.ECODetail.OID').attr('hidden', true);
            $('.ModifiableEditCustomBox_@ViewBag.ECODetail.OID').attr('hidden', false);
            $('#InfoChangeOrder_CancelBtn_@ViewBag.ECODetail.OID').attr('hidden', false);
            $('#InfoChangeOrder_SaveBtn_@ViewBag.ECODetail.OID').attr('hidden', false);
            $('#InfoChangeOrder_EditBtn_@ViewBag.ECODetail.OID').attr('hidden', true);
            $('#InfoChangeOrder_ApprovalBtn_@ViewBag.ECODetail.OID').attr('hidden', true);

            //수정 가능한 항목을 표시
            var modifyTag = document.createElement('div');
            modifyTag.className = "modifyTag";

            $('.Modifiable_@ViewBag.ECODetail.OID').parent().css('position', 'relative');
            $('.ModifiableEditCustomBox_@ViewBag.ECODetail.OID').parent().css('position', 'relative');
            $('.ModifiableEditCustomBox_@ViewBag.OID').parent().css('position', 'relative');

            $('.required').parent().append(modifyTag);
            InFoFiles.EditMode();



        });
        $('#InfoChangeOrder_CancelBtn_@ViewBag.ECODetail.OID').on('click', function () {
            PageReload();
        });
        $('#InfoChangeOrder_ApprovalBtn_@ViewBag.ECODetail.OID').on('click', function () {
            OpenApprovalDialog(function () {
                PageReload();
            }, null, { TargetOID: ECOOID }, '/Common/Approval', '결재');
        });

        $('#InfoChangeOrder_SaveBtn_@ViewBag.ECODetail.OID').on('click', function () {
            var param = {};
            param.OID = @ViewBag.ECODetail.OID;
            param.ItemGroup = $('#InfoChangeOrder_ItemGroup_@ViewBag.ECODetail.OID').val();
            param.Title = $('#InfoChangeOrder_Title_@ViewBag.ECODetail.OID').val();
            param.DesignChangeDt = $('#InfoChangeOrder_DesignChangeDt_@ViewBag.ECODetail.OID').val();
            param.ReasonChange = InforeasonChange$.val();
            param.Compatible = Compatible;
            param.IsMold = IsMold;
            param.ReasonRegistration = ReasonRegistration;
            param.Security = Security;
            param.Type = '@ViewBag.ECODetail.Type';
            param.Stock = Stock;
            param.Memo = $('#InfoChangeOrder_Memo_@ViewBag.ECODetail.OID').val();
            param.IsAttached = IsAttached;
            param.SelRequestDt = $('#InfoChangeOrder_SelRequestDt_@ViewBag.ECODetail.OID').val();
            param.SelPartNo = $('#InfoChangeOrder_SelPartNo_@ViewBag.ECODetail.OID').val();
            param.EBom = $('#InfoChangeOrder_EBom_@ViewBag.ECODetail.OID').val();
            param.DevMP = InfodevType$.val();
            param.CarType = $('#InfoChangeOrder_CarType_@ViewBag.ECODetail.OID').val();
            param.Description = $('#InfoChangeOrder_Description_@ViewBag.ECODetail.OID').val();
            var chkReason = [];
            for (var i = 0; i < $('input[name="InfoECOCheckBox_@ViewBag.ECODetail.OID"]').length; i++) {
                if ($('input[name="InfoECOCheckBox_@ViewBag.ECODetail.OID"]')[i].value == "true") {
                    chkReason.push($('div[name="InfoECOCheckBox_@ViewBag.ECODetail.OID"]').eq(i).data('value'));
                }
            }
            param.Changes = chkReason.join(',');;
            var Files = InFoFiles.Files();
            var removeFiles = InFoFiles.RemoveFiles();
            if (!WebUtils.isEmpty(removeFiles)) {
                param.delFiles = [];
                param.delFiles = removeFiles;
            }

            if (param.Title == "" || param.Title == null) {
                alert('제목을 입력하여 주세요.');
                return;
            }
            if (param.DesignChangeDt == "" || param.DesignChangeDt == null) {
                alert('설계변경일자를 선택하여 주세요.');
                return;
            }
            if (param.ReasonChange == "" || param.ReasonChange == null) {
                alert('변경사유를 선택하여 주세요.');
                return;
            }
            if (param.DevMP == "" || param.DevMP == null) {
                alert('개발/양산 구분을 선택하여 주세요.');
                return;
            }
            SendDataWithFile('/ChangeOrder/UdtChangeOrder', param, Files, function (response) {
                if (response.isError) {
                    alert(response.resultMessage);
                    return;
                }
                alert("저장되었습니다.");
                PageReload();
            });


        });

        $('#InfoChangeOrder_assessEdit_@ViewBag.ECODetail.OID').on('click', function () {
                    $('#InfoChangeOrder_assessEdit_@ViewBag.ECODetail.OID').attr('hidden', 'hidden');
                    $('#InfoChangeOrder_assessCancel_@ViewBag.ECODetail.OID').removeAttr('hidden');
                    $('#InfoChangeOrder_assessSave_@ViewBag.ECODetail.OID').removeAttr('hidden');
                    $('#InfoChangeOrder_assessLoad_@ViewBag.ECODetail.OID').removeAttr('hidden');
                    if ('@(ViewBag.ApprovStatus == null || ViewBag.ApprovStatus != Common.Constant.CommonConstant.POLICY_APPROVAL_STARTED)' != "False") {
                        $('.assessModify').attr('hidden', false);
                    }
                    //ToDo 결재중상태시 유동적 열기기능
                    if ('@(ViewBag.ApprovStatus == null || ViewBag.ApprovStatus != Common.Constant.CommonConstant.POLICY_APPROVAL_STARTED)' != "False") {
                       for (var i = 0; i < InfoOriginList$.length; i++) {
                            $("#assessList_" + i + "_@ViewBag.ECODetail.OID").jqxListBox({
                                disabled: false
                            });
                        }
                    } else {
                         for (var i = 0; i < InfoOriginList$.length; i++) {
                             if ($("#managerOID_" + i + "_@ViewBag.ECODetail.OID").val() == '@Session["UserOID"]') {
                                $("#assessList_" + i + "_@ViewBag.ECODetail.OID").jqxListBox({
                                    disabled: false
                                });
                            }
                        }
                    }
                });
                $('#InfoChangeOrder_assessCancel_@ViewBag.ECODetail.OID').on('click', function () {
                    loadFlag = 'F';
                    $('.assessModify').attr('hidden', true);
                    $('#InfoChangeOrder_assessEdit_@ViewBag.ECODetail.OID').removeAttr('hidden');
                    $('#InfoChangeOrder_assessCancel_@ViewBag.ECODetail.OID').attr('hidden', 'hidden');
                    $('#InfoChangeOrder_assessSave_@ViewBag.ECODetail.OID').attr('hidden', 'hidden');
                    $('#InfoChangeOrder_assessLoad_@ViewBag.ECODetail.OID').attr('hidden', 'hidden');
                    InfoAssess$.removeAttr('hidden');
                    newList.attr('hidden', 'hidden');
                    for (var i = 0; i < InfoOriginList$.length; i++) {
                        $("#assessList_" + i + "_@ViewBag.ECODetail.OID").jqxListBox('clearSelection');
                        $("#assessList_" + i + "_@ViewBag.ECODetail.OID").jqxListBox('uncheckAll');

                        if (InfoOriginList$[i].ToOID != null) {
                            $("#managerOID_" + i + "_@ViewBag.ECODetail.OID").val(InfoOriginList$[i].ToOID);
                            $("#managerNm_" + i + "_@ViewBag.ECODetail.OID").val(InfoOriginList$[i].ManagerNm);
                        } else {
                              $("#managerOID_" + i + "_@ViewBag.ECODetail.OID").val("");
                            $("#managerNm_" + i + "_@ViewBag.ECODetail.OID").val("");
                        }

                        for (j = 0; j < InfoSelassessList$[i].CheckData.length; j++) {
                            var check = InfoSelassessList$[i].CheckData[j].ToOID;
                            $("#assessList_" + i + "_@ViewBag.ECODetail.OID").jqxListBox('checkItem', check);

                        }
                        $("#assessList_" + i + "_@ViewBag.ECODetail.OID").jqxListBox({
                            disabled: true
                        });
                    }
                });
                $('#InfoChangeOrder_assessSave_@ViewBag.ECODetail.OID').off().on('click', function () {
                    if (gClickDuplication) { return; }
                    gClickDuplication = true;
                    if (confirm('저장 하시겠습니까?')) {
                        var iData = {};
                        iData.RootOID = @ViewBag.ECODetail.OID;
                        iData.Type = '@Common.Constant.EoConstant.TYPE_ASSESSLIST';
                        var checkList = [];
                        if (loadFlag == "F") { //기존 리비전 평가표로 작업시
                            for (var i = 0; i < InfoOriginList$.length; i++) {
                                var list = [];
                                var data = {};
                                data.OID = InfoOriginList$[i].OID;
                                if ($("#managerOID_" + i + "_@ViewBag.ECODetail.OID").val() != null) {
                                    data.ToOID = $("#managerOID_" + i + "_@ViewBag.ECODetail.OID").val();
                                }
                                list.push(data);
                                var a = $('#assessList_' + i + "_@ViewBag.ECODetail.OID").jqxListBox('getCheckedItems');
                                for (var j = 0; j < a.length; j++) {
                                    list.push(a[j].originalItem);
                                }
                                checkList.push(list);

                            }
                        } else if (loadFlag == "T") { //최신 평가표로 불러온후 작업시
                            for (var i = 0; i < loadAssessData.length; i++) {
                                var list = [];
                                var data = {};
                                data.OID = loadAssessData[i].OID;
                                list.push(data);
                                var a = $('#assessListNew_' + i + "_@ViewBag.ECODetail.OID").jqxListBox('getCheckedItems');
                                for (var j = 0; j < a.length; j++) {
                                    list.push(a[j].originalItem);
                                }
                                checkList.push(list);

                            }
                        }
                        RequestData('/ChangeOrder/UpdateECOAssess', { _assessList: checkList, delData: iData }, function (response) {
                            if (response.isError) {
                                alert(response.resultMessage);
                                return;
                            }
                            alert("저장되었습니다.");
                            gClickDuplication = false;
                            //PageReload();

                            $('.assessModify').attr('hidden', true);
                            $('#InfoChangeOrder_assessEdit_@ViewBag.ECODetail.OID').removeAttr('hidden');
                            $('#InfoChangeOrder_assessCancel_@ViewBag.ECODetail.OID').attr('hidden', 'hidden');
                            $('#InfoChangeOrder_assessSave_@ViewBag.ECODetail.OID').attr('hidden', 'hidden');
                            $('#InfoChangeOrder_assessLoad_@ViewBag.ECODetail.OID').attr('hidden', 'hidden');
                            RequestData('/ChangeOrder/SelChangeOrderAssessList', { OID: '@ViewBag.ECODetail.OID' }, function (response) {
                                if (response.isError) {
                                    alert(response.resultMessage);
                                    return;
                                }
                                InfoOriginList$ = response.originList;
                                InfoSelassessList$ = response.SelassessList;
                            });
                            for (var i = 0; i < InfoSelassessList$.length; i++) {
                                $("#assessList_" + i + "_@ViewBag.ECODetail.OID").jqxListBox({
                                    disabled: true
                                });
                            }
                        });

                    }
                    gClickDuplication = false;
                });
        $('#InfoChangeOrder_assessLoad_@ViewBag.ECODetail.OID').on('click', function () {
            if (confirm('최신 평가표를 불러오시겠습니까?')) {
                RequestData('/Manage/SelAssessLibrary', param, function (response) {
                    if (response.isError) {
                        alert(response.resultMessage);
                        return;
                    }
                    loadFlag = 'T';
                    InfoAssess$.attr('hidden', 'hidden');
                    newList.removeAttr('hidden');
                    newList.empty();
                    loadAssessData = response;
                    for (var i = 0; i < response.length; i++) {
                        var tr;
                        var td = document.createElement("td");
                        if (i % 2 != 1) {
                            tr = document.createElement("tr");
                            var td = document.createElement("td");
                            var nametag = document.createElement("h4");
                            nametag.innerHTML = response[i].Name;
                            var div$ = document.createElement("div");
                            div$.id = "assessListNew_" + i + "_@ViewBag.ECODetail.OID";
                            td.appendChild(nametag);
                            td.appendChild(div$);
                            tr.appendChild(td);
                        } else {
                            var td = document.createElement("td");
                            var nametag = document.createElement("h4");
                            nametag.innerHTML = response[i].Name;
                            var div$ = document.createElement("div");
                            div$.id = "assessListNew_" + i + "_@ViewBag.ECODetail.OID";
                            td.appendChild(nametag);
                            td.appendChild(div$);
                            tr.appendChild(td);
                        }
                        $(newList).append(tr);


                        var source = {
                            localdata: response[i].Cdata,
                            datatype: "json",
                            datafields: [
                                { name: 'Name' },
                                { name: 'OID' },
                                { name: 'FromOID' }
                            ],
                        }
                        var dataAdapter = new $.jqx.dataAdapter(source);
                        $("#assessListNew_" + i + "_@ViewBag.ECODetail.OID").jqxListBox({ source: dataAdapter, displayMember: "Name", valueMember: "OID", width: "100%", checkboxes: true });
                    }
                });
            }
        });

        $('#InfoChangeOrder_' + ECOOID + ' .tab').on('click', function () {
            const self$ = $(this);
            const infoValue = self$.attr('info');
            //control side menu
            DocDiv$.find('[class="tab info_focus"]').removeClass('info_focus');
            self$.addClass('info_focus');
            DocDiv$.find('[class="basic_grid"]').addClass('dective');
            DocDiv$.find('[id="' + infoValue + '"]').removeClass('dective');

            if (infoValue == 'ECOEffectAssess') {

            } else if (infoValue == "ECRRelation") {
                var selRow;
                var rowKey = null;
                var param = {};
                param.Type = '@Common.Constant.EoConstant.TYPE_ECR_RELATION';
                param.RootOID = @ViewBag.ECODetail.OID;
                var ECRRelationSource = {
                    datatype: 'json',
                    datafields: [
                        { name: 'OID' },
                        { name: 'Name' },
                        { name: 'Title' },
                        { name: 'DesignChangeDt', type: 'date' },
                        { name: 'CreateUs' },
                        { name: 'BPolicy' },
                        { name: 'BPolicyOID' },
                    ],
                }

                const ECRRelationGrid$ = $('#InfoChangeOrder_ECRRelation_@ViewBag.ECODetail.OID');
                ECRRelationGrid$.jqxGrid({
                    theme: "kdnc",
                    width: "100%",
                    height: 665,
                    rowsheight: 28,
                    columnsheight: 30,
                    selectionmode: 'checkbox',
                    sortable: false,
                    pageable: false,
                    columns: [
                        {
                            text: 'NO', width: '5%', cellsalign: 'center', columntype: 'number', align: 'center', cellsrenderer: function (row, column, value) {
                                return "<div style='width:100%;height:100%;text-align:center;vertical-align:middle;line-height:1.9;'>" + (value + 1) + "</div>";
                            }
                        },
                        { text: 'ECR_NO', datafield: 'Name', width: '30%', },
                        { text: '제목', datafield: 'Title', width: '24.2%', },
                        { text: '변경요청일자', datafield: 'DesignChangeDt', width: '15%', type: 'text', align: 'center', cellsalign: 'center', cellsFormat: 'yyyy-MM-dd' },
                        { text: '작성자', datafield: 'CreateUsNm', width: '10%', },
                        {
                            text: '상태', datafield: 'BPolicy', width: '14%', align: 'center', cellsalign: 'center',
                            cellsrenderer: function (row, column, value) {
                                return "<div style='width:100%;height:100%;text-align:center;vertical-align:middle;line-height:1.9;'>" + value.StatusNm + "</div>";
                            },
                        },
                    ],
                    showtoolbar: true,
                    toolbarheight: 45,
                    renderToolbar: function (statusbar) {
                        statusbar.empty();
                        var container$ = $('<div class="lGridComponent"></div>');
                        var ECRRelationAddBtn$ = $('<button class="custom-button"><i class="fas fa-plus-square"></i> 추가</button>').jqxButton();
                        var ECRRelationdelBtn$ = $('<button class="custom-button"><i class="fas fa-window-close"></i> 삭제</button>').jqxButton();
                        if (modifyAuth) {
                            container$.append(ECRRelationAddBtn$);
                            container$.append(ECRRelationdelBtn$);
                        }
                        statusbar.append(container$);
                        //행 추가
                        ECRRelationAddBtn$.on('click', function (e) {
                            var datarow = {};
                            OpenSearchECRDialog(function (res) {
                                getECRRelationList(ECRRelationSource, ECRRelationGrid$, param);
                            }, null, param, '/ChangeOrder/dlgSearchECR?Type=' + param.Type, '변경요청 선택', ECRRelationGrid$, ECRRelationSource, "Edit");

                        });
                        ECRRelationdelBtn$.on('click', function (e) {
                            var rowindex = ECRRelationGrid$.jqxGrid('selectedrowindexes');
                            var selectedRecords = new Array();
                            if (rowindex == null || rowindex == undefined || rowindex.length <= 0) {
                                alert('삭제할 행을 선택하여 주세요');
                            } else {
                                if (confirm('삭제하시겠습니까?')) {
                                    for (var m = 0; m < rowindex.length; m++) {
                                        var row = ECRRelationGrid$.jqxGrid('getrowdata', rowindex[m]);
                                        row.Type = param.Type;
                                        row.ToOID = row.OID;
                                        selectedRecords.push(row);
                                    }
                                    RequestData('/ChangeOrder/DelEOContents', { _param: selectedRecords }, function (response) {
                                        if (response.isError) {
                                            alert(response.resultMessage);
                                            return;
                                        }
                                        alert("삭제 되었습니다.");
                                        getECRRelationList(ECRRelationSource, ECRRelationGrid$, param);
                                        ECRRelationGrid$.jqxGrid('clearselection');
                                    });
                                }

                            }
                        });
                    }
                });
                getECRRelationList(ECRRelationSource, ECRRelationGrid$, param);

            } else if (infoValue == 'ebomList') {
                var selRow;
                var rowKey = null;
                var param = {};
                param.Type = '@Common.Constant.EoConstant.TYPE_EBOM_LIST';
                param.RootOID = @ViewBag.ECODetail.OID;
                param.ECOListData = ECOListData;

                var ebomListSource = {
                    datatype: 'json',
                    datafields: [
                        { name: 'OID' },
                        { name: 'RootOID' },
                        { name: 'ToOID' },
                        { name: 'Type' },
                        { name: 'Name' },
                        { name: 'BPolicyOID' },
                        { name: 'BPolicy' },
                        { name: 'CreateUsNm' },
                        { name: 'CreateDt', type: 'date' },
                        { name: 'Car_Lib_OID' },
                        { name: 'Car_Lib_Nm' },
                        { name: 'ITEM_No' },
                        { name: 'ITEM_NoNm' },
                        { name: 'Block_No' },
                        { name: 'Block_NoNm' },
                        { name: 'Material_OID' },
                        { name: 'Material_Nm' },
                        { name: 'EPartType' },
                        { name: 'Sel_Eo' },
                        { name: 'Sel_Eo_Dt', type: 'date' },
                        { name: 'Thumbnail' },
                        { name: 'Revision' },
                    ],
                }

                const ebomListGrid$ = $('#InfoChangeOrder_ebomList_@ViewBag.ECODetail.OID');
                ebomListGrid$.jqxGrid({
                    theme: "kdnc",
                    width: "100%",
                    height: 665,
                    rowsheight: 28,
                    columnsheight: 30,
                    selectionmode: 'checkbox',
                    sortable: false,
                    pageable: false,
                    columns: [
                        {
                            text: 'NO', width: '5%', cellsalign: 'center', columntype: 'number', align: 'center', cellsrenderer: function (row, column, value) {
                                return "<div style='width:100%;height:100%;text-align:center;vertical-align:middle;line-height:1.9;'>" + (value + 1) + "</div>";
                            }
                        },
                        { text: '품번', datafield: 'Name', width: '15%', },
                        { text: 'Block_No', datafield: 'Block_NoNm', width: '15%', },
                        { text: '차종', datafield: 'Car_Lib_Nm', width: '15%', },
                        { text: '차수(리비전)', datafield: 'Revision', width: '10%', align: 'center', },
                        { text: '작성일', datafield: 'CreateDt', width: '15%', align: 'center', cellsFormat: 'yyyy-MM-dd', },
                        { text: '작성자', datafield: 'CreateUsNm', width: '10%', },
                        {
                            text: '상태', datafield: 'BPolicy', width: '13.2%', align: 'center', cellsalign: 'center',
                            cellsrenderer: function (row, column, value) {
                                return "<div style='width:100%;height:100%;text-align:center;vertical-align:middle;line-height:1.9;'>" + value.StatusNm + "</div>";
                            },
                        },
                    ],
                    showtoolbar: true,
                    toolbarheight: 45,
                    renderToolbar: function (statusbar) {
                        statusbar.empty();
                        var container$ = $('<div class="lGridComponent"></div>');
                        var ebomListAddBtn$ = $('<button class="custom-button"><i class="fas fa-plus-square"></i> 추가</button>').jqxButton();
                        var ebomListAddChildBtn$ = $('<button class="custom-button"><i class="fas fa-plus-square"></i> 하위부품 추가</button>').jqxButton();
                        var ebomListdelBtn$ = $('<button class="custom-button"><i class="fas fa-window-close"></i> 삭제</button>').jqxButton();
                        var ebomListUpBtn$ = $('<button class="custom-button"><i class="fas fa-caret-square-up"></i> 위로</button>').jqxButton();
                        var ebomListDownBtn$ = $('<button class="custom-button"><i class="fas fa-caret-square-down"></i> 아래로</button>').jqxButton();
                        var ebomOrdSaveBtn$ = $('<button class="custom-button"><i class="fas fa-check"></i> 순서 적용</button>').jqxButton();

                        if (modifyAuth) {
                            container$.append(ebomListAddBtn$);
                            container$.append(ebomListAddChildBtn$);
                            container$.append(ebomListdelBtn$);
                            container$.append(ebomListUpBtn$);
                            container$.append(ebomListDownBtn$);
                            container$.append(ebomOrdSaveBtn$);
                        }
                        statusbar.append(container$);
                        //행 추가
                        ebomListAddBtn$.on('click', function (e) {
                            var datarow = {};
                            OpenSearchEPartDialog(function (res) {
                                getBomList(ebomListSource, ebomListGrid$, param);
                            }, null, param, '/ChangeOrder/dlgSearchEPart?Type=' + param.Type, '부품 선택', 'Epart', 'Edit');

                        });
                        ebomListAddChildBtn$.on('click', function (e) {

                            var datarowIdx = ebomListGrid$.jqxGrid('getselectedrowindexes');
                            if (datarowIdx.length == 1) {
                                var datarow = ebomListGrid$.jqxGrid('getrowdata', datarowIdx);
                                var innerParam = {};
                                innerParam.Type = '@Common.Constant.EoConstant.TYPE_EBOM_LIST';
                                innerParam.RootOID = @ViewBag.ECODetail.OID;
                                innerParam.FromOID = datarow.OID;
                                OpenSearchEPartDialog(function (res) {
                                    getBomList(ebomListSource, ebomListGrid$, param);
                                }, null, innerParam, '/ChangeOrder/dlgSearchEPart?Type=' + innerParam.Type, '부품 선택', 'EpartChild', 'Edit');
                            } else {
                                alert('품목을 선택해주세요');
                            }

                        });
                        ebomListdelBtn$.on('click', function (e) {
                            var rowindex = ebomListGrid$.jqxGrid('selectedrowindexes');
                            var selectedRecords = new Array();
                            if (rowindex == null || rowindex == undefined || rowindex.length <= 0) {
                                alert('삭제할 행을 선택하여 주세요');
                            } else {
                                if (confirm('삭제하시겠습니까?')) {
                                    for (var m = 0; m < rowindex.length; m++) {
                                        var row = ebomListGrid$.jqxGrid('getrowdata', rowindex[m]);
                                        row.Type = param.Type;
                                        row.ToOID = row.OID;
                                        selectedRecords.push(row);
                                    }
                                    RequestData('/ChangeOrder/DelEOContents', { _param: selectedRecords }, function (response) {
                                        if (response.isError) {
                                            alert(response.resultMessage);
                                            return;
                                        }
                                        alert("삭제 되었습니다.");
                                        getBomList(ebomListSource, ebomListGrid$, param);
                                    });
                                }

                            }
                        });
                        ebomListUpBtn$.on('click', function (e) {
                            var datarowIdx = ebomListGrid$.jqxGrid('getselectedrowindexes');

                            var row = ebomListGrid$.jqxGrid('getrowdata', datarowIdx[0]);
                            var idx = row.boundindex - 1;
                            if (row.OID == ECOOID) {
                                return;
                            }
                            const ebomDataSource = ebomListGrid$.jqxGrid("source").loadedData;
                            fMoveGridRecusive(ebomDataSource, row.OID, 'UP');
                            ebomListGrid$.jqxGrid('updatebounddata');
                            ebomListGrid$.jqxGrid('clearselection');
                            if (idx >= 0) {
                                ebomListGrid$.jqxGrid('selectrow', idx);
                            } else {
                                ebomListGrid$.jqxGrid('selectrow', 0);
                            }
                        });
                        ebomListDownBtn$.on('click', function (e) {
                            var datarowIdx = ebomListGrid$.jqxGrid('getselectedrowindexes');
                            var row = ebomListGrid$.jqxGrid('getrowdata', datarowIdx[0]);
                            var idx = row.boundindex + 1;

                            if (row.OID == ECOOID) {
                                return;
                            }
                            const ebomDataSource = ebomListGrid$.jqxGrid("source").loadedData;
                            var midx = ebomDataSource.length - 1;
                            fMoveGridRecusive(ebomDataSource, row.OID, 'DOWN');
                            ebomListGrid$.jqxGrid('updatebounddata');
                            ebomListGrid$.jqxGrid('clearselection');
                            if (idx <= midx) {
                                ebomListGrid$.jqxGrid('selectrow', idx);
                            } else {
                                ebomListGrid$.jqxGrid('selectrow', midx);
                            }
                        });

                        ebomOrdSaveBtn$.on('click', function (e) {
                            var data = ebomListGrid$.jqxGrid('getrows');
                            if (data.length == 0) {
                                alert('등록된 내용을 확인해주세요');
                                return false;
                            }
                            var iData = {};
                            iData.RootOID = ECOOID;
                            iData.Type = '@Common.Constant.EoConstant.TYPE_EBOM_LIST';
                            RequestData('/ChangeOrder/InsECOContents', { _param: data, delData: iData }, function (response) {
                                if (response.isError) {
                                    alert(response.resultMessage);
                                    return;
                                }
                                alert("저장되었습니다.");
                                ebomListGrid$.jqxGrid('clearselection');
                                //getBomList(ebomListSource, ebomListGrid$, param);
                            });
                        });
                    }

                });

                getBomList(ebomListSource, ebomListGrid$, param);

            } else if (infoValue == 'ebomStatement') {
                var selRow;
                var rowKey = null;
                var rowDataField = null;
                var param = {};

                param.Type = '@Common.Constant.EoConstant.TYPE_EBOM_STATEMENT';
                param.RootOID = @ViewBag.ECODetail.OID;

                var ebomStatementSource = {
                    unboundmode: true,
                    datatype: 'json',
                    datafields: [
                        { name: 'OID' },
                        { name: 'PNo' },
                        { name: 'RootOID' },
                        { name: 'Type' },
                        { name: 'PName' },
                        { name: 'BfThumbnail' },
                        { name: 'AfThumbnail' },
                        { name: 'Statement' },
                        { name: 'Description' },
                        { name: 'Stamp' },
                        { name: 'CreateUsNm' },
                        { name: 'CreateDt', type: 'date' },
                    ],
                }

                const ebomStatementGrid$ = $('#InfoChangeOrder_ebomStatement_@ViewBag.ECODetail.OID');
                ebomStatementGrid$.jqxGrid({
                    theme: "kdnc",
                    width: "100%",
                    height: 665,
                    rowsheight: 200,
                    columnsheight: 30,
                    //autorowheight: true,
                    editable: true,
                    //autoheight: true,
                    selectionmode: 'checkbox',
                    sortable: false,
                    pageable: false,
                    columns: [
                        {
                            text: 'NO', width: "3%", cellsalign: 'center', columntype: 'number', align: 'center',
                            cellsrenderer: function (row, column, value) {
                                return "<div style='width:100%;height:100%;text-align:center;vertical-align:middle;line-height:200px;'>" + (value + 1) + "</div>";
                            }
                        },
                        {
                            text: '품번', datafield: 'PNo', width: "11%", align: 'center', cellsalign: 'center',
                            validation: function (cell, value) {
                                if (value == '' || value == null) {
                                    return { result: false, message: "P/NO를 입력해주세요" };
                                }
                                return true;
                            }
                        },
                        {
                            text: '품명', datafield: 'PName', width: "20%", align: 'center', cellsalign: 'center',
                        },
                        {
                            text: '변경 전', datafield: 'BfThumbnail', width: "12%", align: 'center', cellsalign: 'center',
                            createwidget: function (row, column, value, htmlElement) {
                                var uid = row.bounddata.uid;
                                var div = '<div class="basic_image changeOrderImg">';
                                div += '<input type="file" name="file1_' + uid + '" multiple="true" id="imageDrag1_' + uid + '" style="display:none;">';
                                div += '<div class="image_inputbox" id="dropZone1_' + uid + '"><span class="imgPlaceholder">이미지</span></div>';
                                div += '<ul class="image_thumbnail" id="uploadResult1_' + uid + '"></div>';
                                $(htmlElement).append(div);
                                if (value != null && value != '') {
                                    $(htmlElement).find('#dropZone1_' + uid).empty();
                                    $(htmlElement).find('#dropZone1_' + uid).append('<img class="img-thumbnail" src="@Url.Content("~/images/Thumbnail/")' + value + '" />');
                                }
                            },
                            initwidget: function (row, column, value, htmlElement) {

                            }
                        },
                        {
                            text: '변경 후', datafield: 'AfThumbnail', width: "12%", align: 'center', cellsalign: 'center',
                            createwidget: function (row, column, value, htmlElement) {
                                var uid = row.bounddata.uid;
                                var div = '<div class="basic_image changeOrderImg">';
                                div += '<input type="file" name="file2_' + uid + '" multiple="true" id="imageDrag2_' + uid + '" style="display:none;">';
                                div += '<div class="image_inputbox" id="dropZone2_' + uid + '"><span class="imgPlaceholder">이미지</span></div>';
                                div += '<ul class="image_thumbnail" id="uploadResult2_' + uid + '"></div>';
                                $(htmlElement).append(div);
                                if (value != null && value != '') {
                                    $(htmlElement).find('#dropZone2_' + uid).empty();
                                    $(htmlElement).find('#dropZone2_' + uid).append('<img class="img-thumbnail" src="@Url.Content("~/images/Thumbnail/")' + value + '" />');
                                }
                                dropImage(uid);
                            },
                            initwidget: function (row, column, value, htmlElement) {

                            }
                        },
                        { text: '변경 내역', datafield: 'Statement', width: "20%", align: 'center', cellsalign: 'center', },
                        { text: '비고', datafield: 'Description', width: "20%", align: 'center', cellsalign: 'center', },

                        { text: '작성자', datafield: 'CreatUsNm', width: "6%", align: 'center', cellsalign: 'center', hidden: true },
                        { text: '작성일', datafield: 'CreateDt', width: "8%", align: 'center', cellsalign: 'center', cellsFormat: 'yyyy-MM-dd', hidden: true },

                        //   { text: '내용', datafield: 'Description', width: "30%", align: 'center', cellsalign: 'center', },
                    ],
                    showtoolbar: true,
                    toolbarheight: 45,
                    renderToolbar: function (statusbar) {
                        statusbar.empty();
                        var container$ = $('<div class="lGridComponent"></div>');
                        var ebomStatementAddBtn$ = $('<button class="custom-button"><i class="fas fa-plus-square"></i> 추가</button>').jqxButton();
                        var ebomStatementDelBtn$ = $('<button class="custom-button"><i class="fas fa-minus-square"></i> 삭제</button>').jqxButton();
                        var ebomStatementSaveBtn$ = $('<button class="custom-button"><i class="fas fa-save"></i> 저장</button>').jqxButton();
                        if (modifyAuth) {
                            container$.append(ebomStatementAddBtn$);
                            container$.append(ebomStatementDelBtn$);
                            container$.append(ebomStatementSaveBtn$);
                        }
                        statusbar.append(container$);
                        //행 추가
                        ebomStatementAddBtn$.on('click', function (e) {
                            ebomStatementGrid$.jqxGrid('endcelledit', rowKey, rowDataField, false);
                            var rowData = {};
                            rowData.RootOID = @ViewBag.ECODetail.OID;
                            rowData.Type = '@Common.Constant.EoConstant.TYPE_EBOM_STATEMENT';
                            ebomStatementGrid$.jqxGrid('addrow', null, rowData);
                            ebomStatementGrid$.jqxGrid({ editable: true });
                        });
                        ebomStatementSaveBtn$.on('click', function (e) {
                            ebomStatementGrid$.jqxGrid('endcelledit', rowKey, rowDataField, false);
                            var data = ebomStatementGrid$.jqxGrid('getrows');
                            for (var i = 0; i < data.length; i++) {
                                var cellData = ebomStatementGrid$.jqxGrid('getcelltext', i, 'PNo');
                                if (cellData == null || cellData == undefined || cellData == '') {
                                    alert('P/NO를 입력해주세요');
                                    return false;
                                }
                            }
                            if (confirm("저장하시겠습니까?")) {
                                var iData = {};
                                iData.RootOID = @ViewBag.ECODetail.OID;
                                iData.Type = '@Common.Constant.EoConstant.TYPE_EBOM_STATEMENT';

                                RequestData('/ChangeOrder/InsECOContents', { _param: data, delData: iData }, function (response) {
                                    if (response.isError) {
                                        alert(response.resultMessage);
                                        return;
                                    }
                                    alert("저장되었습니다.");
                                    getBomList(ebomStatementSource, ebomStatementGrid$, param);
                                });
                            }
                        });
                        ebomStatementGrid$.on('cellclick', function (event) {
                            // event arguments.
                            var args = event.args;

                            rowKey = args.rowindex;
                            rowDataField = args.datafield;

                        });

                        ebomStatementDelBtn$.on('click', function (e) {
                            var rowindex = ebomStatementGrid$.jqxGrid('selectedrowindexes');
                            rowindex.sort();
                            if (rowindex == null || rowindex == undefined || rowindex.length <= 0) {
                                alert('삭제할 행을 선택하여 주세요');
                            } else {
                                if (confirm('삭제하시겠습니까?')) {
                                    for (var i = rowindex.length - 1; i >= 0; i--) {
                                        var id = ebomStatementGrid$.jqxGrid('getrowid', rowindex[i]);
                                        ebomStatementGrid$.jqxGrid('deleterow', id);
                                    }
                                }
                            }
                        });
                    }
                });
                getBomList(ebomStatementSource, ebomStatementGrid$, param);
            } else if (infoValue == 'approvHistory') {
                RequestHtml('/Common/ApprovalHistory', { OID: ECOOID }, function (res) {
                    $('#InfoChangeOrder_ApphisInfo_' + ECOOID).html(res);
                });
            }
        });
    });

    function getBomList(_Source, _Grid$, _param) {
        RequestData("/ChangeOrder/SelEOContents", _param, function (res) {
            PrintJqxGrid(_Source, _Grid$, res);
        });
    }
    function getECRRelationList(_Source, _Grid$, _param) {
        RequestData("/ChangeOrder/SelECRRelation", _param, function (res) {
            ECRRelationData = res;
            PrintJqxGrid(_Source, _Grid$, res);
        });
    }

    function dropImage(uid) {
        $('#dropZone1_' + uid).simpleUpload({
            url: '/Common/ImgUploadFile',
            params: {},
            method: 'post',
            maxFileNum: 1,
            maxFileSize: 1000000,
            allowedMimeType: ['image/jpeg', 'image/png', 'image/gif'],
            dropZone: '#dropZone1_' + uid,
        }).on('upload:over', function (e, files) {
            alert('Number of files is over');
        }).on('upload:invalid', function (e, files) {
            for (var i = 0; i < files.length; i++) {
                alert('Invalid ' + files[i].reason + ': ' + files[i].name);
            }
        }).on('upload:done', function (e, file, index, data, xhr) {
            $('#uploadResult1_' + uid).empty();
            $('#uploadResult1_' + uid).append('<li>' + '<img class="img-thumbnail" src="@Url.Content("~/images/Thumbnail/")' + data + '" />' + '</li>');
            var rowd = $('#InfoChangeOrder_ebomStatement_@ViewBag.ECODetail.OID').jqxGrid('getrowdatabyid', uid);
            rowd.BfThumbnail = data;
            $('#InfoChangeOrder_ebomStatement_@ViewBag.ECODetail.OID').jqxGrid('updaterow', uid, rowd);
            $('.imgPlaceholder').hide();
        });
         $('#dropZone2_' + uid).simpleUpload({
            url: '/Common/ImgUploadFile',
            params: {},
            method: 'post',
            maxFileNum: 1,
            maxFileSize: 1000000,
            allowedMimeType: ['image/jpeg', 'image/png', 'image/gif'],
            dropZone: '#dropZone2_' + uid,
        }).on('upload:over', function (e, files) {
            alert('Number of files is over');
        }).on('upload:invalid', function (e, files) {
            for (var i = 0; i < files.length; i++) {
                alert('Invalid ' + files[i].reason + ': ' + files[i].name);
            }
        }).on('upload:done', function (e, file, index, data, xhr) {
            $('#uploadResult2_' + uid).empty();
            $('#uploadResult2_' + uid).append('<li>' + '<img class="img-thumbnail" src="@Url.Content("~/images/Thumbnail/")' + data + '" />' + '</li>');
            var rowd = $('#InfoChangeOrder_ebomStatement_@ViewBag.ECODetail.OID').jqxGrid('getrowdatabyid', uid);
            rowd.AfThumbnail = data;
            $('#InfoChangeOrder_ebomStatement_@ViewBag.ECODetail.OID').jqxGrid('updaterow', uid, rowd);
            $('.imgPlaceholder').hide();
        });
    }

</script>