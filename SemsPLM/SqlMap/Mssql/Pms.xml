<?xml version="1.0" encoding="utf-8" ?>
<sqlMap
 namespace="Pms"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <alias>
    <typeAlias alias="PmsProject" type="Pms.Models.PmsProject" />
    <typeAlias alias="PmsProcess" type="Pms.Models.PmsProcess" />
    <typeAlias alias="PmsRelationship" type="Pms.Models.PmsRelationship" />
    <typeAlias alias="PmsIssue" type="Pms.Models.PmsIssue" />
    
    <typeAlias alias="PmsBaseLineProject" type="Pms.Models.PmsBaseLineProject" />
    <typeAlias alias="PmsBaseLineProcess" type="Pms.Models.PmsBaseLineProcess" />
    <typeAlias alias="PmsBaseLineRelationship" type="Pms.Models.PmsBaseLineRelationship" />

    <typeAlias alias="PmsGateMetting" type="Pms.Models.PmsGateMetting" />
    <typeAlias alias="PmsReliability" type="Pms.Models.PmsReliability" />
    <typeAlias alias="PmsReliabilityItemList" type="Pms.Models.TestItemList" />
    <typeAlias alias="PmsReliabilityReport" type="Pms.Models.PmsReliabilityReport" />
    <typeAlias alias="PmsReliabilityReportItemList" type="Pms.Models.ReportTestItemList" />

    <typeAlias alias="CustomerSchedule" type="Pms.Models.CustomerSchedule" />
    <typeAlias alias="PmsGateSignOff" type="Pms.Models.PmsGateSignOff" />
  </alias>

  <statements>

    <insert id="InsPmsProject" parameterClass="PmsProject">
      INSERT INTO T_DPMS_PROJECT
      ( OID
      , IsTemplate
      , ProjectType
      , EstStartDt
      , EstEndDt
      , EstDuration
      , ActStartDt
      , ActEndDt
      , ActDuration
      , WorkingDay
      , CalendarOID
      , Complete
      , Oem_Lib_OID
      , Car_Lib_OID
      , ITEM_No
      , ITEM_Middle
      , ProjectGrade
      , Customer_OID
      , ProductNm
      , TemplateOID
      , TemplateContent
      , EstDisposalDt )
      VALUES
      ( #OID#
      , #IsTemplate#
      , #ProjectType#
      , #EstStartDt#
      , #EstEndDt#
      , #EstDuration#
      , #ActStartDt#
      , #ActEndDt#
      , #ActDuration#
      , #WorkingDay#
      , #CalendarOID#
      , #Complete#
      , #Oem_Lib_OID#
      , #Car_Lib_OID#
      , #ITEM_No#
      , #ITEM_Middle#
      , #ProjectGrade#
      , #Customer_OID#
      , #ProductNm#
      , #TemplateOID#
      , #TemplateContent#
      , #EstDisposalDt# )
    </insert>
    
    <select id="SelPmsProject" parameterClass="PmsProject" resultClass="PmsProject">
      SELECT
      A.*
      , B.*
      FROM T_DOBJECT A
      LEFT OUTER JOIN T_DPMS_PROJECT B ON A.OID = B.OID
      <dynamic prepend="where">
        <isNotNull prepend="and" property="Type">
          A.Type = #Type#
        </isNotNull>
        <isNotNull prepend="and" property="BPolicyOID">
          A.BPolicyOID = #BPolicyOID#
        </isNotNull>
        <isNotNull prepend="and" property="OID">
          A.OID = #OID#
        </isNotNull>
        <isNotNull prepend="and" property="Name">
          A.Name LIKE CONCAT('%',#Name#,'%')
        </isNotNull>
        <isNotNull prepend="and" property="Description">
          A.Description LIKE CONCAT('%',#Description#,'%')
        </isNotNull>
        <isNotNull prepend="and" property="ProjectType">
          B.ProjectType = #ProjectType#
        </isNotNull>
        <isNotNull prepend="and" property="Oem_Lib_OID">
          B.Oem_Lib_OID = #Oem_Lib_OID#
        </isNotNull>
        <isNotNull prepend="and" property="Car_Lib_OID">
          B.Car_Lib_OID = #Car_Lib_OID#
        </isNotNull>   
        <isNotNull prepend="and" property="IsTemplate">
          B.IsTemplate IS NOT NULL
        </isNotNull>
        <isNull prepend="and" property="IsTemplate">
          B.IsTemplate IS NULL
        </isNull>
      </dynamic>
      AND A.DeleteDt IS NULL
    </select>

    <update id="UdtPmsProject" parameterClass="PmsProject">
      UPDATE T_DPMS_PROJECT 
      <dynamic prepend="SET" close=" ">
        <isNotNull prepend="," property="ProjectGrade">
          ProjectGrade = #ProjectGrade#
        </isNotNull>   
        <isNotNull prepend="," property="Customer_OID">
          Customer_OID = #Customer_OID#
        </isNotNull>
        <isNotNull prepend="," property="EstDuration">
          EstDuration = #EstDuration#
        </isNotNull>
        <isNotNull prepend="," property="EstStartDt">
          EstStartDt = #EstStartDt#
        </isNotNull>
        <isNotNull prepend="," property="EstEndDt">
          EstEndDt = #EstEndDt#
        </isNotNull>
        <isNotNull prepend="," property="ActStartDt">
          ActStartDt = #ActStartDt#
        </isNotNull>
        <isNotNull prepend="," property="ActEndDt">
          ActEndDt = #ActEndDt#
        </isNotNull>
        <isNotNull prepend="," property="ActDuration">
          ActDuration = #ActDuration#
        </isNotNull>
        <isNotNull prepend="," property="Complete">
          Complete = #Complete#
        </isNotNull>
        <isNotNull prepend="," property="EstDisposalDt">
          EstDisposalDt = #EstDisposalDt#
        </isNotNull>
        WHERE OID = #OID#
      </dynamic>
    </update>

    <insert id="InsPmsProcess" parameterClass="PmsProcess">
      INSERT INTO T_DPMS_PROCESS
      ( OID
      , ProcessType
      , Id
      , Dependency
      , Level
      , EstStartDt
      , EstEndDt
      , EstDuration
      , ActStartDt
      , ActEndDt
      , ActDuration
      , Complete
      , No )
      VALUES
      ( #OID#
      , #ProcessType#
      , #Id#
      , #Dependency#
      , #Level#
      , #EstStartDt#
      , #EstEndDt#
      , #EstDuration#
      , #ActStartDt#
      , #ActEndDt#
      , #ActDuration#
      , #Complete#
      , #No# )
    </insert>

    <select id="SelPmsProcess" parameterClass="PmsProcess" resultClass="PmsProcess">
      SELECT
      A.*
      , B.*
      FROM T_DOBJECT A
      LEFT OUTER JOIN T_DPMS_PROCESS B ON A.OID = B.OID
      <dynamic prepend="where">
        <isNotNull prepend="and" property="Type">
          A.Type = #Type#
        </isNotNull>
        <isNotNull prepend="and" property="OID">
          A.OID = #OID#
        </isNotNull>
        <isNotNull prepend="and" property="Name">
          A.Name LIKE CONCAT('%',#Name#,'%')
        </isNotNull>
        <isNotNull prepend="and" property="Description">
          A.Description LIKE CONCAT('%',#Description#,'%')
        </isNotNull>
        <isNotNull prepend="and" property="ProcessType">
          B.ProcessType = #ProcessType#
        </isNotNull>
      </dynamic>
      AND A.DeleteDt IS NULL
    </select>

    <update id="UdtPmsProcess" parameterClass="PmsProcess">
      UPDATE T_DPMS_PROCESS SET
      <dynamic prepend=" " close=" ">
        <isNotNull prepend="," property="ProcessType">
          ProcessType = #ProcessType#
        </isNotNull>
        <isNotNull prepend="," property="Id">
          Id = #Id#
        </isNotNull>
        <isNotNull prepend="," property="Dependency">
          Dependency = #Dependency#
        </isNotNull>
        <isNull prepend="," property="Dependency">
          Dependency = NULL
        </isNull>
        <isNotNull prepend="," property="Level">
          Level = #Level#
        </isNotNull>
        <isNotNull prepend="," property="EstDuration">
          EstDuration = #EstDuration#
        </isNotNull>
        <isNotNull prepend="," property="EstStartDt">
          EstStartDt = #EstStartDt#
        </isNotNull>
        <isNotNull prepend="," property="EstEndDt">
          EstEndDt = #EstEndDt#
        </isNotNull>
        <isNotNull prepend="," property="ActStartDt">
          ActStartDt = #ActStartDt#
        </isNotNull>
        <isNotNull prepend="," property="ActEndDt">
          ActEndDt = #ActEndDt#
        </isNotNull>
        <isNotNull prepend="," property="ActDuration">
          ActDuration = #ActDuration#
        </isNotNull>
        <isNotNull prepend="," property="Complete">
          Complete = #Complete#
        </isNotNull>
        <isNotNull prepend="," property="No">
          No = #No#
        </isNotNull>
        WHERE OID = #OID#
      </dynamic>
    </update>

    <insert id="InsPmsRelationship" parameterClass="PmsRelationship">
      <selectKey type="pre" resultClass="int" property="OID">
        SELECT ISNULL(MAX(OID),0) + 1 AS OID FROM T_DPMS_RELATIONSHIP
      </selectKey>
      INSERT INTO T_DPMS_RELATIONSHIP
      ( OID
      , FromOID
      , ToOID
      , RootOID
      , Count
      , Type
      , Ord
      , RoleOID
      , TaskOID
      , CheckListEtc
      , CreateDt
      , CreateUs )
      VALUES
      ( #OID#
      , #FromOID#
      , #ToOID#
      , #RootOID#
      , #Count#
      , #Type#
      , #Ord#
      , #RoleOID#
      , #TaskOID#
      , #CheckListEtc#
      , GETDATE()
      , #CreateUs# )
    </insert>

    <insert id="InsPmsRelationshipNotOrd" parameterClass="PmsRelationship">
      <selectKey type="pre" resultClass="int" property="OID">
        SELECT ISNULL(MAX(OID),0) + 1 AS OID FROM T_DPMS_RELATIONSHIP
      </selectKey>
      INSERT INTO T_DPMS_RELATIONSHIP
      ( OID
      , FromOID
      , ToOID
      , RootOID
      , Count
      , Type
      , Ord
      , RoleOID
      , TaskOID
      , CheckListEtc
      , CreateDt
      , CreateUs )
      VALUES
      ( #OID#
      , #FromOID#
      , #ToOID#
      , #RootOID#
      , #Count#
      , #Type#
      , (SELECT ISNULL(MAX(Ord),0) + 1 AS OID FROM T_DPMS_RELATIONSHIP WHERE FromOID = #FromOID# AND Type = #Type#)
      , #RoleOID#
      , #TaskOID#
      , #CheckListEtc#
      , GETDATE()
      , #CreateUs# )
    </insert>

    <select id="SelPmsRelationship" parameterClass="PmsRelationship" resultClass="PmsRelationship">
      SELECT *
      FROM T_DPMS_RELATIONSHIP
      <dynamic prepend="where">
        <isNotNull prepend="and" property="FromOID">
          FromOID = #FromOID#
        </isNotNull>
        <isNotNull prepend="and" property="ToOID">
          ToOID = #ToOID#
        </isNotNull>
        <isNotNull prepend="and" property="RootOID">
          RootOID = #RootOID#
        </isNotNull>
        <isNotNull prepend="and" property="Type">
          Type = #Type#
        </isNotNull>
        <isNotNull prepend="and" property="RoleOID">
          RoleOID = #RoleOID#
        </isNotNull>
        <isNotNull prepend="and" property="TaskOID">
          TaskOID = #TaskOID#
        </isNotNull>
        AND DeleteDt IS NULL
      </dynamic>
      ORDER BY Ord
    </select>

    <update id="DelPmsRelationship" parameterClass="PmsRelationship">
      UPDATE T_DPMS_RELATIONSHIP
      SET DeleteDt = GETDATE()
      , DeleteUs = #DeleteUs#
      WHERE Type = #Type#
      AND OID = #OID#
    </update>

    <update id="DelPmsRelationshipByData" parameterClass="PmsRelationship">
      UPDATE T_DPMS_RELATIONSHIP
      SET DeleteDt = GETDATE()
      , DeleteUs = #DeleteUs#
      <dynamic prepend="where">
        <isNotNull prepend="and" property="FromOID">
          FromOID = #FromOID#
        </isNotNull>
        <isNotNull prepend="and" property="ToOID">
          ToOID = #ToOID#
        </isNotNull>
        <isNotNull prepend="and" property="RootOID">
          RootOID = #RootOID#
        </isNotNull>
        <isNotNull prepend="and" property="Type">
          Type = #Type#
        </isNotNull>
        <isNotNull prepend="and" property="OID">
          OID = #OID#
        </isNotNull>
      </dynamic>
    </update>

    <update id="UdtPmsRelationship" parameterClass="PmsRelationship">
      UPDATE T_DPMS_RELATIONSHIP SET
      <dynamic prepend=" " close=" ">
        <isNotNull prepend="," property="Ord">
          Ord = #Ord#
        </isNotNull>
        <isNotNull prepend="," property="RootOID">
          RootOID = #RootOID#
        </isNotNull>
        <isNotNull prepend="," property="FromOID">
          FromOID = #FromOID#
        </isNotNull>
        <isNotNull prepend="," property="ToOID">
          ToOID = #ToOID#
        </isNotNull>
        <isNotNull prepend="," property="RoleOID">
          RoleOID = #RoleOID#
        </isNotNull>
        <isNotNull prepend="," property="Type">
          Type = #Type#
        </isNotNull>
        <isNotNull prepend="," property="TaskOID">
          TaskOID = #TaskOID#
        </isNotNull>
        <isNotNull prepend="," property="CheckListEtc">
          CheckListEtc = #CheckListEtc#
        </isNotNull>
        WHERE OID = #OID#
      </dynamic>
    </update>

    <insert id="InsPmsBaseLineProject" parameterClass="PmsBaseLineProject">
      INSERT INTO T_DPMS_BASE_LINE_PROJECT
      ( ProjectBaseLineOID
      , ProjectOID
      , ProjectNm
      , ProjectType
      , EstStartDt
      , EstEndDt
      , EstDuration
      , ActStartDt
      , ActEndDt
      , ActDuration
      , WorkingDay
      , CalendarOID
      , Complete )
      SELECT
      #ProjectBaseLineOID#
      , A.OID
      , A.Name
      , B.ProjectType
      , B.EstStartDt
      , B.EstEndDt
      , B.EstDuration
      , B.ActStartDt
      , B.ActEndDt
      , B.ActDuration
      , B.WorkingDay
      , B.CalendarOID
      , B.Complete
      FROM T_DOBJECT A
      LEFT OUTER JOIN T_DPMS_PROJECT B ON A.OID = B.OID
      WHERE A.OID = #TargetProjectOID#
    </insert>

    <select id="SelPmsBaseLineProject" parameterClass="PmsBaseLineProject" resultClass="PmsBaseLineProject">
      SELECT
      A.*
      , B.*
      FROM T_DOBJECT A
      LEFT OUTER JOIN T_DPMS_BASE_LINE_PROJECT B ON A.OID = B.ProjectBaseLineOID
      <dynamic prepend="where">
        <isNotNull prepend="and" property="Type">
          A.Type = #Type#
        </isNotNull>
        <isNotNull prepend="and" property="ProjectBaseLineOID">
          B.ProjectBaseLineOID = #ProjectBaseLineOID#
        </isNotNull>
        <isNotNull prepend="and" property="OID">
          A.OID = #OID#
        </isNotNull>
        <isNotNull prepend="and" property="Name">
          A.Name LIKE CONCAT('%',#Name#,'%')
        </isNotNull>
        <isNotNull prepend="and" property="Description">
          A.Description LIKE CONCAT('%',#Description#,'%')
        </isNotNull>
        <isNotNull prepend="and" property="ProjectType">
          B.ProjectType = #ProjectType#
        </isNotNull>
      </dynamic>
      AND A.DeleteDt IS NULL
    </select>

    <insert id="InsPmsBaseLineProcess" parameterClass="PmsBaseLineProcess">
      INSERT INTO T_DPMS_BASE_LINE_PROCESS
      ( RootBaseLineOID
      , ProcessOID
      , ProcessNm
      , ProcessType
      , Id
      , Dependency
      , Level
      , EstStartDt
      , EstEndDt
      , EstDuration
      , ActStartDt
      , ActEndDt
      , ActDuration
      , Complete )
      SELECT
      #RootBaseLineOID#
      , A.OID
      , A.Name
      , B.ProcessType
      , B.Id
      , B.Dependency
      , B.Level
      , B.EstStartDt
      , B.EstEndDt
      , B.EstDuration
      , B.ActStartDt
      , B.ActEndDt
      , B.ActDuration
      , B.Complete
      FROM T_DOBJECT A
      LEFT OUTER JOIN T_DPMS_PROCESS B ON A.OID = B.OID
      WHERE A.OID = #TargetPrcessOID#
    </insert>

    <select id="SelPmsBaseLineProcess" parameterClass="PmsBaseLineProcess" resultClass="PmsBaseLineProcess">
      SELECT *
      FROM T_DPMS_BASE_LINE_PROCESS
      <dynamic prepend="where">
        <isNotNull prepend="and" property="RootBaseLineOID">
          RootBaseLineOID = #RootBaseLineOID#
        </isNotNull>
        <isNotNull prepend="and" property="ProcessOID">
          ProcessOID = #ProcessOID#
        </isNotNull>
      </dynamic>
    </select>

    <insert id="InsPmsBaseLineRelationship" parameterClass="PmsBaseLineRelationship">
      INSERT INTO T_DPMS_BASE_LINE_RELATIONSHIP
      ( RootBaseLineOID
      , OID
      , Type
      , FromOID
      , ToOID
      , RootOID
      , Ord
      , RoleOID
      , Description
      , CreateDt
      , CreateUs )
      VALUES
      ( #RootBaseLineOID#
      , #BaseData.OID#
      , #BaseData.Type#
      , #BaseData.FromOID#
      , #BaseData.ToOID#
      , #BaseData.RootOID#
      , #BaseData.Ord#
      , #BaseData.RoleOID#
      , #BaseData.Description#
      , GETDATE()
      , #CreateUs# )
    </insert>

    <select id="SelPmsBaseLineRelationship" parameterClass="PmsBaseLineRelationship" resultClass="PmsBaseLineRelationship">
      SELECT *
      FROM T_DPMS_BASE_LINE_RELATIONSHIP
      <dynamic prepend="where">
        <isNotNull prepend="and" property="RootBaseLineOID">
          RootBaseLineOID = #RootBaseLineOID#
        </isNotNull>
        <isNotNull prepend="and" property="FromOID">
          FromOID = #FromOID#
        </isNotNull>
        <isNotNull prepend="and" property="ToOID">
          ToOID = #ToOID#
        </isNotNull>
        <isNotNull prepend="and" property="RootOID">
          RootOID = #RootOID#
        </isNotNull>
        <isNotNull prepend="and" property="Type">
          Type = #Type#
        </isNotNull>
        AND DeleteDt IS NULL
      </dynamic>
      ORDER BY Ord
    </select>


    <select id="SelProjMngtCustomerSchedule" parameterClass="CustomerSchedule" resultClass="CustomerSchedule">
      SELECT *
      FROM T_DCUSTOMER_SCHEDULE
      WHERE 1 = 1
      <isNotNull prepend="and" property="OID">
        OID = #OID#
      </isNotNull>
      <isNotNull prepend="and" property="Car_Lib_OID">
        Car_Lib_OID = #Car_Lib_OID#
      </isNotNull>
      ORDER BY Ord
    </select>


    <insert id="InsProjMngtCustomerSchedule" parameterClass="CustomerSchedule">
      <selectKey type="pre" resultClass="int" property="OID">
        SELECT ISNULL(MAX(OID),0) + 1 AS OID FROM T_DCUSTOMER_SCHEDULE
      </selectKey>
      INSERT INTO T_DCUSTOMER_SCHEDULE
      ( OID
      , Name
      , StartDt
      , Ord
      , Car_Lib_OID )
      VALUES
      ( #OID#
      , #Name#
      , #StartDt#
      , #Ord#
      , #Car_Lib_OID# )
    </insert>

    <delete id="DelProjMngtCustomerSchedule" parameterClass="CustomerSchedule">
      DELETE FROM T_DCUSTOMER_SCHEDULE
      WHERE Car_Lib_OID = #Car_Lib_OID#
    </delete>

    <insert id="InsPmsIssue" parameterClass="PmsIssue">
      INSERT INTO T_DPMS_ISSUE
      (OID
      ,Importance
      ,EstFinDt
      ,Manager_OID
      ,IssueType
      ,FinDt
      ,IsApprovalRequired)
      VALUES
      (#OID#
      ,#Importance#
      ,#EstFinDt#
      ,#Manager_OID#
      ,#IssueType#
      ,#FinDt#
      ,#IsApprovalRequired#);
    </insert>

    <select id="SelIssue" parameterClass="PmsIssue" resultClass="PmsIssue">
      SELECT
      A.*
      , B.*
      FROM T_DOBJECT A
      LEFT OUTER JOIN T_DPMS_ISSUE B ON A.OID = B.OID
      <dynamic prepend="where">
        <isNotNull prepend="and" property="Type">
          A.Type = #Type#
        </isNotNull>
        <isNotNull prepend="and" property="OID">
          A.OID = #OID#
        </isNotNull>
        <isNotNull prepend="and" property="Name">
          A.Name LIKE CONCAT('%',#Name#,'%')
        </isNotNull>
        <isNotNull prepend="and" property="Description">
          A.Description LIKE CONCAT('%',#Description#,'%')
        </isNotNull>
        <isNotNull prepend="and" property="IsApprovalRequired">
          B.IsApprovalRequired = #IsApprovalRequired#
        </isNotNull>
      </dynamic>
      AND A.DeleteDt IS NULL
    </select>

    <update id="UdtIssue" parameterClass="PmsIssue">
      UPDATE T_DPMS_ISSUE  
      <dynamic prepend="SET">
        <isNotNull prepend="," property="Importance">
          Importance = #Importance#
        </isNotNull>
        <isNotNull prepend="," property="EstFinDt">
          EstFinDt = #EstFinDt#
        </isNotNull>
        <isNotNull prepend="," property="Manager_OID">
          Manager_OID = #Manager_OID#
        </isNotNull>
        <isNotNull prepend="," property="IssueType">
          IssueType = #IssueType#
        </isNotNull>
        <isNotEmpty prepend="," property="Contents">
          Contents = #Contents#
        </isNotEmpty>
        <isNotNull prepend="," property="FinDt">
          FinDt = #FinDt#
        </isNotNull>
        <isNotNull prepend="," property="IsApprovalRequired">
          IsApprovalRequired = #IsApprovalRequired#
        </isNotNull>
      </dynamic>
      WHERE OID = #OID#
    </update>


    <select id="SelPmsGateMetting" parameterClass="PmsGateMetting" resultClass="PmsGateMetting">
      SELECT
      A.*
      FROM T_DOBJECT A
      <dynamic prepend="where">
        <isNotNull prepend="and" property="Type">
          A.Type = #Type#
        </isNotNull>
        <isNotNull prepend="and" property="OID">
          A.OID = #OID#
        </isNotNull>
        <isNotNull prepend="and" property="Name">
          A.Name LIKE CONCAT('%',#Name#,'%')
        </isNotNull>
        <isNotNull prepend="and" property="Description">
          A.Description LIKE CONCAT('%',#Description#,'%')
        </isNotNull>
      </dynamic>
      AND A.DeleteDt IS NULL
    </select>

    <select id="SelPmsDocRelationship" parameterClass="PmsRelationship" resultClass="PmsRelationship">
      SELECT *
      FROM T_DPMS_RELATIONSHIP
      WHERE 1 = 1
      AND (Type = 'DOC_CLASS' OR Type = 'DOC_MASTER')
      <isNotNull prepend="and" property="FromOID">
          FromOID = #FromOID#
        </isNotNull>
        <isNotNull prepend="and" property="ToOID">
          ToOID = #ToOID#
        </isNotNull>
        <isNotNull prepend="and" property="RootOID">
          RootOID = #RootOID#
        </isNotNull>
        <isNotNull prepend="and" property="RoleOID">
          RoleOID = #RoleOID#
        </isNotNull>
        <isNotNull prepend="and" property="TaskOID">
          TaskOID = #TaskOID#
        </isNotNull>
      AND DeleteDt IS NULL
      ORDER BY Ord
    </select>

    <insert id="InsPmsReliability" parameterClass="PmsReliability">
      INSERT INTO T_DPMS_RELIABILITY_FROM
      (OID
      , RequiredSchedule
      , DevStep
      , TestStandard
      , RegNum
      , PartNo
      , CarType
      , TestMethodDt
      , NewVer
      , HWVer
      , SWVer
      , CANVer
      , TestApplyVer
      , TestCarType
      , TestPurpose
      , TestContents
      , SampleQuantity
      , TestStandardContents
      , Requirements
      )
      VALUES
      (#OID#
      , #RequiredSchedule#
      , #DevStep#
      , #TestStandard#
      , #RegNum#
      , #PartNo#
      , #CarType#
      , #TestMethodDt#
      , #NewVer#
      , #HWVer#
      , #SWVer#
      , #CANVer#
      , #TestApplyVer#
      , #TestCarType#
      , #TestPurpose#
      , #TestContents#
      , #SampleQuantity#
      , #TestStandardContents#
      , #Requirements#)
    </insert>

    <select id="SelPmsReliability" parameterClass="PmsReliability" resultClass="PmsReliability">
      SELECT
      A.*
      , B.*
      FROM T_DOBJECT A
      LEFT OUTER JOIN T_DPMS_RELIABILITY_FROM B ON A.OID = B.OID
      WHERE A.Type = #Type#
      <isNotNull prepend="and" property="OID">
        A.OID = #OID#
      </isNotNull>
      <isNotNull prepend="and" property="Name">
        A.Name LIKE CONCAT('%',#Name#,'%')
      </isNotNull>
      AND A.DeleteDt IS NULL
    </select>

    <update id="UdtPmsReliability" parameterClass="PmsReliability">
      UPDATE T_DPMS_RELIABILITY_FROM
      <dynamic prepend="SET">
        <isNotNull prepend="," property="RequiredSchedule">
          RequiredSchedule = #RequiredSchedule#
        </isNotNull>
        <isNotNull prepend="," property="DevStep">
          DevStep = #DevStep#
        </isNotNull>
        <isNotNull prepend="," property="TestStandard">
          TestStandard = #TestStandard#
        </isNotNull>
        <isNotNull prepend="," property="RegNum">
          RegNum = #RegNum#
        </isNotNull>
        <isNotNull prepend="," property="TestMethodDt">
          TestMethodDt = #TestMethodDt#
        </isNotNull>
        <isNotNull prepend="," property="NewVer">
          NewVer = #NewVer#
        </isNotNull>
        <isNotNull prepend="," property="HWVer">
          HWVer = #HWVer#
        </isNotNull>
        <isNotNull prepend="," property="SWVer">
          SWVer = #SWVer#
        </isNotNull>
        <isNotNull prepend="," property="CANVer">
          CANVer = #CANVer#
        </isNotNull>
        <isNotNull prepend="," property="TestApplyVer">
          TestApplyVer = #TestApplyVer#
        </isNotNull>
        <isNotNull prepend="," property="TestCarType">
          TestCarType = #TestCarType#
        </isNotNull>
        <isNotNull prepend="," property="TestPurpose">
          TestPurpose = #TestPurpose#
        </isNotNull>
        <isNotNull prepend="," property="TestContents">
          TestContents = #TestContents#
        </isNotNull>
        <isNotNull prepend="," property="SampleQuantity">
          SampleQuantity = #SampleQuantity#
        </isNotNull>
        <isNotNull prepend="," property="TestStandardContents">
          TestStandardContents = #TestStandardContents#
        </isNotNull>
        <isNotNull prepend="," property="Requirements">
          Requirements = #Requirements#
        </isNotNull>
        WHERE OID = #OID#
      </dynamic>
    </update>

    <insert id="InsPmsReliabilityItemList" parameterClass="PmsReliabilityItemList">
      <selectKey type="pre" resultClass="int" property="OID">
        SELECT ISNULL(MAX(OID),0) + 1 AS OID FROM T_DPMS_RELIABILITY_TESTITEMLIST
      </selectKey>
      INSERT INTO T_DPMS_RELIABILITY_TESTITEMLIST
      (OID
      , FromOID
      , TestItemNm
      , TestStandardNo
      , TestCondition
      , Sample
      , ETC
      )
      VALUES
      (#OID#
      , #FromOID#
      , #TestItemNm#
      , #TestStandardNo#
      , #TestCondition#
      , #Sample#
      , #ETC#
      )
    </insert>
    
    <select id="SelPmsReliabilityItemList" parameterClass="PmsReliabilityItemList" resultClass="PmsReliabilityItemList">
      SELECT *
      FROM T_DPMS_RELIABILITY_TESTITEMLIST
      WHERE 1 = 1
      <isNotNull prepend="and" property="FromOID">
        FromOID = #FromOID#
      </isNotNull>
    </select>

    <delete id="delTestItemList" parameterClass="PmsReliabilityItemList">
      DELETE FROM T_DPMS_RELIABILITY_TESTITEMLIST
      WHERE FromOID = #FromOID#
    </delete>

    <insert id="InsPmsReliabilityReport" parameterClass="PmsReliabilityReport">
      INSERT INTO T_DPMS_RELIABILITY_REPORT
      (OID
      , DevStep
      , TotalTestItem
      , WaitingNum
      , ProgressNum
      , CompleteNum
      , NGNum
      , PartNm
      , TotalTestStartDt
      , TotalTestEndDt
      , TestPurpose
      , FromOID
      , RootOID
      )
      VALUES
      (#OID#
      , #DevStep#
      , #TotalTestItem#
      , #WaitingNum#
      , #ProgressNum#
      , #CompleteNum#
      , #NGNum#
      , #PartNm#
      , #TotalTestStartDt#
      , #TotalTestEndDt#
      , #TestPurpose#
      , #FromOID#
      , #RootOID#
      )
    </insert>

    <select id="SelPmsReliabilityReport" parameterClass="PmsReliabilityReport" resultClass="PmsReliabilityReport">
      SELECT
      A.*
      , B.*
      FROM T_DOBJECT A
      LEFT OUTER JOIN T_DPMS_RELIABILITY_REPORT B ON A.OID = B.OID
      WHERE A.Type = #Type#
      <isNotNull prepend="and" property="OID">
        A.OID = #OID#
      </isNotNull>
      <isNotNull prepend="and" property="Name">
        A.Name LIKE CONCAT('%',#Name#,'%')
      </isNotNull>
      <isNotNull prepend="and" property="RootOID">
        B.RootOID = #RootOID#
      </isNotNull>
      <isNotNull prepend="and" property="DevStep">
        B.DevStep = #DevStep#
      </isNotNull>
      <isNotNull prepend="and" property="FromOID">
        B.FromOID = #FromOID#
      </isNotNull>
      <isNotNull prepend="and" property="CreateDt">
        A.CreateDt = #CreateDt#
      </isNotNull>
      AND A.DeleteDt IS NULL
    </select>

    <update id="UdtPmsReliabilityReport" parameterClass="PmsReliabilityReport">
      UPDATE T_DPMS_RELIABILITY_REPORT
      <dynamic prepend="SET">
        <isNotNull prepend="," property="DevStep">
          DevStep = #DevStep#
        </isNotNull>
        <isNotNull prepend="," property="TestPurpose">
          TestPurpose = #TestPurpose#
        </isNotNull>
        <isNotNull prepend="," property="TotalTestItem">
          TotalTestItem = #TotalTestItem#
        </isNotNull>
        <isNotNull prepend="," property="WaitingNum">
          WaitingNum = #WaitingNum#
        </isNotNull>
        <isNotNull prepend="," property="ProgressNum">
          ProgressNum = #ProgressNum#
        </isNotNull>
        <isNotNull prepend="," property="CompleteNum">
          CompleteNum = #CompleteNum#
        </isNotNull>
        <isNotNull prepend="," property="TotalTestStartDt">
          TotalTestStartDt = #TotalTestStartDt#
        </isNotNull>
        <isNotNull prepend="," property="TotalTestEndDt">
          TotalTestEndDt = #TotalTestEndDt#
        </isNotNull>
        <isNotNull prepend="," property="NGNum">
          NGNum = #NGNum#
        </isNotNull>
        WHERE OID = #OID#
      </dynamic>
    </update>

    <insert id="InsPmsReliabilityReportItemList" parameterClass="PmsReliabilityReportItemList">
      <selectKey type="pre" resultClass="int" property="OID">
        SELECT ISNULL(MAX(OID),0) + 1 AS OID FROM T_DPMS_RELIABILITY_REPORT_TESTITEMLIST
      </selectKey>
      INSERT INTO T_DPMS_RELIABILITY_REPORT_TESTITEMLIST
      (OID
      , FromOID
      , TestItemNm
      , EstStartDt
      , EstEndDt
      , ActStartDt
      , ActEndDt
      , ProgressResult
      , ETC
      )
      VALUES
      (#OID#
      , #FromOID#
      , #TestItemNm#
      , #EstStartDt#
      , #EstEndDt#
      , #ActStartDt#
      , #ActEndDt#
      , #ProgressResult#
      , #ETC#
      )
    </insert>

    <select id="SelPmsReliabilityReportItemList" parameterClass="PmsReliabilityReportItemList" resultClass="PmsReliabilityReportItemList">
      SELECT *
      FROM T_DPMS_RELIABILITY_REPORT_TESTITEMLIST
      WHERE 1 = 1
      <isNotNull prepend="and" property="FromOID">
        FromOID = #FromOID#
      </isNotNull>
    </select>


    <delete id="delReportTestItemList" parameterClass="PmsReliabilityReportItemList">
      DELETE FROM T_DPMS_RELIABILITY_REPORT_TESTITEMLIST
      WHERE FromOID = #FromOID#
    </delete>


    <select id="SelPmsGateSignOff" parameterClass="PmsGateSignOff" resultClass="PmsGateSignOff">
      SELECT
      OID
      , Forecast
      , WrCreateStore
      , CalendarEtc
      , NonCompleteIssue
      , SummaryEtc
      , CreateDt
      , CreateUs
      , ModifyDt
      , ModifyUs
      FROM T_DPMS_GATE_SIGN_OFF
      WHERE OID = #OID#
    </select>

    <insert id="InsPmsGateSignOff" parameterClass="PmsGateSignOff">
      INSERT INTO T_DPMS_GATE_SIGN_OFF
      ( OID
      , Forecast
      , WrCreateStore
      , CalendarEtc
      , NonCompleteIssue
      , SummaryEtc
      , CreateDt
      , CreateUs )
      VALUES
      ( #OID#
      , #Forecast#
      , #WrCreateStore#
      , #CalendarEtc#
      , #NonCompleteIssue#
      , #SummaryEtc#
      , GETDATE()
      , #CreateUs# )
    </insert>

    <update id="UdtPmsGateSignOff" parameterClass="PmsGateSignOff">
      UPDATE T_DPMS_GATE_SIGN_OFF
      SET ModifyDt = GETDATE()
      , ModifyUs = #ModifyUs#
      <isNotNull prepend="," property="Forecast">
        Forecast = #Forecast#
      </isNotNull>
      <isNotNull prepend="," property="WrCreateStore">
        WrCreateStore = #WrCreateStore#
      </isNotNull>
      <isNotNull prepend="," property="CalendarEtc">
        CalendarEtc = #CalendarEtc#
      </isNotNull>
      <isNotNull prepend="," property="NonCompleteIssue">
        NonCompleteIssue = #NonCompleteIssue#
      </isNotNull>
      <isNotNull prepend="," property="SummaryEtc">
        SummaryEtc = #SummaryEtc#
      </isNotNull>
      WHERE OID = #OID#
    </update>

    
    <select id="SelPmsRelationshipTaskIsNull" parameterClass="PmsRelationship" resultClass="PmsRelationship">
      SELECT *
      FROM T_DPMS_RELATIONSHIP
      <dynamic prepend="where">
        <isNotNull prepend="and" property="FromOID">
          FromOID = #FromOID#
        </isNotNull>
        <isNotNull prepend="and" property="ToOID">
          ToOID = #ToOID#
        </isNotNull>
        <isNotNull prepend="and" property="RootOID">
          RootOID = #RootOID#
        </isNotNull>
        <isNotNull prepend="and" property="Type">
          Type = #Type#
        </isNotNull>
        <isNotNull prepend="and" property="RoleOID">
          RoleOID = #RoleOID#
        </isNotNull>
        AND TaskOID IS NULL
        AND DeleteDt IS NULL
      </dynamic>
      ORDER BY Ord
    </select>

    <select id="SelOemBPolicy" parameterClass="PmsProject" resultClass="PmsProject">
      SELECT A.BPolicyOID,COUNT(*) as Count
      FROM T_DOBJECT A
      LEFT OUTER JOIN T_DPMS_PROJECT B ON A.OID = B.OID
      <dynamic prepend="where">
        <isNotNull prepend="and" property="Type">
          A.Type = #Type#
        </isNotNull>
        <isNotNull prepend="and" property="Car_Lib_OID">
          B.Car_Lib_OID = #Car_Lib_OID#
        </isNotNull>
      </dynamic>
      AND A.DeleteDt IS NULL
      GROUP BY A.BPOLICYOID
    </select>
    
  </statements>
</sqlMap>