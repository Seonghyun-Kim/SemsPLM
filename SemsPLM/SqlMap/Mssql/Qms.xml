<?xml version="1.0" encoding="utf-8" ?>
<sqlMap
 namespace="Qms"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <alias>
    <typeAlias alias="QuickResponse" type="Qms.Models.QuickResponse" />
    <typeAlias alias="QuickResponseModule" type="Qms.Models.QuickResponseModule" />
    <typeAlias alias="BlockadeItem" type="Qms.Models.BlockadeItem" />
    <typeAlias alias="OccurrenceCauseItem" type="Qms.Models.OccurrenceCauseItem" />
    <typeAlias alias="OccurrenceWhy" type="Qms.Models.OccurrenceWhy" />
    <typeAlias alias="DetectCounterMeasure" type="Qms.Models.DetectCounterMeasure" />
    <typeAlias alias="ImproveCounterMeasure" type="Qms.Models.ImproveCounterMeasure" />
    
    <typeAlias alias="WorkerEdu" type="Qms.Models.WorkerEdu" />
    <typeAlias alias="QmsCheck" type="Qms.Models.QmsCheck" />
    <typeAlias alias="StandardDoc" type="Qms.Models.StandardDoc" />
  </alias>
  
  <statements>
    <insert id="InsQuickResponse" parameterClass="QuickResponse">
      INSERT INTO T_DQMS_QUICK
      (OID,
      PlantLibOID,
      OccurrenceLibOID,
      PartOID,
      LotNo,
      OemLibOID,
      WorkUserOID,
      WriteDt,
      PoorCnt,
      Title,
      OccurrenceAreaLibOID,
      InduceLibOID,
      DefectDegreeLibOID,
      ImputeLibOID,
      ImputeDepartmentOID,
      ImputeSupplierOID,
      Summary,
      PoorDetail,
      RecurrenceFl,
      OccurrencePlace,
      OccurrenceDt,
      CorrectDecisionLibOID,
      MeasureResponseDt,
      Qa,
      BlockadeMaterialFl,
      BlockadeOutProductFl,
      BlockadeProcessProductFl,
      BlockadeFinishProductFl,
      BlockadeStorageProductFl,
      BlockadeShipProductFl,
      PlanUserOID,
      PoorPicture)
      VALUES
      (#OID#,
      #PlantLibOID#,
      #OccurrenceLibOID#,
      #PartOID#,
      #LotNo#,
      #OemLibOID#,
      #WorkUserOID#,
      #WriteDt#,
      #PoorCnt#,
      #Title#,
      #OccurrenceAreaLibOID#,
      #InduceLibOID#,
      #DefectDegreeLibOID#,
      #ImputeLibOID#,
      #ImputeDepartmentOID#,
      #ImputeSupplierOID#,
      #Summary#,
      #PoorDetail#,
      #RecurrenceFl#,
      #OccurrencePlace#,
      #OccurrenceDt#,
      #CorrectDecisionLibOID#,
      #MeasureResponseDt#,
      #Qa#,
      #BlockadeMaterialFl#,
      #BlockadeOutProductFl#,
      #BlockadeProcessProductFl#,
      #BlockadeFinishProductFl#,
      #BlockadeStorageProductFl#,
      #BlockadeShipProductFl#,
      #PlanUserOID#,
      #PoorPicture#)

    </insert>

    <update id="UdtQuickResponse" parameterClass="QuickResponse">
      UPDATE T_DQMS_QUICK
      SET
      OID = #OID#
      <isNotNull prepend="," property="PlantLibOID">
        PlantLibOID = #PlantLibOID#
      </isNotNull>

      <isNotNull prepend="," property="Title">
        Title = #Title#
      </isNotNull>
      
      <isNotNull prepend="," property="OccurrenceLibOID">
        OccurrenceLibOID = #OccurrenceLibOID#
      </isNotNull>

      <isNotNull prepend="," property="PartOID">
        PartOID = #PartOID#
      </isNotNull>

      <isNotNull prepend="," property="LotNo">
        LotNo = #LotNo#
      </isNotNull>

      <isNotNull prepend="," property="OemLibOID">
        OemLibOID = #OemLibOID#
      </isNotNull>

      <isNotNull prepend="," property="WorkUserOID">
        WorkUserOID = #WorkUserOID#
      </isNotNull>

      <isNotNull prepend="," property="WriteDt">
        WriteDt = #WriteDt#
      </isNotNull>

      <isNotNull prepend="," property="PoorCnt">
        PoorCnt = #PoorCnt#
      </isNotNull>

      <isNotNull prepend="," property="OccurrenceAreaLibOID">
        OccurrenceAreaLibOID = #OccurrenceAreaLibOID#
      </isNotNull>

      <isNotNull prepend="," property="InduceLibOID">
        InduceLibOID = #InduceLibOID#
      </isNotNull>

      <isNotNull prepend="," property="DefectDegreeLibOID">
        DefectDegreeLibOID = #DefectDegreeLibOID#
      </isNotNull>

      <isNotNull prepend="," property="ImputeLibOID">
        ImputeLibOID = #ImputeLibOID#
      </isNotNull>

      <isNotNull prepend="," property="ImputeDepartmentOID">
        ImputeDepartmentOID = #ImputeDepartmentOID#
      </isNotNull>

      <isNotNull prepend="," property="ImputeSupplierOID">
        ImputeSupplierOID = #ImputeSupplierOID#
      </isNotNull>
       
      <isNotNull prepend="," property="Summary">
        Summary = #Summary#
      </isNotNull>

      <isNotNull prepend="," property="PoorDetail">
        PoorDetail = #PoorDetail#
      </isNotNull>

      <isNotNull prepend="," property="RecurrenceFl">
        RecurrenceFl = #RecurrenceFl#
      </isNotNull>

      <isNotNull prepend="," property="OccurrencePlace">
        OccurrencePlace = #OccurrencePlace#
      </isNotNull>

      <isNotNull prepend="," property="OccurrenceDt">
        OccurrenceDt = #OccurrenceDt#
      </isNotNull>

      <isNotNull prepend="," property="CorrectDecisionLibOID">
        CorrectDecisionLibOID = #CorrectDecisionLibOID#
      </isNotNull>

      <isNotNull prepend="," property="MeasureResponseDt">
        MeasureResponseDt = #MeasureResponseDt#
      </isNotNull>

      <isNotNull prepend="," property="Qa">
        Qa = #Qa#
      </isNotNull>

      <isNotNull prepend="," property="BlockadeMaterialFl">
        BlockadeMaterialFl = #BlockadeMaterialFl#
      </isNotNull>

      <isNotNull prepend="," property="BlockadeOutProductFl">
        BlockadeOutProductFl = #BlockadeOutProductFl#
      </isNotNull>

      <isNotNull prepend="," property="BlockadeProcessProductFl">
        BlockadeProcessProductFl = #BlockadeProcessProductFl#
      </isNotNull>

      <isNotNull prepend="," property="BlockadeFinishProductFl">
        BlockadeFinishProductFl = #BlockadeFinishProductFl#
      </isNotNull>

      <isNotNull prepend="," property="BlockadeStorageProductFl">
        BlockadeStorageProductFl = #BlockadeStorageProductFl#
      </isNotNull>

      <isNotNull prepend="," property="BlockadeShipProductFl">
        BlockadeShipProductFl = #BlockadeShipProductFl#
      </isNotNull>

      <isNotNull prepend="," property="PlanUserOID">
        PlanUserOID = #PlanUserOID#
      </isNotNull>

      <isNotNull prepend="," property="PoorPicture">
        PoorPicture = #PoorPicture#
      </isNotNull>

      WHERE OID = #OID#
    </update>

    <select id="SelQuickResponse" parameterClass="QuickResponse" resultClass="QuickResponse">
      SELECT A.OID, AO.Name, AO.Type, AO.BPolicyOID, A.PlantLibOID, C.KorNm AS PlantNm, A.OccurrenceLibOID, D.KorNm AS OccurrenceNm, A.PartOID, B.Name AS PartNo, A.LotNo, A.OemLibOID, E.KorNm AS OemNm, A.WorkUserOID, N.Name AS WorkUserNm, A.WriteDt, A.PoorCnt
      , A.Title, A.OccurrenceAreaLibOID, F.KorNm AS OccurrenceAreaNm, A.InduceLibOID, G.KorNm AS InduceNm, A.DefectDegreeLibOID, H.KorNm AS DefectDegreeNm, A.ImputeLibOID, I.KorNm AS ImputeNm, A.ImputeDepartmentOID
      , L.Name AS ImputeDepartmentNm, A.ImputeSupplierOID, L.Name AS ImputeSupplierNm, A.Summary, A.PoorDetail, A.RecurrenceFl, A.OccurrencePlace, A.OccurrenceDt, A.CorrectDecisionLibOID, K.KorNm AS CorrectDecisionNm,  A.MeasureResponseDt, A.Qa
      , A.BlockadeMaterialFl, A.BlockadeOutProductFl, A.BlockadeProcessProductFl, A.BlockadeFinishProductFl, A.BlockadeStorageProductFl
      , A.BlockadeShipProductFl, A.PlanUserOID, O.Name AS PlanUserNm, A.PoorPicture
      FROM T_DQMS_QUICK A
      LEFT JOIN V_DOBJECT AO ON A.OID = AO.OID
      LEFT JOIN V_DOBJECT B ON A.PartOID = B.OID AND B.Type = 'PART'
      LEFT JOIN T_DLIBRARY C ON A.PlantLibOID = C.OID
      LEFT JOIN T_DLIBRARY D ON A.OccurrenceLibOID = D.OID
      LEFT JOIN T_DLIBRARY E ON A.OemLibOID = E.OID
      LEFT JOIN T_DLIBRARY F ON A.OccurrenceAreaLibOID = F.OID
      LEFT JOIN T_DLIBRARY G ON A.InduceLibOID = G.OID
      LEFT JOIN T_DLIBRARY H ON A.DefectDegreeLibOID = H.OID
      LEFT JOIN T_DLIBRARY I ON A.ImputeLibOID = I.OID
      LEFT JOIN T_DLIBRARY J ON A.OccurrencePlace = J.OID
      LEFT JOIN T_DLIBRARY K ON A.CorrectDecisionLibOID = K.OID
      LEFT JOIN T_DOBJECT L ON A.ImputeDepartmentOID = L.OID AND L.Type = 'DEPARTMENT'
      LEFT JOIN T_DOBJECT M ON A.ImputeSupplierOID = M.OID AND M.Type = 'SUPPLIER'
      LEFT JOIN T_DOBJECT N ON A.WorkUserOID = N.OID AND N.Type = 'PERSON'
      LEFT JOIN T_DOBJECT O ON A.PlanUserOID = O.OID AND O.Type = 'PERSON'
      <dynamic prepend="where">
        <isNotNull prepend="and" property="OID">
          A.OID = #OID#
        </isNotNull>

        <isNotNull prepend="and" property="PlanUserOID">
          A.PlanUserOID = #PlanUserOID#
        </isNotNull>

        <isNotNull prepend="and" property="Title">
          A.Title LIKE '%' + #Title# + '%'
        </isNotNull>

        <isNotNull prepend="and" property="PartOID">
          A.PartOID = #PartOID#
        </isNotNull>

        <isNotNull prepend="and" property="PartNo">
          B.Name = #PartNo#
        </isNotNull>
      </dynamic>
    </select>

    <select id="SelQuickResponseGridView">
      SELECT
      A.OccurrenceDt, D.KorNm AS OccurrenceNm, B.Name AS PartNo, 'PART_NM' AS PartNm, 'CAR_CODE' AS CarCode, 'PART_GRP_NM' AS PartGrpNm, A.Summary. B.CreateUsNm

      FROM T_DQMS_QUICK A
      LEFT JOIN V_DOBJECT B ON A.OID = B.OID
      LEFT JOIN V_DOBJECT C ON A.PartOID = C.OID AND C.Type = 'PART'
      LEFT JOIN T_DLIBRARY D ON A.OccurrenceLibOID = D.OID
    </select>

    <!-- Module -->
    <insert id="InsQuickResponseModule" parameterClass="QuickResponseModule">
      INSERT INTO T_DQMS_QUICK_MODULE
      (OID,
      QuickOID,
      ModuleFl)
      VALUES
      (#OID#,
      #QuickOID#,
      1)
    </insert>
    
    <update id="UdtQuickResponseModule" parameterClass="QuickResponseModule">
      UPDATE T_DQMS_QUICK_MODULE
      SET
      ModuleFl = #ModuleFl#,
      EstEndDt = #EstEndDt#,
      ChargeUserOID = #ChargeUserOID#
      WHERE OID = #OID#
    </update>

    <select id="SelQuickResponseModule" parameterClass="QuickResponseModule" resultClass="QuickResponseModule">
      SELECT A.*, B.Type AS ModuleType, C.Name AS ChargeUserNm, D.Name AS BPolicyNm FROM T_DQMS_QUICK_MODULE A
      LEFT JOIN T_DOBJECT B ON A.OID = B.OID
      LEFT JOIN T_DOBJECT C ON A.ChargeUserOID = C.OID AND C.Type = 'PERSON'
      LEFT JOIN T_BPOLICY D ON B.BPolicyOID = D.OID
      <dynamic prepend="where">
        <isNotNull prepend="and" property="QuickOID">
          QuickOID = #QuickOID#
        </isNotNull>
        <isNotNull prepend="and" property="OID">
          OID = #OID#
        </isNotNull>
      </dynamic>

    </select>

    <!-- Blockade -->
    <insert id="InsBlockadeItem" parameterClass="BlockadeItem">
      INSERT INTO T_DQMS_BLOCKADE
      (OID,
      ModuleOID)
      VALUES
      (#OID#,
      #ModuleOID#)

    </insert>

    <update id="UdtBlockadeItem" parameterClass="BlockadeItem">
      UPDATE T_DQMS_BLOCKADE
      SET
      TargetScope = #TargetScope#,
      Act = #Act#,
      TargetCnt = #TargetCnt#,
      ActDepartmentOID = #ActDepartmentOID#,
      ActUserOID = #ActUserOID#,
      ActStartDt = #ActStartDt#,
      ActEndDt = #ActEndDt#,
      SortSuitableCnt = #SortSuitableCnt#,
      SortIncongruityCnt = #SortIncongruityCnt#,
      ReworkCnt = #ReworkCnt#,
      DisuseCnt = #DisuseCnt#,
      SpecialCnt = #SpecialCnt#,
      EtcCnt = #EtcCnt#
      WHERE OID = #OID#
    </update>
    
    <select id="SelBlockadeItem" parameterClass="BlockadeItem" resultClass="BlockadeItem">
      SELECT A.OID, B.Type, B.Name, A.ModuleOID, A.TargetScope, A.Act, A.TargetCnt, A.ActDepartmentOID, C.Name AS ActDepartmentNm, A.ActUserOID, D.Name AS ActUserNm, A.ActStartDt
      , A.ActEndDt, A.SortSuitableCnt, A.SortIncongruityCnt, A.ReworkCnt, A.DisuseCnt, A.SpecialCnt, A.EtcCnt, B.Description
      FROM T_DQMS_BLOCKADE A
      LEFT JOIN T_DOBJECT B ON A.OID = B.OID
      LEFT JOIN T_DOBJECT C ON A.ActDepartmentOID = C.OID
      LEFT JOIN T_DOBJECT D ON A.ActUserOID = D.OID

      <dynamic prepend="where">
        <isNotNull prepend="AND" property="OID">
          A.OID = #OID#
        </isNotNull>
        <isNotNull prepend="AND" property="ModuleOID">
          A.ModuleOID = #ModuleOID#
        </isNotNull>
        <isNotNull prepend="AND" property="Type">
          A.Type = #Type#
        </isNotNull>
      </dynamic>

    </select>

    <!-- OccurrenceCauseItem -->
    <insert id="InsOccurrenceCauseItem" parameterClass="OccurrenceCauseItem">
      INSERT INTO T_DQMS_OCCURRENCE_CAUSE
      (OID,
      ModuleOID,
      OccurrenceCauseLibOID)
      VALUES
      (#OID#,
      #ModuleOID#,
      #OccurrenceCauseLibOID#)
    </insert>

    <update id="UdtOccurrenceCauseItem" parameterClass="OccurrenceCauseItem">
      UPDATE T_DQMS_OCCURRENCE_CAUSE
      SET     
      OccurrenceCauseLibOID = #OccurrenceCauseLibOID#
      WHERE OID = #OID#
    </update>

    <delete id="DelOccurrenceCauseItem" parameterClass="OccurrenceCauseItem">
      DELETE T_DQMS_OCCURRENCE_CAUSE WHERE OID = #OID#
    </delete>

    <select id="SelOccurrenceCauseItem" parameterClass="OccurrenceCauseItem" resultClass="OccurrenceCauseItem">
      SELECT A.OID, B.Name, B.Description, A.ModuleOID, A.OccurrenceCauseLibOID, C.KorNm AS OccurrenceCauseLibText
      FROM T_DQMS_OCCURRENCE_CAUSE A
      LEFT JOIN T_DOBJECT B ON A.OID = B.OID
      LEFT JOIN T_DLIBRARY C ON A.OccurrenceCauseLibOID = C.OID
      <dynamic prepend="where">
        <isNotNull prepend="and" property="OID">
          A.OID = #OID#
        </isNotNull>

        <isNotNull prepend="and" property="ModuleOID">
          A.ModuleOID = #ModuleOID#
        </isNotNull>        
    </dynamic>
    </select>
    <!-- OccurrenceWhy -->
    <insert id="InsOccurrenceWhy" parameterClass="OccurrenceWhy">
      INSERT INTO T_DQMS_OCCURRENCE_WHY
      (OID,
      CauseOID,
      OccurrenceCauseDetail)
      VALUES
      (#OID#,
      #CauseOID#,
      #OccurrenceCauseDetail#)
    </insert>

    <update id="UdtOccurrenceWhy" parameterClass="OccurrenceWhy">
      UPDATE T_DQMS_OCCURRENCE_WHY
      SET
      OccurrenceCauseDetail = #OccurrenceCauseDetail#
      WHERE OID = #OID#

    </update>

    <delete id="DelOccurrenceWhy" parameterClass="OccurrenceWhy">
      DELETE FROM T_DQMS_OCCURRENCE_WHY
      WHERE OID = #OID#

    </delete>

    <select id="SelOccurrenceWhy" parameterClass="OccurrenceWhy" resultClass="OccurrenceWhy">
      SELECT A.OID, B.Name, B.Description, A.CauseOID, A.OccurrenceCauseDetail
      FROM T_DQMS_OCCURRENCE_WHY A
      LEFT JOIN T_DOBJECT B ON A.OID = B.OID
      WHERE B.DeleteDt IS NULL
      <isNotNull prepend="and" property="OID">
          A.OID = #OID#
        </isNotNull>

      <isNotNull prepend="and" property="CauseOID">
        A.CauseOID = #CauseOID#
      </isNotNull>  
    </select>
    <!-- DetectCounterMeasure -->   
    <update id="UdtDetectCounterMeasure" parameterClass="DetectCounterMeasure">
      MERGE INTO T_DQMS_DETECT_COUNTERMEASURE AS T
      USING (
      SELECT
      #ModuleOID# AS ModuleOID
      , #DetectM# AS DetectM
      , #DetectMDetail# AS DetectMDetail
      , #DetectS# AS DetectS
      , #DetectSDetail# AS DetectSDetail
      , #DetectQ# AS DetectQ
      , #DetectQDetail# AS DetectQDetail
      , #DetectE# AS DetectE
      , #DetectEDetail# AS DetectEDetail
      , #LeakCause1# AS LeakCause1
      , #LeakCause2# AS LeakCause2
      , #LeakCause3# AS LeakCause3
      , #DetectDt# AS DetectDt
      , #Measure# AS Measure) B
      ON T.ModuleOID = B.ModuleOID
      WHEN MATCHED THEN
      UPDATE SET
      DetectM = B.DetectM,
      DetectMDetail = B.DetectMDetail,
      DetectS = B.DetectS,
      DetectSDetail = B.DetectSDetail,
      DetectQ = B.DetectQ,
      DetectQDetail = B.DetectQDetail,
      DetectE = B.DetectE,
      DetectEDetail = B.DetectEDetail,
      LeakCause1 = B.LeakCause1,
      LeakCause2 = B.LeakCause2,
      LeakCause3 = B.LeakCause3,
      DetectDt = B.DetectDt,
      Measure = B.Measure
      WHEN NOT MATCHED THEN
      INSERT (
      ModuleOID,
      DetectM,
      DetectMDetail,
      DetectS,
      DetectSDetail,
      DetectQ,
      DetectQDetail,
      DetectE,
      DetectEDetail,
      LeakCause1,
      LeakCause2,
      LeakCause3,
      DetectDt,
      Measure)
      VALUES (
      #ModuleOID#,
      #DetectM#,
      #DetectMDetail#,
      #DetectS#,
      #DetectSDetail#,
      #DetectQ#,
      #DetectQDetail#,
      #DetectE#,
      #DetectEDetail#,
      #LeakCause1#,
      #LeakCause2#,
      #LeakCause3#,
      #DetectDt#,
      #Measure#);
    </update>

    <select id="SelDetectCounterMeasure" parameterClass="DetectCounterMeasure" resultClass="DetectCounterMeasure">
      SELECT A.ModuleOID, A.DetectM, A.DetectMDetail, A.DetectS, A.DetectSDetail, A.DetectQ, A.DetectQDetail, A.DetectE, A.DetectEDetail, A.LeakCause1, A.LeakCause2, A.LeakCause3, A.DetectDt, A.Measure
      FROM T_DQMS_DETECT_COUNTERMEASURE A    
      <dynamic prepend="where">      
        <isNotNull prepend="and" property="ModuleOID">
          A.ModuleOID = #ModuleOID#
        </isNotNull>
      </dynamic>
    </select>
    
    <!--ImproveCounterMeasure-->
    <insert id="InsImproveCounterMeasure" parameterClass="ImproveCounterMeasure">
      INSERT INTO T_DQMS_IMPROVE_COUNTERMEASURE
      (OID,
      ModuleOID,
      RootCause,
      ImproveCountermeasure,
      ProcessDt)
      VALUES
      (#OID#,
      #ModuleOID#,
      #RootCause#,
      #ImproveCountermeasure#,
      #ProcessDt#)
    </insert>

    <update id="UdtImproveCounterMeasure" parameterClass="ImproveCounterMeasure">
      UPDATE T_DQMS_IMPROVE_COUNTERMEASURE
      SET
      RootCause = #RootCause#,
      ImproveCountermeasure = #ImproveCountermeasure#,
      ProcessDt = #ProcessDt#
      WHERE OID = #OID#
    </update>

    <select id="SelImproveCounterMeasure" parameterClass="ImproveCounterMeasure" resultClass="ImproveCounterMeasure">
      SELECT A.OID, B.Name, B.Description, A.ModuleOID, A.RootCause, A.ImproveCountermeasure, A.ProcessDt
      FROM T_DQMS_IMPROVE_COUNTERMEASURE A
      LEFT JOIN T_DOBJECT B ON A.OID = B.OID
      WHERE B.DeleteDt IS NULL
      <isNotNull prepend="and" property="OID">
        A.OID = #OID#
      </isNotNull>

      <isNotNull prepend="and" property="ModuleOID">
        A.ModuleOID = #ModuleOID#
      </isNotNull>
    </select>
    
    <!-- WorkerEdu SQL-->
    <select id="SelWorkerEdu" parameterClass="WorkerEdu" resultClass="WorkerEdu">
      SELECT A.*
      FROM T_DQMS_WORKER_EDU A
      <dynamic prepend="where">
      </dynamic>
    </select>

    <insert id="InsWorkerEdu" parameterClass="WorkerEdu">
      INSERT INTO T_DQMS_WORKER_EDU
      (ModuleOID,
      EduDetail,
      EduPlan,
      EduDt,
      EduUserOID)
      VALUES
      (#ModuleOID#,
      #EduDetail#,
      #EduPlan#,
      #EduDt#,
      #EduUserOID#)
    </insert>

    <update id="UdtWorkerEdu" parameterClass="WorkerEdu">
      UPDATE T_DQMS_WORKER_EDU
      SET
      EduDetail = #EduDetail#,
      EduPlan = #EduPlan#,
      EduDt = #EduDt#,
      EduUserOID = #EduUserOID#
      WHERE ModuleOID = #ModuleOID#
    </update>

    <!-- QuickValidation SQL-->
    <select id="SelQmsCheck" parameterClass="QmsCheck" resultClass="QmsCheck">
      SELECT A.*
      FROM T_DQMS_CHECK A
      <dynamic prepend="where">
      </dynamic>
    </select>

    <insert id="InsQmsCheck" parameterClass="QmsCheck">
      INSERT INTO T_DQMS_CHECK
      (OID,
      ModuleOID,
      Cnt,
      CheckSt,
      CheckEt,
      CheckUserOID,
      CheckDt,
      CheckFl,
      CheckDetail,
      FinishFl,
      FinishDetail)
      VALUES
      (#OID#,
      #ModuleOID#,
      #Cnt#,
      #CheckSt#,
      #CheckEt#,
      #CheckUserOID#,
      #CheckDt#,
      #CheckFl#,
      #CheckDetail#,
      #FinishFl#,
      #FinishDetail#);
    </insert>

    <update id="UdtQmsCheck" parameterClass="QmsCheck">
      UPDATE T_DQMS_WORKER_EDU
      SET
      CheckSt = #CheckSt#,
      CheckEt = #CheckEt#,
      CheckUserOID = #CheckUserOID#,
      CheckDt = #CheckDt#,
      CheckFl = #CheckFl#,
      CheckDetail = #CheckDetail#,
      FinishFl = #FinishFl#,
      FinishDetail = #FinishDetail#
      WHERE ModuleOID = #ModuleOID#;
    </update>
    
    <!-- StdDoc SQL -->
    <select id="SelStandardDoc" parameterClass="StandardDoc" resultClass="StandardDoc">
      SELECT A.*
      FROM T_DQMS_STANDARD_DOC A
      <dynamic prepend="where">
      </dynamic>
    </select>

    <insert id="InsStandardDoc" parameterClass="StandardDoc">
      INSERT INTO T_DQMS_STANDARD_DOC
      (OID,
      ModuleOID,
      DocType,
      DocOID,
      DocSummary,
      DocCompleteDt)
      VALUES
      (#OID#,
      #ModuleOID#,
      #DocType#,
      #DocOID#,
      #DocSummary#,
      #DocCompleteDt#);
    </insert>

    <update id="UdtStandardDoc" parameterClass="StandardDoc">
      UPDATE T_DQMS_STANDARD_DOC
      SET
      DocType = #DocType#,
      DocOID = #DocOID#,
      DocSummary = #DocSummary#,
      DocCompleteDt = #DocCompleteDt#
      WHERE OID = #OID# AND ModuleOID = #ModuleOID#;
    </update>
  </statements>
  
</sqlMap>