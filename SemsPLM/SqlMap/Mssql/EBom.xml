<?xml version="1.0" encoding="utf-8" ?>
<sqlMap
 namespace="EBom"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <alias>
    <typeAlias alias="EBom"  type="EBom.Models.EBOM" />
    <typeAlias alias="EPart" type="EBom.Models.EPart" />
  </alias>

  <statements>

    <select id="SelEPart" parameterClass="EPart" resultClass="EPart">
      SELECT
      A.*
      , B.*
      FROM T_DOBJECT A
      LEFT OUTER JOIN T_DEPART B ON B.OID = A.OID
      WHERE A.DeleteDt IS NULL
      AND A.Type = 'PART'
      <isNotNull property="OID">
        AND A.OID = #OID#
      </isNotNull>
      <isNotNull property="Name">
        AND A.Name like '%' + #Name# + '%'
      </isNotNull>
      <isNotNull property="Car_Lib_OID">
        AND B.Car_Lib_OID = #Car_Lib_OID#
      </isNotNull>
      <isNotNull property="EPartType">
        AND B.EPartType = #EPartType#
      </isNotNull>
      <isNotNull property="Division">
        AND B.Division = #Division#
      </isNotNull>
      <isNotNull property="ITEM_No">
        AND B.ITEM_No = #ITEM_No#
      </isNotNull>
        <isNotNull property="StartCreateDt">
          AND A.CreateDt &gt;= #StartCreateDt#
        </isNotNull>
      <isNotNull property="EndCreateDt">
        AND A.CreateDt &lt;= #EndCreateDt#
      </isNotNull>
      
    </select>

    <select id="ChkEPart" parameterClass="EPart" resultClass="EPart">
      SELECT
      A.*
      , B.*
      FROM T_DOBJECT A
      LEFT OUTER JOIN T_DEPART B ON B.OID = A.OID
      WHERE A.DeleteDt IS NULL
      AND A.Type = 'PART'
      AND A.Name = #Name#
    </select>

    <select id="SelEBom" parameterClass="EBom" resultClass="EBom">
      SELECT A.*
      FROM T_DEBOM_RELATIONSHIP A
      LEFT OUTER JOIN T_DEPART B ON B.OID = A.ToOID
      WHERE A.DeleteDt IS NULL
      AND A.Type = 'PART'
      <isNotNull property="OID">
        AND A.OID = #OID#
      </isNotNull>
      <isNotNull property="FromOID">
        AND A.FromOID = #FromOID#
      </isNotNull>
      <isNotNull property="ToOID">
        AND A.ToOID = #ToOID#
      </isNotNull>
    </select>

    <insert id="InsEPart" parameterClass="EPart" >
      INSERT INTO T_DEPART
      ( OID
      , Car_Lib_OID
      , Material_OID
      , Division
      , EPartType
      , ITEM_No
      , ITEM_Middle
      , Production_Place
      , Block_No
      , Serial
      , Sel_Revision

      )
      VALUES
      (#OID#
      , #Car_Lib_OID#
      , #Material_OID#
      , #Division#
      , #EPartType#
      , #ITEM_No#
      , #ITEM_Middle#
      , #Production_Place#
      , #Block_No#
      , #Serial#
      , #Sel_Revision#
      )
    </insert>

    <update id="UpdateEPart" parameterClass="EPart">
      UPDATE T_DEPART
      SET
      Title = #Title#
      , Rep_Part_No = #Rep_Part_No#
      , Rep_Part_No2 = #Rep_Part_No2#
      , Eo_No = #Eo_No#
      , Eo_No_ApplyDt = #Eo_No_ApplyDt#
      , Eo_No_History = #Eo_No_History#
      , Etc = #Etc#
      , EPartType = #EPartType#
      , Sel_Eo = #Sel_Eo#
      , Sel_Eo_Dt = #Sel_Eo_Dt#
      , Spec = #Spec#
      , Surface = #Surface#
      , Material_OID = #Material_OID#
      , Prod_Lib_Lev1_OID = #Prod_Lib_Lev1_OID#
      , Prod_Lib_Lev2_OID = #Prod_Lib_Lev2_OID#
      , Prod_Lib_Lev3_OID = #Prod_Lib_Lev3_OID#
      , CO = #CO#
      , Etc_Delivery = #Etc_Delivery#
      WHERE OID = #OID#
    </update>

    <select id="SelRootChildList" parameterClass="EPart" resultClass="EPart">
      WITH RECURSIVE_QUERY(FromOID, ToOID) AS (
      SELECT FromOID
      ,ToOID
      FROM T_DEBOM_RELATIONSHIP
      WHERE FromOID = #FromOID#
      UNION ALL
      SELECT
      B.FromOID
      ,B.ToOID
      FROM T_DEBOM_RELATIONSHIP B, RECURSIVE_QUERY C
      WHERE B.FromOID = C.ToOID
      )
      SELECT
      E.*
      , F.*
      FROM RECURSIVE_QUERY D
      LEFT OUTER JOIN T_DOBJECT E ON E.OID = D.ToOID
      LEFT OUTER JOIN T_DEPART F ON F.OID = D.ToOID
    </select>

    <insert id="InsEBomStructure" parameterClass="EBom" >
      <selectKey type="pre" resultClass="int" property="OID">
        SELECT ISNULL(MAX(OID),0) + 1 AS OID FROM T_DEBOM_RELATIONSHIP
      </selectKey>
      INSERT INTO T_DEBOM_RELATIONSHIP
      ( OID
      , FromOID
      , ToOID
      , Count
      , Type
      , Ord
      , CreateDt
      , CreateUs
      )
      VALUES
      ( #OID#
      , #FromOID#
      , #ToOID#
      , #Count#
      , 'PART'
      , #Ord#
      , GETDATE()
      , 1
      )
    </insert>

    <delete id="delEBomStructure" parameterClass="EBom" >
      DELETE FROM T_DEBOM_RELATIONSHIP
      WHERE 1 = 1
      AND OID = #OID#
    </delete>

    <update id="RuEBomStructure" parameterClass="EBom">
      UPDATE T_DEBOM_RELATIONSHIP
      SET
      FromOID = #FromOID#
      , ToOID = #ToOID#
      , Count = #Count#
      , Ord = #Ord#
      WHERE OID = #OldOID#
    </update>

    <update id="UdtEBomStructure" parameterClass="EBom">
      UPDATE T_DEBOM_RELATIONSHIP
      SET
      Count = #Count#
      , Ord = #Ord#
      WHERE 1 = 1 
      AND FromOID = #FromOID#
      AND ToOID = #ToOID#
    </update>

    <select id="SelRootChildEBomList" parameterClass="EBom" resultClass="EBom">
      WITH RECURSIVE_QUERY(OID, FromOID, ToOID, Type, Count, Ord) AS (
      SELECT
      OID
      , FromOID
      , ToOID
      , Type
      , Count
      , Ord
      FROM T_DEBOM_RELATIONSHIP
      WHERE FromOID = #FromOID#
      UNION ALL
      SELECT
      B.OID
      , B.FromOID
      , B.ToOID
      , B.Type
      , B.Count
      , B.Ord
      FROM T_DEBOM_RELATIONSHIP B, RECURSIVE_QUERY C
      WHERE B.FromOID = C.ToOID
      )
      SELECT *
      FROM RECURSIVE_QUERY
    </select>


  </statements>
  
</sqlMap>